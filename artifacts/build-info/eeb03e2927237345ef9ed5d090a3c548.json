{"id":"eeb03e2927237345ef9ed5d090a3c548","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  ) external returns (bool success);\n\n  function transferFrom(\n    address from,\n    address to,\n    uint256 value\n  ) external returns (bool success);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n}\n"},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"content":"// SPDX-License-Identifier: MIT\n// A mock for testing code that relies on VRFCoordinatorV2.\npragma solidity ^0.8.4;\n\nimport \"../interfaces/LinkTokenInterface.sol\";\nimport \"../interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"../VRFConsumerBaseV2.sol\";\n\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\n  uint96 public immutable BASE_FEE;\n  uint96 public immutable GAS_PRICE_LINK;\n\n  error InvalidSubscription();\n  error InsufficientBalance();\n  error MustBeSubOwner(address owner);\n\n  event RandomWordsRequested(\n    bytes32 indexed keyHash,\n    uint256 requestId,\n    uint256 preSeed,\n    uint64 indexed subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords,\n    address indexed sender\n  );\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\n  event SubscriptionCreated(uint64 indexed subId, address owner);\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\n\n  uint64 s_currentSubId;\n  uint256 s_nextRequestId = 1;\n  uint256 s_nextPreSeed = 100;\n  struct Subscription {\n    address owner;\n    uint96 balance;\n  }\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\n\n  struct Request {\n    uint64 subId;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n  }\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\n\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\n    BASE_FEE = _baseFee;\n    GAS_PRICE_LINK = _gasPriceLink;\n  }\n\n  /**\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n   * @notice consumer.\n   *\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n   * @dev against the real coordinator a small amount of additional LINK is required.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   */\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\n    uint256 startGas = gasleft();\n    if (s_requests[_requestId].subId == 0) {\n      revert(\"nonexistent request\");\n    }\n    Request memory req = s_requests[_requestId];\n\n    uint256[] memory words = new uint256[](req.numWords);\n    for (uint256 i = 0; i < req.numWords; i++) {\n      words[i] = uint256(keccak256(abi.encode(_requestId, i)));\n    }\n\n    VRFConsumerBaseV2 v;\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, words);\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\n\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\n    if (s_subscriptions[req.subId].balance < payment) {\n      revert InsufficientBalance();\n    }\n    s_subscriptions[req.subId].balance -= payment;\n    delete (s_requests[_requestId]);\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\n  }\n\n  /**\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n   *\n   * @param _subId the subscription to fund\n   * @param _amount the amount to fund\n   */\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    uint96 oldBalance = s_subscriptions[_subId].balance;\n    s_subscriptions[_subId].balance += _amount;\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\n  }\n\n  function requestRandomWords(\n    bytes32 _keyHash,\n    uint64 _subId,\n    uint16 _minimumRequestConfirmations,\n    uint32 _callbackGasLimit,\n    uint32 _numWords\n  ) external override returns (uint256) {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n\n    uint256 requestId = s_nextRequestId++;\n    uint256 preSeed = s_nextPreSeed++;\n\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\n\n    emit RandomWordsRequested(\n      _keyHash,\n      requestId,\n      preSeed,\n      _subId,\n      _minimumRequestConfirmations,\n      _callbackGasLimit,\n      _numWords,\n      msg.sender\n    );\n    return requestId;\n  }\n\n  function createSubscription() external override returns (uint64 _subId) {\n    s_currentSubId++;\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\n    return s_currentSubId;\n  }\n\n  function getSubscription(uint64 _subId)\n    external\n    view\n    override\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    )\n  {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, new address[](0));\n  }\n\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\n    delete (s_subscriptions[_subId]);\n  }\n\n  modifier onlySubOwner(uint64 _subId) {\n    address owner = s_subscriptions[_subId].owner;\n    if (owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    if (msg.sender != owner) {\n      revert MustBeSubOwner(owner);\n    }\n    _;\n  }\n\n  function getRequestConfig()\n    external\n    pure\n    override\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    )\n  {\n    return (3, 2000000, new bytes32[](0));\n  }\n\n  function addConsumer(uint64 _subId, address _consumer) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function removeConsumer(uint64 _subId, address _consumer) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\n    revert(\"not implemented\");\n  }\n}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/BasicNft.sol":{"content":"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\npragma solidity ^0.8.7;\n\ncontract BasicNft is ERC721 {\n    string public constant TOKEN_URI =\n        \"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\";\n    uint256 private s_tokenCounter;\n\n    constructor() ERC721(\"Dogie\", \"DOG\") {\n        s_tokenCounter = 0;\n    }\n\n    function mintNft() public returns (uint256) {\n        _safeMint(msg.sender, s_tokenCounter);\n        s_tokenCounter = s_tokenCounter + 1;\n        return s_tokenCounter;\n    }\n\n    function tokenURI(uint256 /*tokenId*/) public pure override returns (string memory) {\n        //\n        return TOKEN_URI;\n    }\n\n    function getTokenCounter() public view returns (uint256) {\n        return s_tokenCounter;\n    }\n}\n"},"contracts/RandomIpfsNft.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nerror RandomIpfsNft__RangeOutOfBounds();\nerror RandomIpfsNft__NeedMoreETHSent();\nerror RandomIpfsNft__TransferFailed();\n\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage, Ownable {\n    //Type Declaration\n    enum Breed {\n        PUG,\n        SHIBA_INU,\n        ST_BERNARD\n    }\n\n    //Chanlink VRF Variables\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\n    uint64 private immutable i_subscriptionId;\n    bytes32 private immutable i_gasLane;\n    uint32 private immutable i_callbackGasLimit;\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\n    uint32 private constant NUM_WORDS = 1;\n\n    //NFT variables\n    uint256 private s_tokenCounter;\n    uint256 internal constant MAX_CHANCE_VALUE = 100;\n    string[] internal s_dogTokenURIs;\n    uint256 internal immutable i_mintFee;\n\n    //Events\n    event NftRequested(uint256 indexed requestId, address requester);\n    event NftMinted(Breed dogBreed, address minter);\n\n    //VRF helper\n    mapping(uint256 => address) public s_requestIdToSender;\n\n    constructor(\n        address vrfCoordinatorV2,\n        uint64 subscriptionId,\n        bytes32 gasLane,\n        uint256 mintFee,\n        uint32 callbackGasLimit,\n        string[3] memory dogTokenURIs\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) ERC721(\"Random IPFS NFT\", \"RIN\") {\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\n        i_subscriptionId = subscriptionId;\n        i_gasLane = gasLane;\n        i_callbackGasLimit = callbackGasLimit;\n        s_dogTokenURIs = dogTokenURIs;\n        i_mintFee = mintFee;\n    }\n\n    function requestNft() public payable returns (uint256 requestId) {\n        if (msg.value < i_mintFee) {\n            revert RandomIpfsNft__NeedMoreETHSent();\n        }\n        requestId = i_vrfCoordinator.requestRandomWords(\n            i_gasLane,\n            i_subscriptionId,\n            REQUEST_CONFIRMATIONS,\n            i_callbackGasLimit,\n            NUM_WORDS\n        );\n        s_requestIdToSender[requestId] = msg.sender;\n        emit NftRequested(requestId, msg.sender);\n    }\n\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\n        address dogOwner = s_requestIdToSender[requestId];\n        uint256 newTokenId = s_tokenCounter;\n        s_tokenCounter = s_tokenCounter + 1;\n        //what does this token look like?\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\n        //0-99\n        //7-> PUG\n        //88 -> st bernard\n\n        Breed dogBreed = getBreedFromModdedRng(moddedRng);\n\n        _safeMint(dogOwner, newTokenId);\n        _setTokenURI(newTokenId, s_dogTokenURIs[uint256(dogBreed)]);\n        emit NftMinted(dogBreed, dogOwner);\n    }\n\n    function withdraw() public onlyOwner {\n        uint256 amount = address(this).balance;\n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\n        if (!success) {\n            revert RandomIpfsNft__TransferFailed();\n        }\n    }\n\n    //返回品种\n    function getBreedFromModdedRng(uint256 moddedRng) public pure returns (Breed) {\n        uint256 cumulativeSum = 0;\n        uint256[3] memory chanceArray = getChanceArray();\n        for (uint256 i = 0; i < chanceArray.length; i++) {\n            // Pug = 0 - 9  (10%)\n            // Shiba-inu = 10 - 39  (30%)\n            // St. Bernard = 40 = 99 (60%)\n            if (moddedRng >= cumulativeSum && moddedRng < chanceArray[i]) {\n                return Breed(i);\n            }\n            cumulativeSum = chanceArray[i];\n        }\n        revert RandomIpfsNft__RangeOutOfBounds();\n    }\n\n    function getChanceArray() public pure returns (uint256[3] memory) {\n        return [10, 30, MAX_CHANCE_VALUE];\n    }\n\n    function getMintFee() public view returns (uint256) {\n        return i_mintFee;\n    }\n\n    function getDogTokenURIs(uint256 index) public view returns (string memory) {\n        return s_dogTokenURIs[index];\n    }\n\n    function getTokenCounter() public view returns (uint256) {\n        return s_tokenCounter;\n    }\n}\n"},"contracts/test/VRFCoordinatorV2Mock.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\";\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:186:24:\n    |\n186 |   function addConsumer(uint64 _subId, address _consumer) external pure override {\n    |                        ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5777,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5764},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:186:39:\n    |\n186 |   function addConsumer(uint64 _subId, address _consumer) external pure override {\n    |                                       ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5796,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5779},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:190:27:\n    |\n190 |   function removeConsumer(uint64 _subId, address _consumer) external pure override {\n    |                           ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5898,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5885},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:190:42:\n    |\n190 |   function removeConsumer(uint64 _subId, address _consumer) external pure override {\n    |                                          ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5917,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5900},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:194:45:\n    |\n194 |   function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    |                                             ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6037,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":6024},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:194:60:\n    |\n194 |   function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    |                                                            ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6056,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":6039},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:198:44:\n    |\n198 |   function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\n    |                                            ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6175,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":6162},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[57]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"57:5275:0","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":57,"linearizedBaseContracts":[57],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:0","nodeType":"ContractDefinition","nodes":[{"id":8,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"have","nameLocation":"5413:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5405:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"want","nameLocation":"5427:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5419:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:0"},"src":"5373:60:0"},{"constant":false,"id":10,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:0","nodeType":"VariableDeclaration","scope":57,"src":"5436:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":20,"nodeType":"Block","src":"5593:43:0","statements":[{"expression":{"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":16,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"5599:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"5616:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19,"nodeType":"ExpressionStatement","src":"5599:32:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"5481:72:0","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":21,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:0","nodeType":"VariableDeclaration","scope":21,"src":"5568:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"5593:0:0"},"scope":57,"src":"5556:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"5640:686:0","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":30,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:0","nodeType":"VariableDeclaration","scope":30,"src":"6357:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:0","nodeType":"VariableDeclaration","scope":30,"src":"6376:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26,"nodeType":"ArrayTypeName","src":"6376:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"6422:0:0"},"scope":57,"src":"6329:94:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":55,"nodeType":"Block","src":"6707:167:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":38,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":40,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6731:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49,"nodeType":"IfStatement","src":"6713:109:0","trueBody":{"id":48,"nodeType":"Block","src":"6747:75:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":43,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6800:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":42,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"6762:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47,"nodeType":"RevertStatement","src":"6755:60:0"}]}},{"expression":{"arguments":[{"id":51,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"6846:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":52,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"6857:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":50,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"6827:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"6827:42:0"}]},"functionSelector":"1fe543e3","id":56,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:0","nodeType":"VariableDeclaration","scope":56,"src":"6649:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:0","nodeType":"VariableDeclaration","scope":56,"src":"6668:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34,"nodeType":"ArrayTypeName","src":"6668:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"6707:0:0"},"scope":57,"src":"6618:256:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":58,"src":"5333:1543:0","usedErrors":[8]}],"src":"32:6845:0"},"id":0},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[152]},"id":153,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":152,"linearizedBaseContracts":[152],"name":"LinkTokenInterface","nameLocation":"67:18:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":68,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"99:9:1","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"owner","nameLocation":"117:5:1","nodeType":"VariableDeclaration","scope":68,"src":"109:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"109:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"spender","nameLocation":"132:7:1","nodeType":"VariableDeclaration","scope":68,"src":"124:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"124:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108:32:1"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"remaining","nameLocation":"172:9:1","nodeType":"VariableDeclaration","scope":68,"src":"164:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:19:1"},"scope":152,"src":"90:93:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":77,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"196:7:1","nodeType":"FunctionDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"spender","nameLocation":"212:7:1","nodeType":"VariableDeclaration","scope":77,"src":"204:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"value","nameLocation":"229:5:1","nodeType":"VariableDeclaration","scope":77,"src":"221:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203:32:1"},"returnParameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"success","nameLocation":"259:7:1","nodeType":"VariableDeclaration","scope":77,"src":"254:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":74,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:14:1"},"scope":152,"src":"187:81:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":84,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"281:9:1","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"owner","nameLocation":"299:5:1","nodeType":"VariableDeclaration","scope":84,"src":"291:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:15:1"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"balance","nameLocation":"337:7:1","nodeType":"VariableDeclaration","scope":84,"src":"329:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:17:1"},"scope":152,"src":"272:74:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"359:8:1","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"367:2:1"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"decimalPlaces","nameLocation":"399:13:1","nodeType":"VariableDeclaration","scope":89,"src":"393:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":86,"name":"uint8","nodeType":"ElementaryTypeName","src":"393:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"392:21:1"},"scope":152,"src":"350:64:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":98,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"427:16:1","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"spender","nameLocation":"452:7:1","nodeType":"VariableDeclaration","scope":98,"src":"444:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"addedValue","nameLocation":"469:10:1","nodeType":"VariableDeclaration","scope":98,"src":"461:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"443:37:1"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"success","nameLocation":"504:7:1","nodeType":"VariableDeclaration","scope":98,"src":"499:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":95,"name":"bool","nodeType":"ElementaryTypeName","src":"499:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:14:1"},"scope":152,"src":"418:95:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":105,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"526:16:1","nodeType":"FunctionDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"spender","nameLocation":"551:7:1","nodeType":"VariableDeclaration","scope":105,"src":"543:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"subtractedValue","nameLocation":"568:15:1","nodeType":"VariableDeclaration","scope":105,"src":"560:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"542:42:1"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[],"src":"593:0:1"},"scope":152,"src":"517:77:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":110,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"607:4:1","nodeType":"FunctionDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[],"src":"611:2:1"},"returnParameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"tokenName","nameLocation":"651:9:1","nodeType":"VariableDeclaration","scope":110,"src":"637:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":107,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"636:25:1"},"scope":152,"src":"598:64:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":115,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"675:6:1","nodeType":"FunctionDefinition","parameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"681:2:1"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"tokenSymbol","nameLocation":"721:11:1","nodeType":"VariableDeclaration","scope":115,"src":"707:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":112,"name":"string","nodeType":"ElementaryTypeName","src":"707:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"706:27:1"},"scope":152,"src":"666:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":120,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"747:11:1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"758:2:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"792:17:1","nodeType":"VariableDeclaration","scope":120,"src":"784:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:27:1"},"scope":152,"src":"738:73:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"824:8:1","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"to","nameLocation":"841:2:1","nodeType":"VariableDeclaration","scope":129,"src":"833:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"value","nameLocation":"853:5:1","nodeType":"VariableDeclaration","scope":129,"src":"845:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:27:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"success","nameLocation":"883:7:1","nodeType":"VariableDeclaration","scope":129,"src":"878:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":126,"name":"bool","nodeType":"ElementaryTypeName","src":"878:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"877:14:1"},"scope":152,"src":"815:77:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":140,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"905:15:1","nodeType":"FunctionDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"to","nameLocation":"934:2:1","nodeType":"VariableDeclaration","scope":140,"src":"926:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"value","nameLocation":"950:5:1","nodeType":"VariableDeclaration","scope":140,"src":"942:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":135,"mutability":"mutable","name":"data","nameLocation":"976:4:1","nodeType":"VariableDeclaration","scope":140,"src":"961:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":134,"name":"bytes","nodeType":"ElementaryTypeName","src":"961:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"920:64:1"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"success","nameLocation":"1008:7:1","nodeType":"VariableDeclaration","scope":140,"src":"1003:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":137,"name":"bool","nodeType":"ElementaryTypeName","src":"1003:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1002:14:1"},"scope":152,"src":"896:121:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1030:12:1","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"from","nameLocation":"1056:4:1","nodeType":"VariableDeclaration","scope":151,"src":"1048:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":144,"mutability":"mutable","name":"to","nameLocation":"1074:2:1","nodeType":"VariableDeclaration","scope":151,"src":"1066:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"value","nameLocation":"1090:5:1","nodeType":"VariableDeclaration","scope":151,"src":"1082:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:57:1"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"success","nameLocation":"1123:7:1","nodeType":"VariableDeclaration","scope":151,"src":"1118:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":148,"name":"bool","nodeType":"ElementaryTypeName","src":"1118:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1117:14:1"},"scope":152,"src":"1021:111:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":153,"src":"57:1077:1","usedErrors":[]}],"src":"32:1103:1"},"id":1},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[241]},"id":242,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":154,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":241,"linearizedBaseContracts":[241],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"97:267:2","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":165,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:2","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[],"src":"392:2:2"},"returnParameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":165,"src":"437:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":157,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":165,"src":"451:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":159,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":165,"src":"465:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":162,"nodeType":"ArrayTypeName","src":"465:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:2"},"scope":241,"src":"367:121:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"492:1511:2","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:2","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:2","nodeType":"VariableDeclaration","scope":181,"src":"2039:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"subId","nameLocation":"2067:5:2","nodeType":"VariableDeclaration","scope":181,"src":"2060:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":169,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:2","nodeType":"VariableDeclaration","scope":181,"src":"2078:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":171,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:2","nodeType":"VariableDeclaration","scope":181,"src":"2118:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":173,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:2","nodeType":"VariableDeclaration","scope":181,"src":"2147:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":175,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:2"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:2","nodeType":"VariableDeclaration","scope":181,"src":"2185:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:2"},"scope":241,"src":"2006:198:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"2208:384:2","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":187,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:2","nodeType":"FunctionDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"2622:2:2"},"returnParameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"subId","nameLocation":"2650:5:2","nodeType":"VariableDeclaration","scope":187,"src":"2643:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":184,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:2"},"scope":241,"src":"2595:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"2661:381:2","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":202,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:2","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"subId","nameLocation":"3077:5:2","nodeType":"VariableDeclaration","scope":202,"src":"3070:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":189,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:2"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"balance","nameLocation":"3133:7:2","nodeType":"VariableDeclaration","scope":202,"src":"3126:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":192,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:2","nodeType":"VariableDeclaration","scope":202,"src":"3148:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":194,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"owner","nameLocation":"3179:5:2","nodeType":"VariableDeclaration","scope":202,"src":"3171:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:2","nodeType":"VariableDeclaration","scope":202,"src":"3192:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":199,"nodeType":"ArrayTypeName","src":"3192:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:2"},"scope":241,"src":"3045:180:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"3229:164:2","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":210,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:2","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"subId","nameLocation":"3445:5:2","nodeType":"VariableDeclaration","scope":210,"src":"3438:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":204,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:2","nodeType":"VariableDeclaration","scope":210,"src":"3452:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:2"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"3478:0:2"},"scope":241,"src":"3396:83:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"3483:212:2","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:2","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"subId","nameLocation":"3746:5:2","nodeType":"VariableDeclaration","scope":216,"src":"3739:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":212,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:2"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"3761:0:2"},"scope":241,"src":"3698:64:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3766:170:2","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:2","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"subId","nameLocation":"3967:5:2","nodeType":"VariableDeclaration","scope":224,"src":"3960:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":218,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:2","nodeType":"VariableDeclaration","scope":224,"src":"3974:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:2"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"4000:0:2"},"scope":241,"src":"3939:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"4005:172:2","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:2","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"subId","nameLocation":"4211:5:2","nodeType":"VariableDeclaration","scope":232,"src":"4204:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":226,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:2","nodeType":"VariableDeclaration","scope":232,"src":"4218:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:2"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"4244:0:2"},"scope":241,"src":"4180:65:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"4249:140:2","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":240,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:2","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"subId","nameLocation":"4427:5:2","nodeType":"VariableDeclaration","scope":240,"src":"4420:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"to","nameLocation":"4442:2:2","nodeType":"VariableDeclaration","scope":240,"src":"4434:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:2"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"4454:0:2"},"scope":241,"src":"4392:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":242,"src":"57:4400:2","usedErrors":[]}],"src":"32:4426:2"},"id":2},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","exportedSymbols":{"LinkTokenInterface":[152],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[241],"VRFCoordinatorV2Mock":[820]},"id":821,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":243,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"92:23:3"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","file":"../interfaces/LinkTokenInterface.sol","id":244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":821,"sourceUnit":153,"src":"117:46:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"../interfaces/VRFCoordinatorV2Interface.sol","id":245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":821,"sourceUnit":242,"src":"164:53:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"../VRFConsumerBaseV2.sol","id":246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":821,"sourceUnit":58,"src":"218:34:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":247,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":241,"src":"287:25:3"},"id":248,"nodeType":"InheritanceSpecifier","src":"287:25:3"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":820,"linearizedBaseContracts":[820,241],"name":"VRFCoordinatorV2Mock","nameLocation":"263:20:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"3d18651e","id":250,"mutability":"immutable","name":"BASE_FEE","nameLocation":"341:8:3","nodeType":"VariableDeclaration","scope":820,"src":"317:32:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":249,"name":"uint96","nodeType":"ElementaryTypeName","src":"317:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"a410347f","id":252,"mutability":"immutable","name":"GAS_PRICE_LINK","nameLocation":"377:14:3","nodeType":"VariableDeclaration","scope":820,"src":"353:38:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":251,"name":"uint96","nodeType":"ElementaryTypeName","src":"353:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"id":254,"name":"InvalidSubscription","nameLocation":"402:19:3","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[],"src":"421:2:3"},"src":"396:28:3"},{"id":256,"name":"InsufficientBalance","nameLocation":"433:19:3","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"452:2:3"},"src":"427:28:3"},{"id":260,"name":"MustBeSubOwner","nameLocation":"464:14:3","nodeType":"ErrorDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"owner","nameLocation":"487:5:3","nodeType":"VariableDeclaration","scope":260,"src":"479:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"478:15:3"},"src":"458:36:3"},{"anonymous":false,"id":278,"name":"RandomWordsRequested","nameLocation":"504:20:3","nodeType":"EventDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"indexed":true,"mutability":"mutable","name":"keyHash","nameLocation":"546:7:3","nodeType":"VariableDeclaration","scope":278,"src":"530:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"530:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":264,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"567:9:3","nodeType":"VariableDeclaration","scope":278,"src":"559:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"559:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":266,"indexed":false,"mutability":"mutable","name":"preSeed","nameLocation":"590:7:3","nodeType":"VariableDeclaration","scope":278,"src":"582:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"582:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":268,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"618:5:3","nodeType":"VariableDeclaration","scope":278,"src":"603:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":267,"name":"uint64","nodeType":"ElementaryTypeName","src":"603:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":270,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"636:27:3","nodeType":"VariableDeclaration","scope":278,"src":"629:34:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":269,"name":"uint16","nodeType":"ElementaryTypeName","src":"629:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":272,"indexed":false,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"676:16:3","nodeType":"VariableDeclaration","scope":278,"src":"669:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":271,"name":"uint32","nodeType":"ElementaryTypeName","src":"669:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":274,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"705:8:3","nodeType":"VariableDeclaration","scope":278,"src":"698:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":273,"name":"uint32","nodeType":"ElementaryTypeName","src":"698:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":276,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"735:6:3","nodeType":"VariableDeclaration","scope":278,"src":"719:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"719:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"524:221:3"},"src":"498:248:3"},{"anonymous":false,"id":288,"name":"RandomWordsFulfilled","nameLocation":"755:20:3","nodeType":"EventDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"792:9:3","nodeType":"VariableDeclaration","scope":288,"src":"776:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":282,"indexed":false,"mutability":"mutable","name":"outputSeed","nameLocation":"811:10:3","nodeType":"VariableDeclaration","scope":288,"src":"803:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"803:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":284,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"830:7:3","nodeType":"VariableDeclaration","scope":288,"src":"823:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":283,"name":"uint96","nodeType":"ElementaryTypeName","src":"823:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":286,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"844:7:3","nodeType":"VariableDeclaration","scope":288,"src":"839:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"775:77:3"},"src":"749:104:3"},{"anonymous":false,"id":294,"name":"SubscriptionCreated","nameLocation":"862:19:3","nodeType":"EventDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"897:5:3","nodeType":"VariableDeclaration","scope":294,"src":"882:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":289,"name":"uint64","nodeType":"ElementaryTypeName","src":"882:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":292,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"912:5:3","nodeType":"VariableDeclaration","scope":294,"src":"904:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"904:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"881:37:3"},"src":"856:63:3"},{"anonymous":false,"id":302,"name":"SubscriptionFunded","nameLocation":"928:18:3","nodeType":"EventDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"962:5:3","nodeType":"VariableDeclaration","scope":302,"src":"947:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":295,"name":"uint64","nodeType":"ElementaryTypeName","src":"947:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":298,"indexed":false,"mutability":"mutable","name":"oldBalance","nameLocation":"977:10:3","nodeType":"VariableDeclaration","scope":302,"src":"969:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":300,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"997:10:3","nodeType":"VariableDeclaration","scope":302,"src":"989:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"946:62:3"},"src":"922:87:3"},{"anonymous":false,"id":310,"name":"SubscriptionCanceled","nameLocation":"1018:20:3","nodeType":"EventDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1054:5:3","nodeType":"VariableDeclaration","scope":310,"src":"1039:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":303,"name":"uint64","nodeType":"ElementaryTypeName","src":"1039:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":306,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1069:2:3","nodeType":"VariableDeclaration","scope":310,"src":"1061:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"1061:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":308,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1081:6:3","nodeType":"VariableDeclaration","scope":310,"src":"1073:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:50:3"},"src":"1012:77:3"},{"constant":false,"id":312,"mutability":"mutable","name":"s_currentSubId","nameLocation":"1100:14:3","nodeType":"VariableDeclaration","scope":820,"src":"1093:21:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":311,"name":"uint64","nodeType":"ElementaryTypeName","src":"1093:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":315,"mutability":"mutable","name":"s_nextRequestId","nameLocation":"1126:15:3","nodeType":"VariableDeclaration","scope":820,"src":"1118:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1144:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"s_nextPreSeed","nameLocation":"1157:13:3","nodeType":"VariableDeclaration","scope":820,"src":"1149:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"1149:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1173:3:3","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Subscription","id":323,"members":[{"constant":false,"id":320,"mutability":"mutable","name":"owner","nameLocation":"1214:5:3","nodeType":"VariableDeclaration","scope":323,"src":"1206:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"balance","nameLocation":"1232:7:3","nodeType":"VariableDeclaration","scope":323,"src":"1225:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":321,"name":"uint96","nodeType":"ElementaryTypeName","src":"1225:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"1187:12:3","nodeType":"StructDefinition","scope":820,"src":"1180:64:3","visibility":"public"},{"constant":false,"id":328,"mutability":"mutable","name":"s_subscriptions","nameLocation":"1279:15:3","nodeType":"VariableDeclaration","scope":820,"src":"1247:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"typeName":{"id":327,"keyType":{"id":324,"name":"uint64","nodeType":"ElementaryTypeName","src":"1255:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"1247:31:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"valueType":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"Subscription","nodeType":"IdentifierPath","referencedDeclaration":323,"src":"1265:12:3"},"referencedDeclaration":323,"src":"1265:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription"}}},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Request","id":335,"members":[{"constant":false,"id":330,"mutability":"mutable","name":"subId","nameLocation":"1358:5:3","nodeType":"VariableDeclaration","scope":335,"src":"1351:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":329,"name":"uint64","nodeType":"ElementaryTypeName","src":"1351:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1376:16:3","nodeType":"VariableDeclaration","scope":335,"src":"1369:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":331,"name":"uint32","nodeType":"ElementaryTypeName","src":"1369:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"numWords","nameLocation":"1405:8:3","nodeType":"VariableDeclaration","scope":335,"src":"1398:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":333,"name":"uint32","nodeType":"ElementaryTypeName","src":"1398:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Request","nameLocation":"1337:7:3","nodeType":"StructDefinition","scope":820,"src":"1330:88:3","visibility":"public"},{"constant":false,"id":340,"mutability":"mutable","name":"s_requests","nameLocation":"1449:10:3","nodeType":"VariableDeclaration","scope":820,"src":"1421:38:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$335_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"typeName":{"id":339,"keyType":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"1429:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1421:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$335_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"valueType":{"id":338,"nodeType":"UserDefinedTypeName","pathNode":{"id":337,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":335,"src":"1440:7:3"},"referencedDeclaration":335,"src":"1440:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}}},"visibility":"internal"},{"body":{"id":355,"nodeType":"Block","src":"1545:66:3","statements":[{"expression":{"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":347,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"1551:8:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":348,"name":"_baseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1562:8:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1551:19:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":350,"nodeType":"ExpressionStatement","src":"1551:19:3"},{"expression":{"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":351,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"1576:14:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":352,"name":"_gasPriceLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1593:13:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1576:30:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":354,"nodeType":"ExpressionStatement","src":"1576:30:3"}]},"id":356,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"_baseFee","nameLocation":"1513:8:3","nodeType":"VariableDeclaration","scope":356,"src":"1506:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":341,"name":"uint96","nodeType":"ElementaryTypeName","src":"1506:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"_gasPriceLink","nameLocation":"1530:13:3","nodeType":"VariableDeclaration","scope":356,"src":"1523:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":343,"name":"uint96","nodeType":"ElementaryTypeName","src":"1523:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1505:39:3"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[],"src":"1545:0:3"},"scope":820,"src":"1494:117:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":502,"nodeType":"Block","src":"2241:902:3","statements":[{"assignments":[365],"declarations":[{"constant":false,"id":365,"mutability":"mutable","name":"startGas","nameLocation":"2255:8:3","nodeType":"VariableDeclaration","scope":502,"src":"2247:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"2247:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":368,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":366,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"2266:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2266:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2247:28:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":369,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2285:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$335_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":371,"indexExpression":{"id":370,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"2296:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2285:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":330,"src":"2285:28:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2285:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":380,"nodeType":"IfStatement","src":"2281:83:3","trueBody":{"id":379,"nodeType":"Block","src":"2320:44:3","statements":[{"expression":{"arguments":[{"hexValue":"6e6f6e6578697374656e742072657175657374","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2335:21:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""},"value":"nonexistent request"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""}],"id":375,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2328:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2328:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":378,"nodeType":"ExpressionStatement","src":"2328:29:3"}]}},{"assignments":[383],"declarations":[{"constant":false,"id":383,"mutability":"mutable","name":"req","nameLocation":"2384:3:3","nodeType":"VariableDeclaration","scope":502,"src":"2369:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"},"typeName":{"id":382,"nodeType":"UserDefinedTypeName","pathNode":{"id":381,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":335,"src":"2369:7:3"},"referencedDeclaration":335,"src":"2369:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}},"visibility":"internal"}],"id":387,"initialValue":{"baseExpression":{"id":384,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2390:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$335_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":386,"indexExpression":{"id":385,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"2401:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2390:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2369:43:3"},{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"words","nameLocation":"2436:5:3","nodeType":"VariableDeclaration","scope":502,"src":"2419:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"2419:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":391,"nodeType":"ArrayTypeName","src":"2419:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[{"expression":{"id":396,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2458:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":334,"src":"2458:12:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2444:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2448:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":394,"nodeType":"ArrayTypeName","src":"2448:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2444:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2419:52:3"},{"body":{"id":426,"nodeType":"Block","src":"2520:71:3","statements":[{"expression":{"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":411,"name":"words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2528:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":413,"indexExpression":{"id":412,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2534:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2528:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":419,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"2568:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":420,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2580:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":417,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2557:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2557:10:3","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2557:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":416,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2547:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2547:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2539:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:3","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2539:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2528:56:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":425,"nodeType":"ExpressionStatement","src":"2528:56:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2497:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":405,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2501:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":334,"src":"2501:12:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2497:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":427,"initializationExpression":{"assignments":[401],"declarations":[{"constant":false,"id":401,"mutability":"mutable","name":"i","nameLocation":"2490:1:3","nodeType":"VariableDeclaration","scope":427,"src":"2482:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":403,"initialValue":{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2494:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2482:13:3"},"loopExpression":{"expression":{"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2515:3:3","subExpression":{"id":408,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2515:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":410,"nodeType":"ExpressionStatement","src":"2515:3:3"},"nodeType":"ForStatement","src":"2477:114:3"},{"assignments":[430],"declarations":[{"constant":false,"id":430,"mutability":"mutable","name":"v","nameLocation":"2615:1:3","nodeType":"VariableDeclaration","scope":502,"src":"2597:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$57","typeString":"contract VRFConsumerBaseV2"},"typeName":{"id":429,"nodeType":"UserDefinedTypeName","pathNode":{"id":428,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"2597:17:3"},"referencedDeclaration":57,"src":"2597:17:3","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$57","typeString":"contract VRFConsumerBaseV2"}},"visibility":"internal"}],"id":431,"nodeType":"VariableDeclarationStatement","src":"2597:19:3"},{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"callReq","nameLocation":"2635:7:3","nodeType":"VariableDeclaration","scope":502,"src":"2622:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":432,"name":"bytes","nodeType":"ElementaryTypeName","src":"2622:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"expression":{"expression":{"id":436,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2668:1:3","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$57","typeString":"contract VRFConsumerBaseV2"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rawFulfillRandomWords","nodeType":"MemberAccess","referencedDeclaration":56,"src":"2668:23:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2668:32:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":439,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"2702:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":440,"name":"words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2714:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":434,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2645:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2645:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2645:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2622:98:3"},{"assignments":[444,null],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"success","nameLocation":"2732:7:3","nodeType":"VariableDeclaration","scope":502,"src":"2727:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":443,"name":"bool","nodeType":"ElementaryTypeName","src":"2727:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":452,"initialValue":{"arguments":[{"id":450,"name":"callReq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2787:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":445,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"2745:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2745:14:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":447,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2765:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":332,"src":"2765:20:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"src":"2745:41:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2745:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2726:69:3"},{"assignments":[454],"declarations":[{"constant":false,"id":454,"mutability":"mutable","name":"payment","nameLocation":"2809:7:3","nodeType":"VariableDeclaration","scope":502,"src":"2802:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":453,"name":"uint96","nodeType":"ElementaryTypeName","src":"2802:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":468,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":457,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"2826:8:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":458,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2839:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":459,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"2850:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2850:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2838:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":463,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2863:14:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2838:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2837:41:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2826:52:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2819:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":455,"name":"uint96","nodeType":"ElementaryTypeName","src":"2819:6:3","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2819:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"2802:77:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":469,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"2889:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":472,"indexExpression":{"expression":{"id":470,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2905:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":330,"src":"2905:9:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2889:26:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":322,"src":"2889:34:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":474,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"2926:7:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2889:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"2885:93:3","trueBody":{"id":479,"nodeType":"Block","src":"2935:43:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":476,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2950:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"RevertStatement","src":"2943:28:3"}]}},{"expression":{"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":481,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"2983:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":484,"indexExpression":{"expression":{"id":482,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2999:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":330,"src":"2999:9:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2983:26:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":322,"src":"2983:34:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":486,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3021:7:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2983:45:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":488,"nodeType":"ExpressionStatement","src":"2983:45:3"},{"expression":{"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3034:31:3","subExpression":{"components":[{"baseExpression":{"id":489,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"3042:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$335_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":491,"indexExpression":{"id":490,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3053:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3042:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}}],"id":492,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3041:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"3034:31:3"},{"eventCall":{"arguments":[{"id":496,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3097:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":497,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3109:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":498,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3121:7:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":499,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3130:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":495,"name":"RandomWordsFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3076:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint96,bool)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3076:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":501,"nodeType":"EmitStatement","src":"3071:67:3"}]},"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"1615:547:3","text":" @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n @notice consumer.\n @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n @dev against the real coordinator a small amount of additional LINK is required.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to"},"functionSelector":"808974ff","id":503,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2174:18:3","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"_requestId","nameLocation":"2201:10:3","nodeType":"VariableDeclaration","scope":503,"src":"2193:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"_consumer","nameLocation":"2221:9:3","nodeType":"VariableDeclaration","scope":503,"src":"2213:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"2213:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2192:39:3"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"2241:0:3"},"scope":820,"src":"2165:978:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":547,"nodeType":"Block","src":"3409:278:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":511,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3419:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":513,"indexExpression":{"id":512,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3435:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3419:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":320,"src":"3419:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3452:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:3","typeDescriptions":{}}},"id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3452:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3419:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":524,"nodeType":"IfStatement","src":"3415:92:3","trueBody":{"id":523,"nodeType":"Block","src":"3464:43:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":520,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"3479:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3479:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"RevertStatement","src":"3472:28:3"}]}},{"assignments":[526],"declarations":[{"constant":false,"id":526,"mutability":"mutable","name":"oldBalance","nameLocation":"3519:10:3","nodeType":"VariableDeclaration","scope":547,"src":"3512:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":525,"name":"uint96","nodeType":"ElementaryTypeName","src":"3512:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":531,"initialValue":{"expression":{"baseExpression":{"id":527,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3532:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":529,"indexExpression":{"id":528,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3548:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3532:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":322,"src":"3532:31:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"3512:51:3"},{"expression":{"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":532,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3569:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":534,"indexExpression":{"id":533,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3585:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3569:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":322,"src":"3569:31:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":536,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3604:7:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3569:42:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":538,"nodeType":"ExpressionStatement","src":"3569:42:3"},{"eventCall":{"arguments":[{"id":540,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3641:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":541,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"3649:10:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":542,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"3661:10:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":543,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3674:7:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3661:20:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":539,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3622:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint64,uint256,uint256)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3622:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":546,"nodeType":"EmitStatement","src":"3617:65:3"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"3147:195:3","text":" @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n @param _subId the subscription to fund\n @param _amount the amount to fund"},"functionSelector":"afc69b53","id":548,"implemented":true,"kind":"function","modifiers":[],"name":"fundSubscription","nameLocation":"3354:16:3","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"_subId","nameLocation":"3378:6:3","nodeType":"VariableDeclaration","scope":548,"src":"3371:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":505,"name":"uint64","nodeType":"ElementaryTypeName","src":"3371:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"_amount","nameLocation":"3393:7:3","nodeType":"VariableDeclaration","scope":548,"src":"3386:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":507,"name":"uint96","nodeType":"ElementaryTypeName","src":"3386:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3370:31:3"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3409:0:3"},"scope":820,"src":"3345:342:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[181],"body":{"id":612,"nodeType":"Block","src":"3893:516:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":564,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3903:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":566,"indexExpression":{"id":565,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3919:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3903:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":320,"src":"3903:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3936:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"3936:7:3","typeDescriptions":{}}},"id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3936:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3903:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":577,"nodeType":"IfStatement","src":"3899:92:3","trueBody":{"id":576,"nodeType":"Block","src":"3948:43:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":573,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"3963:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3963:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":575,"nodeType":"RevertStatement","src":"3956:28:3"}]}},{"assignments":[579],"declarations":[{"constant":false,"id":579,"mutability":"mutable","name":"requestId","nameLocation":"4005:9:3","nodeType":"VariableDeclaration","scope":612,"src":"3997:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":582,"initialValue":{"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4017:17:3","subExpression":{"id":580,"name":"s_nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4017:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3997:37:3"},{"assignments":[584],"declarations":[{"constant":false,"id":584,"mutability":"mutable","name":"preSeed","nameLocation":"4048:7:3","nodeType":"VariableDeclaration","scope":612,"src":"4040:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"4040:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":587,"initialValue":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4058:15:3","subExpression":{"id":585,"name":"s_nextPreSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"4058:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4040:33:3"},{"expression":{"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":588,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"4080:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$335_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":590,"indexExpression":{"id":589,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4091:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4080:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":592,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"4120:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":593,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4146:17:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":594,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4175:9:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":591,"name":"Request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4104:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Request_$335_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Request storage pointer)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["subId","callbackGasLimit","numWords"],"nodeType":"FunctionCall","src":"4104:82:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"src":"4080:106:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$335_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":597,"nodeType":"ExpressionStatement","src":"4080:106:3"},{"eventCall":{"arguments":[{"id":599,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4226:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":600,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4242:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":601,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4259:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":602,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"4274:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":603,"name":"_minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4288:28:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":604,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4324:17:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":605,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4349:9:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":606,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4366:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4366:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":598,"name":"RandomWordsRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"4198:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint64,uint16,uint32,uint32,address)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4198:184:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":609,"nodeType":"EmitStatement","src":"4193:189:3"},{"expression":{"id":610,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4395:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":563,"id":611,"nodeType":"Return","src":"4388:16:3"}]},"functionSelector":"5d3b1d30","id":613,"implemented":true,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"3700:18:3","nodeType":"FunctionDefinition","overrides":{"id":560,"nodeType":"OverrideSpecifier","overrides":[],"src":"3866:8:3"},"parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"_keyHash","nameLocation":"3732:8:3","nodeType":"VariableDeclaration","scope":613,"src":"3724:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3724:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":552,"mutability":"mutable","name":"_subId","nameLocation":"3753:6:3","nodeType":"VariableDeclaration","scope":613,"src":"3746:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":551,"name":"uint64","nodeType":"ElementaryTypeName","src":"3746:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"_minimumRequestConfirmations","nameLocation":"3772:28:3","nodeType":"VariableDeclaration","scope":613,"src":"3765:35:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":553,"name":"uint16","nodeType":"ElementaryTypeName","src":"3765:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"_callbackGasLimit","nameLocation":"3813:17:3","nodeType":"VariableDeclaration","scope":613,"src":"3806:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":555,"name":"uint32","nodeType":"ElementaryTypeName","src":"3806:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"_numWords","nameLocation":"3843:9:3","nodeType":"VariableDeclaration","scope":613,"src":"3836:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":557,"name":"uint32","nodeType":"ElementaryTypeName","src":"3836:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3718:138:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"3884:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"3884:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3883:9:3"},"scope":820,"src":"3691:718:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[187],"body":{"id":640,"nodeType":"Block","src":"4485:197:3","statements":[{"expression":{"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4491:16:3","subExpression":{"id":619,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"4491:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":621,"nodeType":"ExpressionStatement","src":"4491:16:3"},{"expression":{"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":622,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"4513:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":624,"indexExpression":{"id":623,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"4529:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4513:31:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":626,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4568:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4568:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4589:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":625,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4547:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$323_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Subscription storage pointer)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["owner","balance"],"nodeType":"FunctionCall","src":"4547:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription memory"}},"src":"4513:79:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":631,"nodeType":"ExpressionStatement","src":"4513:79:3"},{"eventCall":{"arguments":[{"id":633,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"4623:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":634,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4639:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4639:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":632,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4603:19:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4603:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"EmitStatement","src":"4598:52:3"},{"expression":{"id":638,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"4663:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":618,"id":639,"nodeType":"Return","src":"4656:21:3"}]},"functionSelector":"a21a23e4","id":641,"implemented":true,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"4422:18:3","nodeType":"FunctionDefinition","overrides":{"id":615,"nodeType":"OverrideSpecifier","overrides":[],"src":"4452:8:3"},"parameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"4440:2:3"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"_subId","nameLocation":"4477:6:3","nodeType":"VariableDeclaration","scope":641,"src":"4470:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":616,"name":"uint64","nodeType":"ElementaryTypeName","src":"4470:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4469:15:3"},"scope":820,"src":"4413:269:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[202],"body":{"id":686,"nodeType":"Block","src":"4882:200:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":656,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"4892:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":658,"indexExpression":{"id":657,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"4908:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4892:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":320,"src":"4892:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4925:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"4925:7:3","typeDescriptions":{}}},"id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4925:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4892:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":669,"nodeType":"IfStatement","src":"4888:92:3","trueBody":{"id":668,"nodeType":"Block","src":"4937:43:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":665,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"4952:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4952:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":667,"nodeType":"RevertStatement","src":"4945:28:3"}]}},{"expression":{"components":[{"expression":{"baseExpression":{"id":670,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"4993:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":672,"indexExpression":{"id":671,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"5009:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4993:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":322,"src":"4993:31:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5026:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"baseExpression":{"id":675,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"5029:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":677,"indexExpression":{"id":676,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"5045:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5029:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":320,"src":"5029:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5074:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5060:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"5064:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":680,"nodeType":"ArrayTypeName","src":"5064:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5060:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"id":684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4992:85:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_rational_0_by_1_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"tuple(uint96,int_const 0,address,address[] memory)"}},"functionReturnParameters":655,"id":685,"nodeType":"Return","src":"4985:92:3"}]},"functionSelector":"a47c7696","id":687,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"4695:15:3","nodeType":"FunctionDefinition","overrides":{"id":645,"nodeType":"OverrideSpecifier","overrides":[],"src":"4752:8:3"},"parameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"_subId","nameLocation":"4718:6:3","nodeType":"VariableDeclaration","scope":687,"src":"4711:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":642,"name":"uint64","nodeType":"ElementaryTypeName","src":"4711:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4710:15:3"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"balance","nameLocation":"4788:7:3","nodeType":"VariableDeclaration","scope":687,"src":"4781:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":646,"name":"uint96","nodeType":"ElementaryTypeName","src":"4781:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"reqCount","nameLocation":"4810:8:3","nodeType":"VariableDeclaration","scope":687,"src":"4803:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":648,"name":"uint64","nodeType":"ElementaryTypeName","src":"4803:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"owner","nameLocation":"4834:5:3","nodeType":"VariableDeclaration","scope":687,"src":"4826:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"consumers","nameLocation":"4864:9:3","nodeType":"VariableDeclaration","scope":687,"src":"4847:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"4847:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":653,"nodeType":"ArrayTypeName","src":"4847:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4773:106:3"},"scope":820,"src":"4686:396:3","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[240],"body":{"id":713,"nodeType":"Block","src":"5181:120:3","statements":[{"eventCall":{"arguments":[{"id":699,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"5213:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":700,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5221:3:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":701,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"5226:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":703,"indexExpression":{"id":702,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"5242:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5226:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":322,"src":"5226:31:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":698,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"5192:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint64,address,uint256)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5192:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"EmitStatement","src":"5187:71:3"},{"expression":{"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5264:32:3","subExpression":{"components":[{"baseExpression":{"id":707,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"5272:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":709,"indexExpression":{"id":708,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"5288:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5272:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}}],"id":710,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5271:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":712,"nodeType":"ExpressionStatement","src":"5264:32:3"}]},"functionSelector":"d7ae1d30","id":714,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":695,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"5173:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":696,"kind":"modifierInvocation","modifierName":{"id":694,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":748,"src":"5160:12:3"},"nodeType":"ModifierInvocation","src":"5160:20:3"}],"name":"cancelSubscription","nameLocation":"5095:18:3","nodeType":"FunctionDefinition","overrides":{"id":693,"nodeType":"OverrideSpecifier","overrides":[],"src":"5151:8:3"},"parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"_subId","nameLocation":"5121:6:3","nodeType":"VariableDeclaration","scope":714,"src":"5114:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":688,"name":"uint64","nodeType":"ElementaryTypeName","src":"5114:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"_to","nameLocation":"5137:3:3","nodeType":"VariableDeclaration","scope":714,"src":"5129:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"5129:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5113:28:3"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[],"src":"5181:0:3"},"scope":820,"src":"5086:215:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":747,"nodeType":"Block","src":"5342:209:3","statements":[{"assignments":[719],"declarations":[{"constant":false,"id":719,"mutability":"mutable","name":"owner","nameLocation":"5356:5:3","nodeType":"VariableDeclaration","scope":747,"src":"5348:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"5348:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":724,"initialValue":{"expression":{"baseExpression":{"id":720,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"5364:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$323_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":722,"indexExpression":{"id":721,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"5380:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5364:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$323_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":320,"src":"5364:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5348:45:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":725,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"5403:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5420:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5412:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:3","typeDescriptions":{}}},"id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5412:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5403:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":735,"nodeType":"IfStatement","src":"5399:68:3","trueBody":{"id":734,"nodeType":"Block","src":"5424:43:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":731,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5439:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5439:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":733,"nodeType":"RevertStatement","src":"5432:28:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":736,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5476:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5476:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":738,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"5490:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":745,"nodeType":"IfStatement","src":"5472:68:3","trueBody":{"id":744,"nodeType":"Block","src":"5497:43:3","statements":[{"errorCall":{"arguments":[{"id":741,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"5527:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":740,"name":"MustBeSubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"5512:14:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5512:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"RevertStatement","src":"5505:28:3"}]}},{"id":746,"nodeType":"PlaceholderStatement","src":"5545:1:3"}]},"id":748,"name":"onlySubOwner","nameLocation":"5314:12:3","nodeType":"ModifierDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"_subId","nameLocation":"5334:6:3","nodeType":"VariableDeclaration","scope":748,"src":"5327:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":715,"name":"uint64","nodeType":"ElementaryTypeName","src":"5327:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5326:15:3"},"src":"5305:246:3","virtual":false,"visibility":"internal"},{"baseFunctions":[165],"body":{"id":768,"nodeType":"Block","src":"5691:48:3","statements":[{"expression":{"components":[{"hexValue":"33","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5705:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},{"hexValue":"32303030303030","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5708:7:3","typeDescriptions":{"typeIdentifier":"t_rational_2000000_by_1","typeString":"int_const 2000000"},"value":"2000000"},{"arguments":[{"hexValue":"30","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5731:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5717:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":762,"nodeType":"ArrayTypeName","src":"5721:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5717:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"id":766,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5704:30:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_3_by_1_$_t_rational_2000000_by_1_$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"tuple(int_const 3,int_const 2000000,bytes32[] memory)"}},"functionReturnParameters":758,"id":767,"nodeType":"Return","src":"5697:37:3"}]},"functionSelector":"00012291","id":769,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"5564:16:3","nodeType":"FunctionDefinition","overrides":{"id":750,"nodeType":"OverrideSpecifier","overrides":[],"src":"5609:8:3"},"parameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"5580:2:3"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":769,"src":"5638:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":751,"name":"uint16","nodeType":"ElementaryTypeName","src":"5638:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":769,"src":"5652:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":753,"name":"uint32","nodeType":"ElementaryTypeName","src":"5652:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":769,"src":"5666:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5666:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":756,"nodeType":"ArrayTypeName","src":"5666:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5630:58:3"},"scope":820,"src":"5555:184:3","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[224],"body":{"id":781,"nodeType":"Block","src":"5821:36:3","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5834:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":777,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5827:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5827:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"5827:25:3"}]},"functionSelector":"7341c10c","id":782,"implemented":true,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"5752:11:3","nodeType":"FunctionDefinition","overrides":{"id":775,"nodeType":"OverrideSpecifier","overrides":[],"src":"5812:8:3"},"parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"_subId","nameLocation":"5771:6:3","nodeType":"VariableDeclaration","scope":782,"src":"5764:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":770,"name":"uint64","nodeType":"ElementaryTypeName","src":"5764:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"_consumer","nameLocation":"5787:9:3","nodeType":"VariableDeclaration","scope":782,"src":"5779:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"5779:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5763:34:3"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"5821:0:3"},"scope":820,"src":"5743:114:3","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[232],"body":{"id":794,"nodeType":"Block","src":"5942:36:3","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5955:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":790,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5948:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5948:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"5948:25:3"}]},"functionSelector":"9f87fad7","id":795,"implemented":true,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"5870:14:3","nodeType":"FunctionDefinition","overrides":{"id":788,"nodeType":"OverrideSpecifier","overrides":[],"src":"5933:8:3"},"parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"_subId","nameLocation":"5892:6:3","nodeType":"VariableDeclaration","scope":795,"src":"5885:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":783,"name":"uint64","nodeType":"ElementaryTypeName","src":"5885:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"_consumer","nameLocation":"5908:9:3","nodeType":"VariableDeclaration","scope":795,"src":"5900:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5884:34:3"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[],"src":"5942:0:3"},"scope":820,"src":"5861:117:3","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[210],"body":{"id":807,"nodeType":"Block","src":"6081:36:3","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6094:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":803,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"6087:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6087:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"6087:25:3"}]},"functionSelector":"04c357cb","id":808,"implemented":true,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"5991:32:3","nodeType":"FunctionDefinition","overrides":{"id":801,"nodeType":"OverrideSpecifier","overrides":[],"src":"6072:8:3"},"parameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"_subId","nameLocation":"6031:6:3","nodeType":"VariableDeclaration","scope":808,"src":"6024:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":796,"name":"uint64","nodeType":"ElementaryTypeName","src":"6024:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"_newOwner","nameLocation":"6047:9:3","nodeType":"VariableDeclaration","scope":808,"src":"6039:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6023:34:3"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[],"src":"6081:0:3"},"scope":820,"src":"5982:135:3","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[216],"body":{"id":818,"nodeType":"Block","src":"6200:36:3","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6213:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":814,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"6206:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6206:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"ExpressionStatement","src":"6206:25:3"}]},"functionSelector":"82359740","id":819,"implemented":true,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"6130:31:3","nodeType":"FunctionDefinition","overrides":{"id":812,"nodeType":"OverrideSpecifier","overrides":[],"src":"6191:8:3"},"parameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"_subId","nameLocation":"6169:6:3","nodeType":"VariableDeclaration","scope":819,"src":"6162:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":809,"name":"uint64","nodeType":"ElementaryTypeName","src":"6162:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6161:15:3"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[],"src":"6200:0:3"},"scope":820,"src":"6121:115:3","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":821,"src":"254:5984:3","usedErrors":[254,256,260]}],"src":"92:6147:3"},"id":3},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2498],"Ownable":[933]},"id":934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":822,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":934,"sourceUnit":2499,"src":"127:30:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":825,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2498,"src":"683:7:4"},"id":826,"nodeType":"InheritanceSpecifier","src":"683:7:4"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"159:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":933,"linearizedBaseContracts":[933,2498],"name":"Ownable","nameLocation":"672:7:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":828,"mutability":"mutable","name":"_owner","nameLocation":"713:6:4","nodeType":"VariableDeclaration","scope":933,"src":"697:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":834,"name":"OwnershipTransferred","nameLocation":"732:20:4","nodeType":"EventDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:4","nodeType":"VariableDeclaration","scope":834,"src":"753:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:4","nodeType":"VariableDeclaration","scope":834,"src":"784:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:4"},"src":"726:84:4"},{"body":{"id":843,"nodeType":"Block","src":"926:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":839,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"955:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":838,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"936:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":842,"nodeType":"ExpressionStatement","src":"936:32:4"}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"816:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":844,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"923:2:4"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"926:0:4"},"scope":933,"src":"912:63:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":851,"nodeType":"Block","src":"1084:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":847,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"1094:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":849,"nodeType":"ExpressionStatement","src":"1094:13:4"},{"id":850,"nodeType":"PlaceholderStatement","src":"1117:1:4"}]},"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"981:77:4","text":" @dev Throws if called by any account other than the owner."},"id":852,"name":"onlyOwner","nameLocation":"1072:9:4","nodeType":"ModifierDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[],"src":"1081:2:4"},"src":"1063:62:4","virtual":false,"visibility":"internal"},{"body":{"id":860,"nodeType":"Block","src":"1256:30:4","statements":[{"expression":{"id":858,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"1273:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":857,"id":859,"nodeType":"Return","src":"1266:13:4"}]},"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"1131:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":861,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:4","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[],"src":"1215:2:4"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":861,"src":"1247:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:4"},"scope":933,"src":"1201:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":874,"nodeType":"Block","src":"1404:85:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":866,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"1422:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":868,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1433:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":873,"nodeType":"ExpressionStatement","src":"1414:68:4"}]},"documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"1292:62:4","text":" @dev Throws if the sender is not the owner."},"id":875,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:4","nodeType":"FunctionDefinition","parameters":{"id":863,"nodeType":"ParameterList","parameters":[],"src":"1379:2:4"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[],"src":"1404:0:4"},"scope":933,"src":"1359:130:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":888,"nodeType":"Block","src":"1885:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:4","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":881,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"1895:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":887,"nodeType":"ExpressionStatement","src":"1895:30:4"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"1495:331:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":889,"implemented":true,"kind":"function","modifiers":[{"id":879,"kind":"modifierInvocation","modifierName":{"id":878,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":852,"src":"1875:9:4"},"nodeType":"ModifierInvocation","src":"1875:9:4"}],"name":"renounceOwnership","nameLocation":"1840:17:4","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"1857:2:4"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"1885:0:4"},"scope":933,"src":"1831:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":911,"nodeType":"Block","src":"2151:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":898,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"2169:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:4","typeDescriptions":{}}},"id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":897,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":906,"nodeType":"ExpressionStatement","src":"2161:73:4"},{"expression":{"arguments":[{"id":908,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"2263:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":907,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"2244:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":910,"nodeType":"ExpressionStatement","src":"2244:28:4"}]},"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"1938:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":912,"implemented":true,"kind":"function","modifiers":[{"id":895,"kind":"modifierInvocation","modifierName":{"id":894,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":852,"src":"2141:9:4"},"nodeType":"ModifierInvocation","src":"2141:9:4"}],"name":"transferOwnership","nameLocation":"2090:17:4","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:4","nodeType":"VariableDeclaration","scope":912,"src":"2108:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:4"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[],"src":"2151:0:4"},"scope":933,"src":"2081:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":931,"nodeType":"Block","src":"2496:124:4","statements":[{"assignments":[919],"declarations":[{"constant":false,"id":919,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:4","nodeType":"VariableDeclaration","scope":931,"src":"2506:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":921,"initialValue":{"id":920,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"2525:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:4"},{"expression":{"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":922,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"2541:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":923,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2550:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":925,"nodeType":"ExpressionStatement","src":"2541:17:4"},{"eventCall":{"arguments":[{"id":927,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"2594:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":928,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2604:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":926,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"2573:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":930,"nodeType":"EmitStatement","src":"2568:45:4"}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"2285:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:4","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:4","nodeType":"VariableDeclaration","scope":932,"src":"2461:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:4"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"2496:0:4"},"scope":933,"src":"2433:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":934,"src":"654:1968:4","usedErrors":[]}],"src":"102:2521:4"},"id":4},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[2476],"Context":[2498],"ERC165":[2697],"ERC721":[1860],"IERC165":[2709],"IERC721":[1976],"IERC721Metadata":[2146],"IERC721Receiver":[1994],"Math":[3574],"Strings":[2673]},"id":1861,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":935,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":1977,"src":"132:23:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":1995,"src":"156:31:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":938,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":2147,"src":"188:42:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":939,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":2477,"src":"231:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":940,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":2499,"src":"265:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":941,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":2674,"src":"299:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":942,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":2698,"src":"333:46:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":944,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2498,"src":"647:7:5"},"id":945,"nodeType":"InheritanceSpecifier","src":"647:7:5"},{"baseName":{"id":946,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2697,"src":"656:6:5"},"id":947,"nodeType":"InheritanceSpecifier","src":"656:6:5"},{"baseName":{"id":948,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1976,"src":"664:7:5"},"id":949,"nodeType":"InheritanceSpecifier","src":"664:7:5"},{"baseName":{"id":950,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":2146,"src":"673:15:5"},"id":951,"nodeType":"InheritanceSpecifier","src":"673:15:5"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"381:246:5","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1860,"linearizedBaseContracts":[1860,2146,1976,2697,2709,2498],"name":"ERC721","nameLocation":"637:6:5","nodeType":"ContractDefinition","nodes":[{"id":954,"libraryName":{"id":952,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"701:7:5"},"nodeType":"UsingForDirective","src":"695:26:5","typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":957,"libraryName":{"id":955,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2673,"src":"732:7:5"},"nodeType":"UsingForDirective","src":"726:26:5","typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":959,"mutability":"mutable","name":"_name","nameLocation":"791:5:5","nodeType":"VariableDeclaration","scope":1860,"src":"776:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":958,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":961,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:5","nodeType":"VariableDeclaration","scope":1860,"src":"823:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":960,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":965,"mutability":"mutable","name":"_owners","nameLocation":"934:7:5","nodeType":"VariableDeclaration","scope":1860,"src":"898:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":964,"keyType":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":969,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:5","nodeType":"VariableDeclaration","scope":1860,"src":"992:45:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":968,"keyType":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":973,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:5","nodeType":"VariableDeclaration","scope":1860,"src":"1093:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":972,"keyType":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":979,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:5","nodeType":"VariableDeclaration","scope":1860,"src":"1199:71:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":978,"keyType":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":977,"keyType":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":976,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":995,"nodeType":"Block","src":"1446:57:5","statements":[{"expression":{"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":987,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"1456:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":988,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"1464:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":990,"nodeType":"ExpressionStatement","src":"1456:13:5"},{"expression":{"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":991,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"1479:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":992,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"1489:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":994,"nodeType":"ExpressionStatement","src":"1479:17:5"}]},"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"1277:108:5","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":996,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"name_","nameLocation":"1416:5:5","nodeType":"VariableDeclaration","scope":996,"src":"1402:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":981,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:5","nodeType":"VariableDeclaration","scope":996,"src":"1423:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":983,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:5"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[],"src":"1446:0:5"},"scope":1860,"src":"1390:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2696,2708],"body":{"id":1026,"nodeType":"Block","src":"1678:192:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1007,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"1707:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1009,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"1727:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1976_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1976_$","typeString":"type(contract IERC721)"}],"id":1008,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1976","typeString":"type(contract IERC721)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1013,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"1763:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1015,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"1783:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2146_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2146_$","typeString":"type(contract IERC721Metadata)"}],"id":1014,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2146","typeString":"type(contract IERC721Metadata)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1022,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"1851:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1020,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1860_$","typeString":"type(contract super ERC721)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2696,"src":"1827:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1006,"id":1025,"nodeType":"Return","src":"1688:175:5"}]},"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"1509:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:5","nodeType":"FunctionDefinition","overrides":{"id":1003,"nodeType":"OverrideSpecifier","overrides":[{"id":1001,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2697,"src":"1646:6:5"},{"id":1002,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2709,"src":"1654:7:5"}],"src":"1637:25:5"},"parameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:5","nodeType":"VariableDeclaration","scope":1027,"src":"1597:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":998,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:5"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"1672:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1004,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:5"},"scope":1860,"src":"1570:300:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1901],"body":{"id":1050,"nodeType":"Block","src":"2010:123:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1037,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"2028:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:5","typeDescriptions":{}}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1036,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1045,"nodeType":"ExpressionStatement","src":"2020:73:5"},{"expression":{"baseExpression":{"id":1046,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"2110:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1048,"indexExpression":{"id":1047,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"2120:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1035,"id":1049,"nodeType":"Return","src":"2103:23:5"}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"1876:48:5","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1051,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:5","nodeType":"FunctionDefinition","overrides":{"id":1032,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:5"},"parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"owner","nameLocation":"1956:5:5","nodeType":"VariableDeclaration","scope":1051,"src":"1948:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:5"},"returnParameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1051,"src":"2001:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:5"},"scope":1860,"src":"1929:204:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1909],"body":{"id":1078,"nodeType":"Block","src":"2271:138:5","statements":[{"assignments":[1061],"declarations":[{"constant":false,"id":1061,"mutability":"mutable","name":"owner","nameLocation":"2289:5:5","nodeType":"VariableDeclaration","scope":1078,"src":"2281:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1065,"initialValue":{"arguments":[{"id":1063,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2306:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1062,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"2297:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1067,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"2332:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:5","typeDescriptions":{}}},"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1075,"nodeType":"ExpressionStatement","src":"2324:56:5"},{"expression":{"id":1076,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"2397:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1059,"id":1077,"nodeType":"Return","src":"2390:12:5"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"2139:46:5","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:5","nodeType":"FunctionDefinition","overrides":{"id":1056,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:5"},"parameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:5","nodeType":"VariableDeclaration","scope":1079,"src":"2207:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:5"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1079,"src":"2262:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:5"},"scope":1860,"src":"2190:219:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2131],"body":{"id":1088,"nodeType":"Block","src":"2540:29:5","statements":[{"expression":{"id":1086,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"2557:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1085,"id":1087,"nodeType":"Return","src":"2550:12:5"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"2415:51:5","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1089,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:5","nodeType":"FunctionDefinition","overrides":{"id":1082,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:5"},"parameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"2484:2:5"},"returnParameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1089,"src":"2525:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1083,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:5"},"scope":1860,"src":"2471:98:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2137],"body":{"id":1098,"nodeType":"Block","src":"2704:31:5","statements":[{"expression":{"id":1096,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"2721:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1095,"id":1097,"nodeType":"Return","src":"2714:14:5"}]},"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"2575:53:5","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:5","nodeType":"FunctionDefinition","overrides":{"id":1092,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:5"},"parameters":{"id":1091,"nodeType":"ParameterList","parameters":[],"src":"2648:2:5"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1099,"src":"2689:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1093,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:5"},"scope":1860,"src":"2633:102:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2145],"body":{"id":1137,"nodeType":"Block","src":"2889:188:5","statements":[{"expression":{"arguments":[{"id":1109,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"2914:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1108,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"2899:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1111,"nodeType":"ExpressionStatement","src":"2899:23:5"},{"assignments":[1113],"declarations":[{"constant":false,"id":1113,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:5","nodeType":"VariableDeclaration","scope":1137,"src":"2933:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1112,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1116,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1114,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"2957:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1119,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"2990:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1117,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:5","typeDescriptions":{}}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:5","trueExpression":{"arguments":[{"arguments":[{"id":1128,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"3036:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1129,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3045:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2556,"src":"3045:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1126,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1124,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:5","typeDescriptions":{}}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1107,"id":1136,"nodeType":"Return","src":"2977:93:5"}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"2741:55:5","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1138,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:5","nodeType":"FunctionDefinition","overrides":{"id":1104,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:5"},"parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:5","nodeType":"VariableDeclaration","scope":1138,"src":"2819:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:5"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1138,"src":"2874:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1105,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:5"},"scope":1860,"src":"2801:276:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1146,"nodeType":"Block","src":"3385:26:5","statements":[{"expression":{"hexValue":"","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1143,"id":1145,"nodeType":"Return","src":"3395:9:5"}]},"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"3083:231:5","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:5","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"3336:2:5"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"3370:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1141,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:5"},"scope":1860,"src":"3319:92:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1949],"body":{"id":1189,"nodeType":"Block","src":"3538:336:5","statements":[{"assignments":[1157],"declarations":[{"constant":false,"id":1157,"mutability":"mutable","name":"owner","nameLocation":"3556:5:5","nodeType":"VariableDeclaration","scope":1189,"src":"3548:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1162,"initialValue":{"arguments":[{"id":1160,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"3579:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1158,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"3564:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1860_$","typeString":"type(contract ERC721)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1079,"src":"3564:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1164,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"3605:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1165,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3611:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1169,"nodeType":"ExpressionStatement","src":"3597:57:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1171,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"3686:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1173,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3702:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1176,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3728:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1177,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"3735:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1175,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"3711:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":1170,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"ExpressionStatement","src":"3665:170:5"},{"expression":{"arguments":[{"id":1185,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"3855:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1186,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"3859:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1184,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"3846:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"ExpressionStatement","src":"3846:21:5"}]},"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"3417:46:5","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1190,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:5","nodeType":"FunctionDefinition","overrides":{"id":1154,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:5"},"parameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"to","nameLocation":"3493:2:5","nodeType":"VariableDeclaration","scope":1190,"src":"3485:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:5","nodeType":"VariableDeclaration","scope":1190,"src":"3497:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:5"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"3538:0:5"},"scope":1860,"src":"3468:406:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1965],"body":{"id":1207,"nodeType":"Block","src":"4020:82:5","statements":[{"expression":{"arguments":[{"id":1200,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"4045:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1199,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"4030:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"4030:23:5"},{"expression":{"baseExpression":{"id":1203,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"4071:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1205,"indexExpression":{"id":1204,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"4087:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1198,"id":1206,"nodeType":"Return","src":"4064:31:5"}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"3880:50:5","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1208,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:5","nodeType":"FunctionDefinition","overrides":{"id":1195,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:5"},"parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:5","nodeType":"VariableDeclaration","scope":1208,"src":"3956:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:5"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1208,"src":"4011:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1196,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:5"},"scope":1860,"src":"3935:167:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1957],"body":{"id":1224,"nodeType":"Block","src":"4253:69:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"4282:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1220,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"4296:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1221,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"4306:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1217,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4263:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1223,"nodeType":"ExpressionStatement","src":"4263:52:5"}]},"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"4108:56:5","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:5","nodeType":"FunctionDefinition","overrides":{"id":1215,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:5"},"parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"operator","nameLocation":"4204:8:5","nodeType":"VariableDeclaration","scope":1225,"src":"4196:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"approved","nameLocation":"4219:8:5","nodeType":"VariableDeclaration","scope":1225,"src":"4214:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1212,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:5"},"returnParameters":{"id":1216,"nodeType":"ParameterList","parameters":[],"src":"4253:0:5"},"scope":1860,"src":"4169:153:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1975],"body":{"id":1242,"nodeType":"Block","src":"4491:59:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1236,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"4508:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1238,"indexExpression":{"id":1237,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"4527:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1240,"indexExpression":{"id":1239,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"4534:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1235,"id":1241,"nodeType":"Return","src":"4501:42:5"}]},"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"4328:55:5","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1243,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:5","nodeType":"FunctionDefinition","overrides":{"id":1232,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:5"},"parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"owner","nameLocation":"4422:5:5","nodeType":"VariableDeclaration","scope":1243,"src":"4414:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"operator","nameLocation":"4437:8:5","nodeType":"VariableDeclaration","scope":1243,"src":"4429:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:5"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1243,"src":"4485:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1233,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:5"},"scope":1860,"src":"4388:162:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1941],"body":{"id":1269,"nodeType":"Block","src":"4731:207:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1256,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"4820:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1258,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"4834:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1255,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"4801:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:47:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1254,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"ExpressionStatement","src":"4793:99:5"},{"expression":{"arguments":[{"id":1264,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"4913:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"4919:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1266,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"4923:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1263,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"4903:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4903:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"ExpressionStatement","src":"4903:28:5"}]},"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"4556:51:5","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:5","nodeType":"FunctionDefinition","overrides":{"id":1252,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:5"},"parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"from","nameLocation":"4651:4:5","nodeType":"VariableDeclaration","scope":1270,"src":"4643:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"to","nameLocation":"4673:2:5","nodeType":"VariableDeclaration","scope":1270,"src":"4665:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:5","nodeType":"VariableDeclaration","scope":1270,"src":"4685:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:5"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"4731:0:5"},"scope":1860,"src":"4612:326:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1931],"body":{"id":1288,"nodeType":"Block","src":"5127:56:5","statements":[{"expression":{"arguments":[{"id":1282,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5154:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1283,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5160:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1284,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5164:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5173:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1281,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1289,1319],"referencedDeclaration":1319,"src":"5137:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"ExpressionStatement","src":"5137:39:5"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"4944:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5013:16:5","nodeType":"FunctionDefinition","overrides":{"id":1279,"nodeType":"OverrideSpecifier","overrides":[],"src":"5118:8:5"},"parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"from","nameLocation":"5047:4:5","nodeType":"VariableDeclaration","scope":1289,"src":"5039:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"to","nameLocation":"5069:2:5","nodeType":"VariableDeclaration","scope":1289,"src":"5061:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"tokenId","nameLocation":"5089:7:5","nodeType":"VariableDeclaration","scope":1289,"src":"5081:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5029:73:5"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[],"src":"5127:0:5"},"scope":1860,"src":"5004:179:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1921],"body":{"id":1318,"nodeType":"Block","src":"5399:164:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1304,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"5436:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5436:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1306,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"5450:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1303,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"5417:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5417:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5460:47:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5409:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5409:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"ExpressionStatement","src":"5409:99:5"},{"expression":{"arguments":[{"id":1312,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"5532:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1313,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"5538:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"5542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1315,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"5551:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1311,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"5518:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5518:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1317,"nodeType":"ExpressionStatement","src":"5518:38:5"}]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"5189:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1319,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5258:16:5","nodeType":"FunctionDefinition","overrides":{"id":1300,"nodeType":"OverrideSpecifier","overrides":[],"src":"5390:8:5"},"parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"from","nameLocation":"5292:4:5","nodeType":"VariableDeclaration","scope":1319,"src":"5284:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"to","nameLocation":"5314:2:5","nodeType":"VariableDeclaration","scope":1319,"src":"5306:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"5306:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"tokenId","nameLocation":"5334:7:5","nodeType":"VariableDeclaration","scope":1319,"src":"5326:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"5326:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"data","nameLocation":"5364:4:5","nodeType":"VariableDeclaration","scope":1319,"src":"5351:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1297,"name":"bytes","nodeType":"ElementaryTypeName","src":"5351:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5274:100:5"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[],"src":"5399:0:5"},"scope":1860,"src":"5249:314:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1347,"nodeType":"Block","src":"6564:165:5","statements":[{"expression":{"arguments":[{"id":1332,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"6584:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1333,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"6590:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1334,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6594:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1331,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"6574:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6574:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1336,"nodeType":"ExpressionStatement","src":"6574:28:5"},{"expression":{"arguments":[{"arguments":[{"id":1339,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"6643:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1340,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"6649:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1341,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6653:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1342,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"6662:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1338,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"6620:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6620:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6669:52:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6612:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6612:110:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1346,"nodeType":"ExpressionStatement","src":"6612:110:5"}]},"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"5569:850:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1348,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6433:13:5","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"from","nameLocation":"6464:4:5","nodeType":"VariableDeclaration","scope":1348,"src":"6456:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"to","nameLocation":"6486:2:5","nodeType":"VariableDeclaration","scope":1348,"src":"6478:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"6478:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"tokenId","nameLocation":"6506:7:5","nodeType":"VariableDeclaration","scope":1348,"src":"6498:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6498:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"data","nameLocation":"6536:4:5","nodeType":"VariableDeclaration","scope":1348,"src":"6523:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1327,"name":"bytes","nodeType":"ElementaryTypeName","src":"6523:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6446:100:5"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[],"src":"6564:0:5"},"scope":1860,"src":"6424:305:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1360,"nodeType":"Block","src":"6913:40:5","statements":[{"expression":{"baseExpression":{"id":1356,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"6930:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1358,"indexExpression":{"id":1357,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"6938:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6930:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1355,"id":1359,"nodeType":"Return","src":"6923:23:5"}]},"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"6735:98:5","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6847:8:5","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"tokenId","nameLocation":"6864:7:5","nodeType":"VariableDeclaration","scope":1361,"src":"6856:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"6856:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:17:5"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1361,"src":"6904:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"6904:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6903:9:5"},"scope":1860,"src":"6838:115:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1378,"nodeType":"Block","src":"7327:55:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1370,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"7353:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1369,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7344:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7373:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7365:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"7365:7:5","typeDescriptions":{}}},"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7365:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7344:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1368,"id":1377,"nodeType":"Return","src":"7337:38:5"}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"6959:292:5","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7265:7:5","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"tokenId","nameLocation":"7281:7:5","nodeType":"VariableDeclaration","scope":1379,"src":"7273:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"7273:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7272:17:5"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1379,"src":"7321:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1366,"name":"bool","nodeType":"ElementaryTypeName","src":"7321:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7320:6:5"},"scope":1860,"src":"7256:126:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1412,"nodeType":"Block","src":"7639:162:5","statements":[{"assignments":[1390],"declarations":[{"constant":false,"id":1390,"mutability":"mutable","name":"owner","nameLocation":"7657:5:5","nodeType":"VariableDeclaration","scope":1412,"src":"7649:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"7649:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1395,"initialValue":{"arguments":[{"id":1393,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7680:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1391,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"7665:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1860_$","typeString":"type(contract ERC721)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1079,"src":"7665:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7665:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7649:39:5"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1396,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"7706:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1397,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"7717:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7706:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1400,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"7743:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1401,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"7750:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1399,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"7726:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7726:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1405,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1404,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"7762:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1407,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"7786:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7762:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:87:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7705:89:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1388,"id":1411,"nodeType":"Return","src":"7698:96:5"}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"7388:147:5","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1413,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7549:18:5","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"spender","nameLocation":"7576:7:5","nodeType":"VariableDeclaration","scope":1413,"src":"7568:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"7568:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"tokenId","nameLocation":"7593:7:5","nodeType":"VariableDeclaration","scope":1413,"src":"7585:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"7585:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7567:34:5"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1413,"src":"7633:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1386,"name":"bool","nodeType":"ElementaryTypeName","src":"7633:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7632:6:5"},"scope":1860,"src":"7540:261:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1427,"nodeType":"Block","src":"8196:43:5","statements":[{"expression":{"arguments":[{"id":1422,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"8216:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1423,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"8220:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8229:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1421,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1428,1457],"referencedDeclaration":1457,"src":"8206:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8206:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1426,"nodeType":"ExpressionStatement","src":"8206:26:5"}]},"documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"7807:319:5","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8140:9:5","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"to","nameLocation":"8158:2:5","nodeType":"VariableDeclaration","scope":1428,"src":"8150:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"8150:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"tokenId","nameLocation":"8170:7:5","nodeType":"VariableDeclaration","scope":1428,"src":"8162:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"8162:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8149:29:5"},"returnParameters":{"id":1420,"nodeType":"ParameterList","parameters":[],"src":"8196:0:5"},"scope":1860,"src":"8131:108:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1456,"nodeType":"Block","src":"8574:195:5","statements":[{"expression":{"arguments":[{"id":1439,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"8590:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1440,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"8594:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1438,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"8584:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8584:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1442,"nodeType":"ExpressionStatement","src":"8584:18:5"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8664:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8656:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:5","typeDescriptions":{}}},"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8656:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1449,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"8668:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1450,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"8672:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1451,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"8681:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1444,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"8633:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8633:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8700:52:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8612:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8612:150:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1455,"nodeType":"ExpressionStatement","src":"8612:150:5"}]},"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"8245:210:5","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1457,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8469:9:5","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"to","nameLocation":"8496:2:5","nodeType":"VariableDeclaration","scope":1457,"src":"8488:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"8488:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"tokenId","nameLocation":"8516:7:5","nodeType":"VariableDeclaration","scope":1457,"src":"8508:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"8508:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"data","nameLocation":"8546:4:5","nodeType":"VariableDeclaration","scope":1457,"src":"8533:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1434,"name":"bytes","nodeType":"ElementaryTypeName","src":"8533:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8478:78:5"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"8574:0:5"},"scope":1860,"src":"8460:309:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1533,"nodeType":"Block","src":"9152:859:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9170:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9184:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9176:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"9176:7:5","typeDescriptions":{}}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9176:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9170:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9188:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9162:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9162:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1474,"nodeType":"ExpressionStatement","src":"9162:61:5"},{"expression":{"arguments":[{"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9241:17:5","subExpression":{"arguments":[{"id":1477,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"9250:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1476,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"9242:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9242:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9260:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9233:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9233:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1482,"nodeType":"ExpressionStatement","src":"9233:58:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9331:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9323:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"9323:7:5","typeDescriptions":{}}},"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9323:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1488,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9335:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1489,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"9339:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9348:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1483,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"9302:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9302:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1492,"nodeType":"ExpressionStatement","src":"9302:48:5"},{"expression":{"arguments":[{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9445:17:5","subExpression":{"arguments":[{"id":1495,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"9454:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1494,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"9446:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9446:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9464:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9437:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9437:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1500,"nodeType":"ExpressionStatement","src":"9437:58:5"},{"id":1507,"nodeType":"UncheckedBlock","src":"9506:360:5","statements":[{"expression":{"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1501,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"9837:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1503,"indexExpression":{"id":1502,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9847:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9837:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9854:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9837:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1506,"nodeType":"ExpressionStatement","src":"9837:18:5"}]},{"expression":{"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1508,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"9876:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1510,"indexExpression":{"id":1509,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"9884:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9876:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1511,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9895:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9876:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1513,"nodeType":"ExpressionStatement","src":"9876:21:5"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1515,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:5","typeDescriptions":{}}},"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9922:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9934:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1520,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"9938:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1514,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"9913:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9913:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"EmitStatement","src":"9908:38:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9985:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9977:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"9977:7:5","typeDescriptions":{}}},"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9977:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1528,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9989:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1529,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"9993:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1523,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"9957:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9957:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1532,"nodeType":"ExpressionStatement","src":"9957:47:5"}]},"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"8775:311:5","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1534,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9100:5:5","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"to","nameLocation":"9114:2:5","nodeType":"VariableDeclaration","scope":1534,"src":"9106:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"9106:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1462,"mutability":"mutable","name":"tokenId","nameLocation":"9126:7:5","nodeType":"VariableDeclaration","scope":1534,"src":"9118:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9105:29:5"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[],"src":"9152:0:5"},"scope":1860,"src":"9091:920:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1600,"nodeType":"Block","src":"10386:713:5","statements":[{"assignments":[1541],"declarations":[{"constant":false,"id":1541,"mutability":"mutable","name":"owner","nameLocation":"10404:5:5","nodeType":"VariableDeclaration","scope":1600,"src":"10396:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1546,"initialValue":{"arguments":[{"id":1544,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"10427:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1542,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"10412:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1860_$","typeString":"type(contract ERC721)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1079,"src":"10412:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10412:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10396:39:5"},{"expression":{"arguments":[{"id":1548,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"10467:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10482:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"10474:7:5","typeDescriptions":{}}},"id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10474:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1553,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"10486:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10495:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1547,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"10446:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10446:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1556,"nodeType":"ExpressionStatement","src":"10446:51:5"},{"expression":{"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"10599:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1560,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"10622:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1558,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"10607:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1860_$","typeString":"type(contract ERC721)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1079,"src":"10607:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10607:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10599:31:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1563,"nodeType":"ExpressionStatement","src":"10599:31:5"},{"expression":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10668:31:5","subExpression":{"baseExpression":{"id":1564,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"10675:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1566,"indexExpression":{"id":1565,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"10691:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10675:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"ExpressionStatement","src":"10668:31:5"},{"id":1575,"nodeType":"UncheckedBlock","src":"10710:237:5","statements":[{"expression":{"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1569,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"10915:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1571,"indexExpression":{"id":1570,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"10925:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10915:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10935:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10915:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1574,"nodeType":"ExpressionStatement","src":"10915:21:5"}]},{"expression":{"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10956:23:5","subExpression":{"baseExpression":{"id":1576,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"10963:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1578,"indexExpression":{"id":1577,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"10971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10963:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1580,"nodeType":"ExpressionStatement","src":"10956:23:5"},{"eventCall":{"arguments":[{"id":1582,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"11004:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11019:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11011:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"11011:7:5","typeDescriptions":{}}},"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11011:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1587,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"11023:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1581,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"10995:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10995:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1589,"nodeType":"EmitStatement","src":"10990:41:5"},{"expression":{"arguments":[{"id":1591,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"11062:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11077:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11069:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"11069:7:5","typeDescriptions":{}}},"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11069:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"11081:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11090:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1590,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"11042:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11042:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1599,"nodeType":"ExpressionStatement","src":"11042:50:5"}]},"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"10017:315:5","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1601,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10346:5:5","nodeType":"FunctionDefinition","parameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"tokenId","nameLocation":"10360:7:5","nodeType":"VariableDeclaration","scope":1601,"src":"10352:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"10352:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10351:17:5"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[],"src":"10386:0:5"},"scope":1860,"src":"10337:762:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1685,"nodeType":"Block","src":"11532:1124:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"11565:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1612,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"11550:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1860_$","typeString":"type(contract ERC721)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1079,"src":"11550:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11550:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1616,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"11577:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11550:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11583:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11542:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11542:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1620,"nodeType":"ExpressionStatement","src":"11542:81:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"11641:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11655:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11647:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1623,"name":"address","nodeType":"ElementaryTypeName","src":"11647:7:5","typeDescriptions":{}}},"id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11641:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11659:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11633:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11633:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1630,"nodeType":"ExpressionStatement","src":"11633:65:5"},{"expression":{"arguments":[{"id":1632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"11730:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"11736:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"11740:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11749:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1631,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"11709:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11709:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1637,"nodeType":"ExpressionStatement","src":"11709:42:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1641,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"11866:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1639,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"11851:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1860_$","typeString":"type(contract ERC721)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1079,"src":"11851:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11851:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1643,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"11878:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11851:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11884:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1638,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11843:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11843:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1647,"nodeType":"ExpressionStatement","src":"11843:81:5"},{"expression":{"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11986:31:5","subExpression":{"baseExpression":{"id":1648,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"11993:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1650,"indexExpression":{"id":1649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"12009:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11993:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1652,"nodeType":"ExpressionStatement","src":"11986:31:5"},{"id":1665,"nodeType":"UncheckedBlock","src":"12028:496:5","statements":[{"expression":{"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1653,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"12461:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1655,"indexExpression":{"id":1654,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"12471:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12461:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12480:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12461:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1658,"nodeType":"ExpressionStatement","src":"12461:20:5"},{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1659,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"12495:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1661,"indexExpression":{"id":1660,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"12505:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12495:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12512:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12495:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1664,"nodeType":"ExpressionStatement","src":"12495:18:5"}]},{"expression":{"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1666,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"12533:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1668,"indexExpression":{"id":1667,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"12541:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12533:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1669,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"12552:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12533:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1671,"nodeType":"ExpressionStatement","src":"12533:21:5"},{"eventCall":{"arguments":[{"id":1673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"12579:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1674,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"12585:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1675,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"12589:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1672,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"12570:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12570:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1677,"nodeType":"EmitStatement","src":"12565:32:5"},{"expression":{"arguments":[{"id":1679,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"12628:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"12634:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1681,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"12638:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12647:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1678,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"12608:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12608:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"ExpressionStatement","src":"12608:41:5"}]},"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"11105:313:5","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1686,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11432:9:5","nodeType":"FunctionDefinition","parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"from","nameLocation":"11459:4:5","nodeType":"VariableDeclaration","scope":1686,"src":"11451:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1603,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1606,"mutability":"mutable","name":"to","nameLocation":"11481:2:5","nodeType":"VariableDeclaration","scope":1686,"src":"11473:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"11473:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"tokenId","nameLocation":"11501:7:5","nodeType":"VariableDeclaration","scope":1686,"src":"11493:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"11493:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11441:73:5"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[],"src":"11532:0:5"},"scope":1860,"src":"11423:1233:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1709,"nodeType":"Block","src":"12832:107:5","statements":[{"expression":{"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1694,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"12842:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1696,"indexExpression":{"id":1695,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"12858:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12842:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1697,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"12869:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12842:29:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1699,"nodeType":"ExpressionStatement","src":"12842:29:5"},{"eventCall":{"arguments":[{"arguments":[{"id":1703,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"12910:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1701,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"12895:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1860_$","typeString":"type(contract ERC721)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1079,"src":"12895:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12895:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1705,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"12920:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"12924:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1700,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"12886:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12886:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1708,"nodeType":"EmitStatement","src":"12881:51:5"}]},"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"12662:101:5","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1710,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12777:8:5","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"to","nameLocation":"12794:2:5","nodeType":"VariableDeclaration","scope":1710,"src":"12786:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"12786:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"tokenId","nameLocation":"12806:7:5","nodeType":"VariableDeclaration","scope":1710,"src":"12798:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"12798:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12785:29:5"},"returnParameters":{"id":1693,"nodeType":"ParameterList","parameters":[],"src":"12832:0:5"},"scope":1860,"src":"12768:171:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1741,"nodeType":"Block","src":"13198:184:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1721,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"13216:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1722,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"13225:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13216:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13235:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13208:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13208:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1726,"nodeType":"ExpressionStatement","src":"13208:55:5"},{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1727,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"13273:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1730,"indexExpression":{"id":1728,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"13292:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13273:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1731,"indexExpression":{"id":1729,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"13299:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13273:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1732,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"13311:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13273:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1734,"nodeType":"ExpressionStatement","src":"13273:46:5"},{"eventCall":{"arguments":[{"id":1736,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"13349:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"13356:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1738,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"13366:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1735,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"13334:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13334:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1740,"nodeType":"EmitStatement","src":"13329:46:5"}]},"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"12945:125:5","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1742,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13084:18:5","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"owner","nameLocation":"13120:5:5","nodeType":"VariableDeclaration","scope":1742,"src":"13112:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"operator","nameLocation":"13143:8:5","nodeType":"VariableDeclaration","scope":1742,"src":"13135:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"13135:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"approved","nameLocation":"13166:8:5","nodeType":"VariableDeclaration","scope":1742,"src":"13161:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1716,"name":"bool","nodeType":"ElementaryTypeName","src":"13161:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13102:78:5"},"returnParameters":{"id":1719,"nodeType":"ParameterList","parameters":[],"src":"13198:0:5"},"scope":1860,"src":"13075:307:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1755,"nodeType":"Block","src":"13529:70:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1750,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"13555:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1749,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"13547:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13547:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13565:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13539:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13539:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1754,"nodeType":"ExpressionStatement","src":"13539:53:5"}]},"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"13388:73:5","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":1756,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13475:14:5","nodeType":"FunctionDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"tokenId","nameLocation":"13498:7:5","nodeType":"VariableDeclaration","scope":1756,"src":"13490:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"13490:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13489:17:5"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[],"src":"13529:0:5"},"scope":1860,"src":"13466:133:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1817,"nodeType":"Block","src":"14306:676:5","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1770,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"14320:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2164,"src":"14320:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14320:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1815,"nodeType":"Block","src":"14940:36:5","statements":[{"expression":{"hexValue":"74727565","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14961:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1769,"id":1814,"nodeType":"Return","src":"14954:11:5"}]},"id":1816,"nodeType":"IfStatement","src":"14316:660:5","trueBody":{"id":1812,"nodeType":"Block","src":"14337:597:5","statements":[{"clauses":[{"block":{"id":1792,"nodeType":"Block","src":"14451:91:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1786,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"14476:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1787,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"14486:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1994_$","typeString":"type(contract IERC721Receiver)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1993,"src":"14486:32:5","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14486:41:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14476:51:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1769,"id":1791,"nodeType":"Return","src":"14469:58:5"}]},"errorName":"","id":1793,"nodeType":"TryCatchClause","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"retval","nameLocation":"14443:6:5","nodeType":"VariableDeclaration","scope":1793,"src":"14436:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1783,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14436:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14435:15:5"},"src":"14427:115:5"},{"block":{"id":1809,"nodeType":"Block","src":"14571:353:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1797,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"14593:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14593:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14610:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14593:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1807,"nodeType":"Block","src":"14720:190:5","statements":[{"AST":{"nodeType":"YulBlock","src":"14806:86:5","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14843:2:5","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14847:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14839:3:5"},"nodeType":"YulFunctionCall","src":"14839:15:5"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14862:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14856:5:5"},"nodeType":"YulFunctionCall","src":"14856:13:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14832:6:5"},"nodeType":"YulFunctionCall","src":"14832:38:5"},"nodeType":"YulExpressionStatement","src":"14832:38:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1795,"isOffset":false,"isSlot":false,"src":"14847:6:5","valueSize":1},{"declaration":1795,"isOffset":false,"isSlot":false,"src":"14862:6:5","valueSize":1}],"id":1806,"nodeType":"InlineAssembly","src":"14797:95:5"}]},"id":1808,"nodeType":"IfStatement","src":"14589:321:5","trueBody":{"id":1805,"nodeType":"Block","src":"14613:101:5","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14642:52:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1801,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14635:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14635:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1804,"nodeType":"ExpressionStatement","src":"14635:60:5"}]}}]},"errorName":"","id":1810,"nodeType":"TryCatchClause","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"reason","nameLocation":"14563:6:5","nodeType":"VariableDeclaration","scope":1810,"src":"14550:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1794,"name":"bytes","nodeType":"ElementaryTypeName","src":"14550:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14549:21:5"},"src":"14543:381:5"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1777,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"14392:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14392:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1779,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"14406:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1780,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"14412:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1781,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"14421:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1774,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"14371:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1773,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"14355:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1994_$","typeString":"type(contract IERC721Receiver)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1994","typeString":"contract IERC721Receiver"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1993,"src":"14355:36:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:71:5","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1811,"nodeType":"TryStatement","src":"14351:573:5"}]}}]},"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"13605:541:5","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"14160:22:5","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"from","nameLocation":"14200:4:5","nodeType":"VariableDeclaration","scope":1818,"src":"14192:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"14192:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"to","nameLocation":"14222:2:5","nodeType":"VariableDeclaration","scope":1818,"src":"14214:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"14214:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"tokenId","nameLocation":"14242:7:5","nodeType":"VariableDeclaration","scope":1818,"src":"14234:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"14234:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1765,"mutability":"mutable","name":"data","nameLocation":"14272:4:5","nodeType":"VariableDeclaration","scope":1818,"src":"14259:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1764,"name":"bytes","nodeType":"ElementaryTypeName","src":"14259:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14182:100:5"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1818,"src":"14300:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1767,"name":"bool","nodeType":"ElementaryTypeName","src":"14300:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14299:6:5"},"scope":1860,"src":"14151:831:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1830,"nodeType":"Block","src":"15850:2:5","statements":[]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"14988:705:5","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15707:20:5","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"from","nameLocation":"15745:4:5","nodeType":"VariableDeclaration","scope":1831,"src":"15737:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"15737:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"to","nameLocation":"15767:2:5","nodeType":"VariableDeclaration","scope":1831,"src":"15759:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"15759:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"firstTokenId","nameLocation":"15787:12:5","nodeType":"VariableDeclaration","scope":1831,"src":"15779:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"15779:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"batchSize","nameLocation":"15817:9:5","nodeType":"VariableDeclaration","scope":1831,"src":"15809:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1826,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15727:105:5"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[],"src":"15850:0:5"},"scope":1860,"src":"15698:154:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1843,"nodeType":"Block","src":"16709:2:5","statements":[]},"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"15858:695:5","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1844,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16567:19:5","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"from","nameLocation":"16604:4:5","nodeType":"VariableDeclaration","scope":1844,"src":"16596:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"16596:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"to","nameLocation":"16626:2:5","nodeType":"VariableDeclaration","scope":1844,"src":"16618:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"16618:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"firstTokenId","nameLocation":"16646:12:5","nodeType":"VariableDeclaration","scope":1844,"src":"16638:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"16638:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"batchSize","nameLocation":"16676:9:5","nodeType":"VariableDeclaration","scope":1844,"src":"16668:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"16668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16586:105:5"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[],"src":"16709:0:5"},"scope":1860,"src":"16558:153:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1858,"nodeType":"Block","src":"17260:45:5","statements":[{"expression":{"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1852,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"17270:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1854,"indexExpression":{"id":1853,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"17280:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17270:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1855,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"17292:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17270:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1857,"nodeType":"ExpressionStatement","src":"17270:28:5"}]},"documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"16717:409:5","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"17193:24:5","nodeType":"FunctionDefinition","parameters":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"account","nameLocation":"17226:7:5","nodeType":"VariableDeclaration","scope":1859,"src":"17218:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1846,"name":"address","nodeType":"ElementaryTypeName","src":"17218:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"amount","nameLocation":"17243:6:5","nodeType":"VariableDeclaration","scope":1859,"src":"17235:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"17235:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17217:33:5"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[],"src":"17260:0:5"},"scope":1860,"src":"17184:121:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1861,"src":"628:16679:5","usedErrors":[]}],"src":"107:17201:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2709],"IERC721":[1976]},"id":1977,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1862,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1863,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1977,"sourceUnit":2710,"src":"133:47:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1865,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2709,"src":"271:7:6"},"id":1866,"nodeType":"InheritanceSpecifier","src":"271:7:6"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1864,"nodeType":"StructuredDocumentation","src":"182:67:6","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1976,"linearizedBaseContracts":[1976,2709],"name":"IERC721","nameLocation":"260:7:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"285:88:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":1875,"name":"Transfer","nameLocation":"384:8:6","nodeType":"EventDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:6","nodeType":"VariableDeclaration","scope":1875,"src":"393:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1868,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1871,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:6","nodeType":"VariableDeclaration","scope":1875,"src":"415:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1870,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1873,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:6","nodeType":"VariableDeclaration","scope":1875,"src":"435:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:6"},"src":"378:82:6"},{"anonymous":false,"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"466:94:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":1884,"name":"Approval","nameLocation":"571:8:6","nodeType":"EventDefinition","parameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:6","nodeType":"VariableDeclaration","scope":1884,"src":"580:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:6","nodeType":"VariableDeclaration","scope":1884,"src":"603:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1882,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:6","nodeType":"VariableDeclaration","scope":1884,"src":"629:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:6"},"src":"565:89:6"},{"anonymous":false,"documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"660:117:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":1893,"name":"ApprovalForAll","nameLocation":"788:14:6","nodeType":"EventDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:6","nodeType":"VariableDeclaration","scope":1893,"src":"803:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1886,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1889,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:6","nodeType":"VariableDeclaration","scope":1893,"src":"826:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1891,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:6","nodeType":"VariableDeclaration","scope":1893,"src":"852:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1890,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:6"},"src":"782:85:6"},{"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"873:76:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1901,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:6","nodeType":"FunctionDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"owner","nameLocation":"981:5:6","nodeType":"VariableDeclaration","scope":1901,"src":"973:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:6"},"returnParameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"balance","nameLocation":"1019:7:6","nodeType":"VariableDeclaration","scope":1901,"src":"1011:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:6"},"scope":1976,"src":"954:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"1034:131:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1909,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:6","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:6","nodeType":"VariableDeclaration","scope":1909,"src":"1187:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:6"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"owner","nameLocation":"1235:5:6","nodeType":"VariableDeclaration","scope":1909,"src":"1227:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:6"},"scope":1976,"src":"1170:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1910,"nodeType":"StructuredDocumentation","src":"1248:556:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1921,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:6","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"from","nameLocation":"1852:4:6","nodeType":"VariableDeclaration","scope":1921,"src":"1844:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"to","nameLocation":"1874:2:6","nodeType":"VariableDeclaration","scope":1921,"src":"1866:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:6","nodeType":"VariableDeclaration","scope":1921,"src":"1886:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"data","nameLocation":"1926:4:6","nodeType":"VariableDeclaration","scope":1921,"src":"1911:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1917,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:6"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[],"src":"1945:0:6"},"scope":1976,"src":"1809:137:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"1952:687:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1931,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:6","nodeType":"FunctionDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"from","nameLocation":"2687:4:6","nodeType":"VariableDeclaration","scope":1931,"src":"2679:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"to","nameLocation":"2709:2:6","nodeType":"VariableDeclaration","scope":1931,"src":"2701:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1925,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1928,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:6","nodeType":"VariableDeclaration","scope":1931,"src":"2721:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:6"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[],"src":"2751:0:6"},"scope":1976,"src":"2644:108:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1932,"nodeType":"StructuredDocumentation","src":"2758:732:6","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1941,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:6","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"from","nameLocation":"3534:4:6","nodeType":"VariableDeclaration","scope":1941,"src":"3526:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1933,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"to","nameLocation":"3556:2:6","nodeType":"VariableDeclaration","scope":1941,"src":"3548:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:6","nodeType":"VariableDeclaration","scope":1941,"src":"3568:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:6"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[],"src":"3598:0:6"},"scope":1976,"src":"3495:104:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1942,"nodeType":"StructuredDocumentation","src":"3605:452:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1949,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:6","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"to","nameLocation":"4087:2:6","nodeType":"VariableDeclaration","scope":1949,"src":"4079:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1943,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:6","nodeType":"VariableDeclaration","scope":1949,"src":"4091:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:6"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[],"src":"4116:0:6"},"scope":1976,"src":"4062:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1950,"nodeType":"StructuredDocumentation","src":"4123:309:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1957,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:6","nodeType":"FunctionDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"operator","nameLocation":"4472:8:6","nodeType":"VariableDeclaration","scope":1957,"src":"4464:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:6","nodeType":"VariableDeclaration","scope":1957,"src":"4482:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1953,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:6"},"returnParameters":{"id":1956,"nodeType":"ParameterList","parameters":[],"src":"4506:0:6"},"scope":1976,"src":"4437:70:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"4513:139:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1965,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:6","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:6","nodeType":"VariableDeclaration","scope":1965,"src":"4678:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:6"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"operator","nameLocation":"4726:8:6","nodeType":"VariableDeclaration","scope":1965,"src":"4718:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:6"},"scope":1976,"src":"4657:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"4742:138:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1975,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:6","nodeType":"FunctionDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"owner","nameLocation":"4919:5:6","nodeType":"VariableDeclaration","scope":1975,"src":"4911:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1967,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"operator","nameLocation":"4934:8:6","nodeType":"VariableDeclaration","scope":1975,"src":"4926:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:6"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1975,"src":"4967:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1972,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:6"},"scope":1976,"src":"4885:88:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1977,"src":"250:4725:6","usedErrors":[]}],"src":"108:4868:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1994]},"id":1995,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1978,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1979,"nodeType":"StructuredDocumentation","src":"141:152:7","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1994,"linearizedBaseContracts":[1994],"name":"IERC721Receiver","nameLocation":"304:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"326:493:7","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1993,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:7","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"operator","nameLocation":"867:8:7","nodeType":"VariableDeclaration","scope":1993,"src":"859:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1984,"mutability":"mutable","name":"from","nameLocation":"893:4:7","nodeType":"VariableDeclaration","scope":1993,"src":"885:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:7","nodeType":"VariableDeclaration","scope":1993,"src":"907:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"data","nameLocation":"947:4:7","nodeType":"VariableDeclaration","scope":1993,"src":"932:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1987,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:7"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1993,"src":"976:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1990,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:7"},"scope":1994,"src":"824:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1995,"src":"294:692:7","usedErrors":[]}],"src":"116:871:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[2476],"Context":[2498],"ERC165":[2697],"ERC721":[1860],"ERC721URIStorage":[2119],"IERC165":[2709],"IERC721":[1976],"IERC721Metadata":[2146],"IERC721Receiver":[1994],"Math":[3574],"Strings":[2673]},"id":2120,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1996,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2120,"sourceUnit":1861,"src":"153:23:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1999,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1860,"src":"286:6:8"},"id":2000,"nodeType":"InheritanceSpecifier","src":"286:6:8"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"178:69:8","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":2119,"linearizedBaseContracts":[2119,1860,2146,1976,2697,2709,2498],"name":"ERC721URIStorage","nameLocation":"266:16:8","nodeType":"ContractDefinition","nodes":[{"id":2003,"libraryName":{"id":2001,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2673,"src":"305:7:8"},"nodeType":"UsingForDirective","src":"299:26:8","typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2007,"mutability":"mutable","name":"_tokenURIs","nameLocation":"405:10:8","nodeType":"VariableDeclaration","scope":2119,"src":"370:45:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2006,"keyType":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"370:26:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":2005,"name":"string","nodeType":"ElementaryTypeName","src":"389:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1138],"body":{"id":2065,"nodeType":"Block","src":"570:520:8","statements":[{"expression":{"arguments":[{"id":2017,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"595:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2016,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"580:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"580:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2019,"nodeType":"ExpressionStatement","src":"580:23:8"},{"assignments":[2021],"declarations":[{"constant":false,"id":2021,"mutability":"mutable","name":"_tokenURI","nameLocation":"628:9:8","nodeType":"VariableDeclaration","scope":2065,"src":"614:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2020,"name":"string","nodeType":"ElementaryTypeName","src":"614:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2025,"initialValue":{"baseExpression":{"id":2022,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"640:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2024,"indexExpression":{"id":2023,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"651:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"640:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"614:45:8"},{"assignments":[2027],"declarations":[{"constant":false,"id":2027,"mutability":"mutable","name":"base","nameLocation":"683:4:8","nodeType":"VariableDeclaration","scope":2065,"src":"669:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2026,"name":"string","nodeType":"ElementaryTypeName","src":"669:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2030,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2028,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"690:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"690:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"669:31:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2033,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"779:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"773:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2031,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:8","typeDescriptions":{}}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"773:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"773:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"795:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"773:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2041,"nodeType":"IfStatement","src":"769:70:8","trueBody":{"id":2040,"nodeType":"Block","src":"798:41:8","statements":[{"expression":{"id":2038,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"819:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2015,"id":2039,"nodeType":"Return","src":"812:16:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2044,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"947:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"941:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2042,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:8","typeDescriptions":{}}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"941:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"941:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"967:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"941:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2059,"nodeType":"IfStatement","src":"937:106:8","trueBody":{"id":2058,"nodeType":"Block","src":"970:73:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2053,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1015:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2054,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"1021:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2051,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"998:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"998:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"991:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2049,"name":"string","nodeType":"ElementaryTypeName","src":"991:6:8","typeDescriptions":{}}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"991:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2015,"id":2057,"nodeType":"Return","src":"984:48:8"}]}},{"expression":{"arguments":[{"id":2062,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"1075:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2060,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1060:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2119_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1138,"src":"1060:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2015,"id":2064,"nodeType":"Return","src":"1053:30:8"}]},"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"422:55:8","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2066,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"491:8:8","nodeType":"FunctionDefinition","overrides":{"id":2012,"nodeType":"OverrideSpecifier","overrides":[],"src":"537:8:8"},"parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"tokenId","nameLocation":"508:7:8","nodeType":"VariableDeclaration","scope":2066,"src":"500:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"499:17:8"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2066,"src":"555:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2013,"name":"string","nodeType":"ElementaryTypeName","src":"555:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"554:15:8"},"scope":2119,"src":"482:608:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2087,"nodeType":"Block","src":"1318:133:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2076,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"1344:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2075,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"1336:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1336:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1354:48:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":2074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1328:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1328:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2080,"nodeType":"ExpressionStatement","src":"1328:75:8"},{"expression":{"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2081,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1413:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2083,"indexExpression":{"id":2082,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"1424:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1413:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2084,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"1435:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1413:31:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2086,"nodeType":"ExpressionStatement","src":"1413:31:8"}]},"documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"1096:136:8","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1246:12:8","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"tokenId","nameLocation":"1267:7:8","nodeType":"VariableDeclaration","scope":2088,"src":"1259:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"_tokenURI","nameLocation":"1290:9:8","nodeType":"VariableDeclaration","scope":2088,"src":"1276:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2070,"name":"string","nodeType":"ElementaryTypeName","src":"1276:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:42:8"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"1318:0:8"},"scope":2119,"src":"1237:214:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1601],"body":{"id":2117,"nodeType":"Block","src":"1727:142:8","statements":[{"expression":{"arguments":[{"id":2098,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"1749:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2095,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1737:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2119_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1601,"src":"1737:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1737:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2100,"nodeType":"ExpressionStatement","src":"1737:20:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":2103,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1778:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2105,"indexExpression":{"id":2104,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"1789:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1778:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2101,"name":"bytes","nodeType":"ElementaryTypeName","src":"1772:5:8","typeDescriptions":{}}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1772:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1772:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1809:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1772:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2116,"nodeType":"IfStatement","src":"1768:95:8","trueBody":{"id":2115,"nodeType":"Block","src":"1812:51:8","statements":[{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1826:26:8","subExpression":{"baseExpression":{"id":2110,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1833:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2112,"indexExpression":{"id":2111,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"1844:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1833:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2114,"nodeType":"ExpressionStatement","src":"1826:26:8"}]}}]},"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"1457:207:8","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":2118,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1678:5:8","nodeType":"FunctionDefinition","overrides":{"id":2093,"nodeType":"OverrideSpecifier","overrides":[],"src":"1718:8:8"},"parameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"tokenId","nameLocation":"1692:7:8","nodeType":"VariableDeclaration","scope":2118,"src":"1684:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:17:8"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[],"src":"1727:0:8"},"scope":2119,"src":"1669:200:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2120,"src":"248:1623:8","usedErrors":[]}],"src":"128:1744:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2709],"IERC721":[1976],"IERC721Metadata":[2146]},"id":2147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2121,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2122,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2147,"sourceUnit":1977,"src":"137:24:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2124,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1976,"src":"326:7:9"},"id":2125,"nodeType":"InheritanceSpecifier","src":"326:7:9"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2123,"nodeType":"StructuredDocumentation","src":"163:133:9","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2146,"linearizedBaseContracts":[2146,1976,2709],"name":"IERC721Metadata","nameLocation":"307:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"340:58:9","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2131,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:9","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"416:2:9"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2131,"src":"442:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2128,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:9"},"scope":2146,"src":"403:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2132,"nodeType":"StructuredDocumentation","src":"463:60:9","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2137,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:9","nodeType":"FunctionDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[],"src":"543:2:9"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2137,"src":"569:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2134,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:9"},"scope":2146,"src":"528:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"590:90:9","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2145,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:9","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:9","nodeType":"VariableDeclaration","scope":2145,"src":"703:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:9"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2145,"src":"743:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2142,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:9"},"scope":2146,"src":"685:73:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2147,"src":"297:463:9","usedErrors":[]}],"src":"112:649:9"},"id":9},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2476]},"id":2477,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2148,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"126:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2476,"linearizedBaseContracts":[2476],"name":"Address","nameLocation":"202:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2163,"nodeType":"Block","src":"1241:254:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2157,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"1465:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2156,"id":2162,"nodeType":"Return","src":"1458:30:10"}]},"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"216:954:10","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2164,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:10","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"account","nameLocation":"1203:7:10","nodeType":"VariableDeclaration","scope":2164,"src":"1195:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:10"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2164,"src":"1235:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2154,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:10"},"scope":2476,"src":"1175:320:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2197,"nodeType":"Block","src":"2483:241:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2175,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2476","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2476","typeString":"library Address"}],"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:10","typeDescriptions":{}}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2178,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"2526:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2172,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2182,"nodeType":"ExpressionStatement","src":"2493:73:10"},{"assignments":[2184,null],"declarations":[{"constant":false,"id":2184,"mutability":"mutable","name":"success","nameLocation":"2583:7:10","nodeType":"VariableDeclaration","scope":2197,"src":"2578:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2183,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2191,"initialValue":{"arguments":[{"hexValue":"","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2185,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"2596:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2187,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"2618:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:10"},{"expression":{"arguments":[{"id":2193,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"2647:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"ExpressionStatement","src":"2639:78:10"}]},"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"1501:906:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2198,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:10","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:10","nodeType":"VariableDeclaration","scope":2198,"src":"2431:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2166,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"amount","nameLocation":"2466:6:10","nodeType":"VariableDeclaration","scope":2198,"src":"2458:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:10"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[],"src":"2483:0:10"},"scope":2476,"src":"2412:312:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"3555:96:10","statements":[{"expression":{"arguments":[{"id":2209,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"3594:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2210,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"3602:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2208,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2256,2300],"referencedDeclaration":2300,"src":"3572:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2207,"id":2214,"nodeType":"Return","src":"3565:79:10"}]},"documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"2730:731:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:10","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"target","nameLocation":"3496:6:10","nodeType":"VariableDeclaration","scope":2216,"src":"3488:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"data","nameLocation":"3517:4:10","nodeType":"VariableDeclaration","scope":2216,"src":"3504:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2202,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:10"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"3541:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2205,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:10"},"scope":2476,"src":"3466:185:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2235,"nodeType":"Block","src":"4020:76:10","statements":[{"expression":{"arguments":[{"id":2229,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4059:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2230,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"4067:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2232,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"4076:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2228,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2256,2300],"referencedDeclaration":2300,"src":"4037:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2227,"id":2234,"nodeType":"Return","src":"4030:59:10"}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"3657:211:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2236,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:10","nodeType":"FunctionDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"target","nameLocation":"3912:6:10","nodeType":"VariableDeclaration","scope":2236,"src":"3904:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2218,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2221,"mutability":"mutable","name":"data","nameLocation":"3941:4:10","nodeType":"VariableDeclaration","scope":2236,"src":"3928:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2220,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2223,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:10","nodeType":"VariableDeclaration","scope":2236,"src":"3955:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2222,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:10"},"returnParameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2236,"src":"4006:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2225,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:10"},"scope":2476,"src":"3873:223:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2255,"nodeType":"Block","src":"4601:111:10","statements":[{"expression":{"arguments":[{"id":2249,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"4640:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2250,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"4648:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"4654:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2248,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2256,2300],"referencedDeclaration":2300,"src":"4618:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2247,"id":2254,"nodeType":"Return","src":"4611:94:10"}]},"documentation":{"id":2237,"nodeType":"StructuredDocumentation","src":"4102:351:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2256,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:10","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"target","nameLocation":"4506:6:10","nodeType":"VariableDeclaration","scope":2256,"src":"4498:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2238,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"data","nameLocation":"4535:4:10","nodeType":"VariableDeclaration","scope":2256,"src":"4522:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2240,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"value","nameLocation":"4557:5:10","nodeType":"VariableDeclaration","scope":2256,"src":"4549:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:10"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2256,"src":"4587:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2245,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:10"},"scope":2476,"src":"4458:254:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2299,"nodeType":"Block","src":"5139:267:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2273,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2476","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2476","typeString":"library Address"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:10","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5182:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2280,"nodeType":"ExpressionStatement","src":"5149:81:10"},{"assignments":[2282,2284],"declarations":[{"constant":false,"id":2282,"mutability":"mutable","name":"success","nameLocation":"5246:7:10","nodeType":"VariableDeclaration","scope":2299,"src":"5241:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2281,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:10","nodeType":"VariableDeclaration","scope":2299,"src":"5255:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2283,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2291,"initialValue":{"arguments":[{"id":2289,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"5308:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2285,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"5282:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5301:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:10"},{"expression":{"arguments":[{"id":2293,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"5357:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2294,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"5365:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2295,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"5374:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2296,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"5386:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2292,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"5330:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2269,"id":2298,"nodeType":"Return","src":"5323:76:10"}]},"documentation":{"id":2257,"nodeType":"StructuredDocumentation","src":"4718:237:10","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2300,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:10","nodeType":"FunctionDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"target","nameLocation":"5008:6:10","nodeType":"VariableDeclaration","scope":2300,"src":"5000:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"data","nameLocation":"5037:4:10","nodeType":"VariableDeclaration","scope":2300,"src":"5024:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2260,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2263,"mutability":"mutable","name":"value","nameLocation":"5059:5:10","nodeType":"VariableDeclaration","scope":2300,"src":"5051:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:10","nodeType":"VariableDeclaration","scope":2300,"src":"5074:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2264,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:10"},"returnParameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2300,"src":"5125:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2267,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:10"},"scope":2476,"src":"4960:446:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2316,"nodeType":"Block","src":"5683:97:10","statements":[{"expression":{"arguments":[{"id":2311,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"5719:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2312,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"5727:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2310,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2317,2346],"referencedDeclaration":2346,"src":"5700:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2309,"id":2315,"nodeType":"Return","src":"5693:80:10"}]},"documentation":{"id":2301,"nodeType":"StructuredDocumentation","src":"5412:166:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:10","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"target","nameLocation":"5619:6:10","nodeType":"VariableDeclaration","scope":2317,"src":"5611:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2302,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"data","nameLocation":"5640:4:10","nodeType":"VariableDeclaration","scope":2317,"src":"5627:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2304,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:10"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2317,"src":"5669:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2307,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:10"},"scope":2476,"src":"5583:197:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2345,"nodeType":"Block","src":"6122:168:10","statements":[{"assignments":[2330,2332],"declarations":[{"constant":false,"id":2330,"mutability":"mutable","name":"success","nameLocation":"6138:7:10","nodeType":"VariableDeclaration","scope":2345,"src":"6133:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2329,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:10","nodeType":"VariableDeclaration","scope":2345,"src":"6147:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2331,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2337,"initialValue":{"arguments":[{"id":2335,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"6192:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2333,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"6174:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:10"},{"expression":{"arguments":[{"id":2339,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"6241:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2340,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"6249:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2341,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"6258:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2342,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"6270:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2338,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"6214:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2328,"id":2344,"nodeType":"Return","src":"6207:76:10"}]},"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"5786:173:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:10","nodeType":"FunctionDefinition","parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"target","nameLocation":"6009:6:10","nodeType":"VariableDeclaration","scope":2346,"src":"6001:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2322,"mutability":"mutable","name":"data","nameLocation":"6038:4:10","nodeType":"VariableDeclaration","scope":2346,"src":"6025:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2321,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:10","nodeType":"VariableDeclaration","scope":2346,"src":"6052:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2323,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:10"},"returnParameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2346,"src":"6108:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2326,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:10"},"scope":2476,"src":"5964:326:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2362,"nodeType":"Block","src":"6566:101:10","statements":[{"expression":{"arguments":[{"id":2357,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"6604:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2358,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"6612:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2356,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2363,2392],"referencedDeclaration":2392,"src":"6583:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2355,"id":2361,"nodeType":"Return","src":"6576:84:10"}]},"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"6296:168:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:10","nodeType":"FunctionDefinition","parameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"target","nameLocation":"6507:6:10","nodeType":"VariableDeclaration","scope":2363,"src":"6499:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"data","nameLocation":"6528:4:10","nodeType":"VariableDeclaration","scope":2363,"src":"6515:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2350,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:10"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"6552:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2353,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:10"},"scope":2476,"src":"6469:198:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2391,"nodeType":"Block","src":"7008:170:10","statements":[{"assignments":[2376,2378],"declarations":[{"constant":false,"id":2376,"mutability":"mutable","name":"success","nameLocation":"7024:7:10","nodeType":"VariableDeclaration","scope":2391,"src":"7019:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2375,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:10","nodeType":"VariableDeclaration","scope":2391,"src":"7033:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2377,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2383,"initialValue":{"arguments":[{"id":2381,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7080:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2379,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"7060:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:10"},{"expression":{"arguments":[{"id":2385,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"7129:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2386,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"7137:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2387,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"7146:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2388,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"7158:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2384,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"7102:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2374,"id":2390,"nodeType":"Return","src":"7095:76:10"}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"6673:175:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2392,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:10","nodeType":"FunctionDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"target","nameLocation":"6900:6:10","nodeType":"VariableDeclaration","scope":2392,"src":"6892:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2368,"mutability":"mutable","name":"data","nameLocation":"6929:4:10","nodeType":"VariableDeclaration","scope":2392,"src":"6916:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2367,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2370,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:10","nodeType":"VariableDeclaration","scope":2392,"src":"6943:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2369,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:10"},"returnParameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2392,"src":"6994:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2372,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:10"},"scope":2476,"src":"6853:325:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2430,"nodeType":"Block","src":"7660:434:10","statements":[{"condition":{"id":2406,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"7674:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2428,"nodeType":"Block","src":"8030:58:10","statements":[{"expression":{"arguments":[{"id":2424,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"8052:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2425,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"8064:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2423,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"8044:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2427,"nodeType":"ExpressionStatement","src":"8044:33:10"}]},"id":2429,"nodeType":"IfStatement","src":"7670:418:10","trueBody":{"id":2422,"nodeType":"Block","src":"7683:341:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2407,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"7701:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2419,"nodeType":"IfStatement","src":"7697:286:10","trueBody":{"id":2418,"nodeType":"Block","src":"7725:258:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2413,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"7927:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2412,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"7916:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2417,"nodeType":"ExpressionStatement","src":"7908:60:10"}]}},{"expression":{"id":2420,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"8003:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2405,"id":2421,"nodeType":"Return","src":"7996:17:10"}]}}]},"documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"7184:277:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2431,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:10","nodeType":"FunctionDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"target","nameLocation":"7519:6:10","nodeType":"VariableDeclaration","scope":2431,"src":"7511:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2394,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"success","nameLocation":"7540:7:10","nodeType":"VariableDeclaration","scope":2431,"src":"7535:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2396,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:10","nodeType":"VariableDeclaration","scope":2431,"src":"7557:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2398,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:10","nodeType":"VariableDeclaration","scope":2431,"src":"7590:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2400,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:10"},"returnParameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2431,"src":"7646:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2403,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:10"},"scope":2476,"src":"7466:628:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2454,"nodeType":"Block","src":"8475:135:10","statements":[{"condition":{"id":2443,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"8489:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2452,"nodeType":"Block","src":"8546:58:10","statements":[{"expression":{"arguments":[{"id":2448,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8568:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2449,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"8580:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2447,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"8560:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2451,"nodeType":"ExpressionStatement","src":"8560:33:10"}]},"id":2453,"nodeType":"IfStatement","src":"8485:119:10","trueBody":{"id":2446,"nodeType":"Block","src":"8498:42:10","statements":[{"expression":{"id":2444,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8519:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2442,"id":2445,"nodeType":"Return","src":"8512:17:10"}]}}]},"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"8100:210:10","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2455,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:10","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"success","nameLocation":"8355:7:10","nodeType":"VariableDeclaration","scope":2455,"src":"8350:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2433,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:10","nodeType":"VariableDeclaration","scope":2455,"src":"8372:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2435,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2438,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:10","nodeType":"VariableDeclaration","scope":2455,"src":"8405:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2437,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:10"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2455,"src":"8461:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2440,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:10"},"scope":2476,"src":"8315:295:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2474,"nodeType":"Block","src":"8699:457:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2462,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8775:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2472,"nodeType":"Block","src":"9105:45:10","statements":[{"expression":{"arguments":[{"id":2469,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"9126:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2468,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2471,"nodeType":"ExpressionStatement","src":"9119:20:10"}]},"id":2473,"nodeType":"IfStatement","src":"8771:379:10","trueBody":{"id":2467,"nodeType":"Block","src":"8798:301:10","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:10","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:10"},"nodeType":"YulFunctionCall","src":"8997:17:10"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:10","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:10"},"nodeType":"YulFunctionCall","src":"9038:19:10"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:10"},"nodeType":"YulFunctionCall","src":"9031:44:10"},"nodeType":"YulExpressionStatement","src":"9031:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2457,"isOffset":false,"isSlot":false,"src":"9003:10:10","valueSize":1},{"declaration":2457,"isOffset":false,"isSlot":false,"src":"9046:10:10","valueSize":1}],"id":2466,"nodeType":"InlineAssembly","src":"8947:142:10"}]}}]},"id":2475,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:10","nodeType":"FunctionDefinition","parameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:10","nodeType":"VariableDeclaration","scope":2475,"src":"8633:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2456,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2459,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:10","nodeType":"VariableDeclaration","scope":2475,"src":"8658:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2458,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:10"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[],"src":"8699:0:10"},"scope":2476,"src":"8616:540:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2477,"src":"194:8964:10","usedErrors":[]}],"src":"101:9058:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2498]},"id":2499,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2478,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:11"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"111:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2498,"linearizedBaseContracts":[2498],"name":"Context","nameLocation":"626:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2487,"nodeType":"Block","src":"702:34:11","statements":[{"expression":{"expression":{"id":2484,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2483,"id":2486,"nodeType":"Return","src":"712:17:11"}]},"id":2488,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:11","nodeType":"FunctionDefinition","parameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"659:2:11"},"returnParameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2488,"src":"693:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2481,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:11"},"scope":2498,"src":"640:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2496,"nodeType":"Block","src":"809:32:11","statements":[{"expression":{"expression":{"id":2493,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2492,"id":2495,"nodeType":"Return","src":"819:15:11"}]},"id":2497,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:11","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[],"src":"759:2:11"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2497,"src":"793:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2490,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:11"},"scope":2498,"src":"742:99:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2499,"src":"608:235:11","usedErrors":[]}],"src":"86:758:11"},"id":11},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3574],"Strings":[2673]},"id":2674,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2500,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2501,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2674,"sourceUnit":3575,"src":"126:25:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"153:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":2673,"linearizedBaseContracts":[2673],"name":"Strings","nameLocation":"196:7:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2505,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:12","nodeType":"VariableDeclaration","scope":2673,"src":"210:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2503,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2508,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:12","nodeType":"VariableDeclaration","scope":2673,"src":"270:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2506,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2555,"nodeType":"Block","src":"486:625:12","statements":[{"id":2554,"nodeType":"UncheckedBlock","src":"496:609:12","statements":[{"assignments":[2517],"declarations":[{"constant":false,"id":2517,"mutability":"mutable","name":"length","nameLocation":"528:6:12","nodeType":"VariableDeclaration","scope":2554,"src":"520:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2524,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"548:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2518,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"537:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3574_$","typeString":"type(library Math)"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3411,"src":"537:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:12"},{"assignments":[2526],"declarations":[{"constant":false,"id":2526,"mutability":"mutable","name":"buffer","nameLocation":"586:6:12","nodeType":"VariableDeclaration","scope":2554,"src":"572:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2525,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2531,"initialValue":{"arguments":[{"id":2529,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"606:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2527,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:12"},{"assignments":[2533],"declarations":[{"constant":false,"id":2533,"mutability":"mutable","name":"ptr","nameLocation":"635:3:12","nodeType":"VariableDeclaration","scope":2554,"src":"627:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2534,"nodeType":"VariableDeclarationStatement","src":"627:11:12"},{"AST":{"nodeType":"YulBlock","src":"708:67:12","statements":[{"nodeType":"YulAssignment","src":"726:35:12","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:12","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:12"},"nodeType":"YulFunctionCall","src":"745:15:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:12"},"nodeType":"YulFunctionCall","src":"733:28:12"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2526,"isOffset":false,"isSlot":false,"src":"737:6:12","valueSize":1},{"declaration":2517,"isOffset":false,"isSlot":false,"src":"753:6:12","valueSize":1},{"declaration":2533,"isOffset":false,"isSlot":false,"src":"726:3:12","valueSize":1}],"id":2535,"nodeType":"InlineAssembly","src":"699:76:12"},{"body":{"id":2550,"nodeType":"Block","src":"801:267:12","statements":[{"expression":{"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:12","subExpression":{"id":2537,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"819:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2539,"nodeType":"ExpressionStatement","src":"819:5:12"},{"AST":{"nodeType":"YulBlock","src":"902:84:12","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:12","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:12"},"nodeType":"YulFunctionCall","src":"942:14:12"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:12"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:12"},"nodeType":"YulFunctionCall","src":"937:30:12"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:12"},"nodeType":"YulFunctionCall","src":"924:44:12"},"nodeType":"YulExpressionStatement","src":"924:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2505,"isOffset":false,"isSlot":false,"src":"958:8:12","valueSize":1},{"declaration":2533,"isOffset":false,"isSlot":false,"src":"932:3:12","valueSize":1},{"declaration":2511,"isOffset":false,"isSlot":false,"src":"946:5:12","valueSize":1}],"id":2540,"nodeType":"InlineAssembly","src":"893:93:12"},{"expression":{"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"1003:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2544,"nodeType":"ExpressionStatement","src":"1003:11:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"1036:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2549,"nodeType":"IfStatement","src":"1032:21:12","trueBody":{"id":2548,"nodeType":"Break","src":"1048:5:12"}}]},"condition":{"hexValue":"74727565","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2551,"nodeType":"WhileStatement","src":"788:280:12"},{"expression":{"id":2552,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"1088:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2515,"id":2553,"nodeType":"Return","src":"1081:13:12"}]}]},"documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"320:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2556,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:12","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"value","nameLocation":"441:5:12","nodeType":"VariableDeclaration","scope":2556,"src":"433:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:12"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2556,"src":"471:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2513,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:12"},"scope":2673,"src":"415:696:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2575,"nodeType":"Block","src":"1290:100:12","statements":[{"id":2574,"nodeType":"UncheckedBlock","src":"1300:84:12","statements":[{"expression":{"arguments":[{"id":2565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"1343:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"1362:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2566,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"1350:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3574_$","typeString":"type(library Math)"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"1350:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2564,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2576,2652,2672],"referencedDeclaration":2652,"src":"1331:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2563,"id":2573,"nodeType":"Return","src":"1324:49:12"}]}]},"documentation":{"id":2557,"nodeType":"StructuredDocumentation","src":"1117:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2576,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:12","nodeType":"FunctionDefinition","parameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"value","nameLocation":"1245:5:12","nodeType":"VariableDeclaration","scope":2576,"src":"1237:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:12"},"returnParameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2576,"src":"1275:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2561,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:12"},"scope":2673,"src":"1216:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2651,"nodeType":"Block","src":"1603:347:12","statements":[{"assignments":[2587],"declarations":[{"constant":false,"id":2587,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:12","nodeType":"VariableDeclaration","scope":2651,"src":"1613:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2586,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2596,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2591,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"1649:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2588,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:12"},{"expression":{"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2597,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"1670:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2599,"indexExpression":{"hexValue":"30","id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2602,"nodeType":"ExpressionStatement","src":"1670:15:12"},{"expression":{"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2603,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"1695:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2605,"indexExpression":{"hexValue":"31","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2608,"nodeType":"ExpressionStatement","src":"1695:15:12"},{"body":{"id":2637,"nodeType":"Block","src":"1765:83:12","statements":[{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2623,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"1779:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2625,"indexExpression":{"id":2624,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"1786:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2626,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"1791:8:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2630,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"1800:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2632,"nodeType":"ExpressionStatement","src":"1779:33:12"},{"expression":{"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"1826:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2636,"nodeType":"ExpressionStatement","src":"1826:11:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2617,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"1753:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2638,"initializationExpression":{"assignments":[2610],"declarations":[{"constant":false,"id":2610,"mutability":"mutable","name":"i","nameLocation":"1733:1:12","nodeType":"VariableDeclaration","scope":2638,"src":"1725:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2616,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2612,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"1741:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:12"},"loopExpression":{"expression":{"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:12","subExpression":{"id":2620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"1762:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2622,"nodeType":"ExpressionStatement","src":"1760:3:12"},"nodeType":"ForStatement","src":"1720:128:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"1865:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2639,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2645,"nodeType":"ExpressionStatement","src":"1857:55:12"},{"expression":{"arguments":[{"id":2648,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"1936:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2646,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:12","typeDescriptions":{}}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2585,"id":2650,"nodeType":"Return","src":"1922:21:12"}]},"documentation":{"id":2577,"nodeType":"StructuredDocumentation","src":"1396:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2652,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:12","nodeType":"FunctionDefinition","parameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"value","nameLocation":"1542:5:12","nodeType":"VariableDeclaration","scope":2652,"src":"1534:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2581,"mutability":"mutable","name":"length","nameLocation":"1557:6:12","nodeType":"VariableDeclaration","scope":2652,"src":"1549:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:12"},"returnParameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2652,"src":"1588:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2583,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:12"},"scope":2673,"src":"1513:437:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2671,"nodeType":"Block","src":"2175:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2665,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"2220:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2663,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:12","typeDescriptions":{}}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:12","typeDescriptions":{}}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2668,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"2228:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2660,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2576,2652,2672],"referencedDeclaration":2652,"src":"2192:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2659,"id":2670,"nodeType":"Return","src":"2185:59:12"}]},"documentation":{"id":2653,"nodeType":"StructuredDocumentation","src":"1956:141:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2672,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:12","nodeType":"FunctionDefinition","parameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"addr","nameLocation":"2131:4:12","nodeType":"VariableDeclaration","scope":2672,"src":"2123:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:12"},"returnParameters":{"id":2659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2672,"src":"2160:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2657,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:12"},"scope":2673,"src":"2102:149:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2674,"src":"188:2065:12","usedErrors":[]}],"src":"101:2153:12"},"id":12},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2697],"IERC165":[2709]},"id":2698,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2675,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2698,"sourceUnit":2710,"src":"124:23:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2678,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2709,"src":"754:7:13"},"id":2679,"nodeType":"InheritanceSpecifier","src":"754:7:13"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2677,"nodeType":"StructuredDocumentation","src":"149:576:13","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2697,"linearizedBaseContracts":[2697,2709],"name":"ERC165","nameLocation":"744:6:13","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2708],"body":{"id":2695,"nodeType":"Block","src":"920:64:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2688,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"937:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2690,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"957:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2709_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2709_$","typeString":"type(contract IERC165)"}],"id":2689,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2709","typeString":"type(contract IERC165)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2687,"id":2694,"nodeType":"Return","src":"930:47:13"}]},"documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"768:56:13","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2696,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:13","nodeType":"FunctionDefinition","overrides":{"id":2684,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:13"},"parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:13","nodeType":"VariableDeclaration","scope":2696,"src":"856:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2681,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:13"},"returnParameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"914:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2685,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:13"},"scope":2697,"src":"829:155:13","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2698,"src":"726:260:13","usedErrors":[]}],"src":"99:888:13"},"id":13},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2709]},"id":2710,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2699,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2700,"nodeType":"StructuredDocumentation","src":"125:279:14","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2709,"linearizedBaseContracts":[2709],"name":"IERC165","nameLocation":"415:7:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2701,"nodeType":"StructuredDocumentation","src":"429:340:14","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2708,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:14","nodeType":"FunctionDefinition","parameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:14","nodeType":"VariableDeclaration","scope":2708,"src":"801:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2702,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:14"},"returnParameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2708,"src":"844:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2705,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:14"},"scope":2709,"src":"774:76:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2710,"src":"405:447:14","usedErrors":[]}],"src":"100:753:14"},"id":14},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3574]},"id":3575,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2711,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"128:73:15","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3574,"linearizedBaseContracts":[3574],"name":"Math","nameLocation":"210:4:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2716,"members":[{"id":2713,"name":"Down","nameLocation":"245:4:15","nodeType":"EnumValue","src":"245:4:15"},{"id":2714,"name":"Up","nameLocation":"287:2:15","nodeType":"EnumValue","src":"287:2:15"},{"id":2715,"name":"Zero","nameLocation":"318:4:15","nodeType":"EnumValue","src":"318:4:15"}],"name":"Rounding","nameLocation":"226:8:15","nodeType":"EnumDefinition","src":"221:122:15"},{"body":{"id":2733,"nodeType":"Block","src":"480:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"497:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2727,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"501:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2730,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"509:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:15","trueExpression":{"id":2729,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"505:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2725,"id":2732,"nodeType":"Return","src":"490:20:15"}]},"documentation":{"id":2717,"nodeType":"StructuredDocumentation","src":"349:59:15","text":" @dev Returns the largest of two numbers."},"id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:15","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"a","nameLocation":"434:1:15","nodeType":"VariableDeclaration","scope":2734,"src":"426:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"b","nameLocation":"445:1:15","nodeType":"VariableDeclaration","scope":2734,"src":"437:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2720,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:15"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"471:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:15"},"scope":3574,"src":"413:104:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2751,"nodeType":"Block","src":"655:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2744,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"672:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2745,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"676:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2748,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"684:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:15","trueExpression":{"id":2747,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"680:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2743,"id":2750,"nodeType":"Return","src":"665:20:15"}]},"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"523:60:15","text":" @dev Returns the smallest of two numbers."},"id":2752,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:15","nodeType":"FunctionDefinition","parameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"a","nameLocation":"609:1:15","nodeType":"VariableDeclaration","scope":2752,"src":"601:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"b","nameLocation":"620:1:15","nodeType":"VariableDeclaration","scope":2752,"src":"612:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:15"},"returnParameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2752,"src":"646:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2741,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:15"},"scope":3574,"src":"588:104:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2774,"nodeType":"Block","src":"876:82:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2762,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"931:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2763,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"935:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2766,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"941:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2767,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"945:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2761,"id":2773,"nodeType":"Return","src":"923:28:15"}]},"documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"698:102:15","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:15","nodeType":"FunctionDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"a","nameLocation":"830:1:15","nodeType":"VariableDeclaration","scope":2775,"src":"822:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"b","nameLocation":"841:1:15","nodeType":"VariableDeclaration","scope":2775,"src":"833:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:15"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2775,"src":"867:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:15"},"scope":3574,"src":"805:153:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2799,"nodeType":"Block","src":"1228:123:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2785,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"1316:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"1330:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2793,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"1339:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:15","trueExpression":{"hexValue":"30","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2784,"id":2798,"nodeType":"Return","src":"1309:35:15"}]},"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"964:188:15","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2800,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:15","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"a","nameLocation":"1182:1:15","nodeType":"VariableDeclaration","scope":2800,"src":"1174:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"b","nameLocation":"1193:1:15","nodeType":"VariableDeclaration","scope":2800,"src":"1185:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:15"},"returnParameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2800,"src":"1219:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:15"},"scope":3574,"src":"1157:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2921,"nodeType":"Block","src":"1795:3797:15","statements":[{"id":2920,"nodeType":"UncheckedBlock","src":"1805:3781:15","statements":[{"assignments":[2813],"declarations":[{"constant":false,"id":2813,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:15","nodeType":"VariableDeclaration","scope":2920,"src":"2126:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2814,"nodeType":"VariableDeclarationStatement","src":"2126:13:15"},{"assignments":[2816],"declarations":[{"constant":false,"id":2816,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:15","nodeType":"VariableDeclaration","scope":2920,"src":"2198:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2817,"nodeType":"VariableDeclarationStatement","src":"2198:13:15"},{"AST":{"nodeType":"YulBlock","src":"2278:157:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:15"},"nodeType":"YulFunctionCall","src":"2319:6:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:15"},"nodeType":"YulFunctionCall","src":"2306:20:15"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:15","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:15"},"nodeType":"YulFunctionCall","src":"2352:9:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:15"}]},{"nodeType":"YulAssignment","src":"2378:43:15","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:15"},"nodeType":"YulFunctionCall","src":"2391:14:15"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:15"},"nodeType":"YulFunctionCall","src":"2407:13:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:15"},"nodeType":"YulFunctionCall","src":"2387:34:15"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2813,"isOffset":false,"isSlot":false,"src":"2343:5:15","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"2399:5:15","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"2414:5:15","valueSize":1},{"declaration":2816,"isOffset":false,"isSlot":false,"src":"2378:5:15","valueSize":1},{"declaration":2803,"isOffset":false,"isSlot":false,"src":"2313:1:15","valueSize":1},{"declaration":2803,"isOffset":false,"isSlot":false,"src":"2356:1:15","valueSize":1},{"declaration":2805,"isOffset":false,"isSlot":false,"src":"2316:1:15","valueSize":1},{"declaration":2805,"isOffset":false,"isSlot":false,"src":"2359:1:15","valueSize":1}],"id":2818,"nodeType":"InlineAssembly","src":"2269:166:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2819,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"2516:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2827,"nodeType":"IfStatement","src":"2512:75:15","trueBody":{"id":2826,"nodeType":"Block","src":"2528:59:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2822,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2553:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2823,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"2561:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2811,"id":2825,"nodeType":"Return","src":"2546:26:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"2697:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2830,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"2711:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2828,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2833,"nodeType":"ExpressionStatement","src":"2689:28:15"},{"assignments":[2835],"declarations":[{"constant":false,"id":2835,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:15","nodeType":"VariableDeclaration","scope":2920,"src":"2973:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2836,"nodeType":"VariableDeclarationStatement","src":"2973:17:15"},{"AST":{"nodeType":"YulBlock","src":"3013:291:15","statements":[{"nodeType":"YulAssignment","src":"3082:38:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:15"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:15"},"nodeType":"YulFunctionCall","src":"3095:25:15"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:15"}]},{"nodeType":"YulAssignment","src":"3202:41:15","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:15"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:15"},"nodeType":"YulFunctionCall","src":"3222:20:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:15"},"nodeType":"YulFunctionCall","src":"3211:32:15"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:15"}]},{"nodeType":"YulAssignment","src":"3260:30:15","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:15"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:15"},"nodeType":"YulFunctionCall","src":"3269:21:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2807,"isOffset":false,"isSlot":false,"src":"3108:11:15","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"3236:5:15","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"3260:5:15","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"3273:5:15","valueSize":1},{"declaration":2816,"isOffset":false,"isSlot":false,"src":"3202:5:15","valueSize":1},{"declaration":2816,"isOffset":false,"isSlot":false,"src":"3215:5:15","valueSize":1},{"declaration":2835,"isOffset":false,"isSlot":false,"src":"3082:9:15","valueSize":1},{"declaration":2835,"isOffset":false,"isSlot":false,"src":"3225:9:15","valueSize":1},{"declaration":2835,"isOffset":false,"isSlot":false,"src":"3280:9:15","valueSize":1},{"declaration":2803,"isOffset":false,"isSlot":false,"src":"3102:1:15","valueSize":1},{"declaration":2805,"isOffset":false,"isSlot":false,"src":"3105:1:15","valueSize":1}],"id":2837,"nodeType":"InlineAssembly","src":"3004:300:15"},{"assignments":[2839],"declarations":[{"constant":false,"id":2839,"mutability":"mutable","name":"twos","nameLocation":"3619:4:15","nodeType":"VariableDeclaration","scope":2920,"src":"3611:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2847,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"3626:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:15","subExpression":{"id":2841,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"3642:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:15"},{"AST":{"nodeType":"YulBlock","src":"3681:362:15","statements":[{"nodeType":"YulAssignment","src":"3746:37:15","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:15"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:15"},"nodeType":"YulFunctionCall","src":"3761:22:15"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:15"}]},{"nodeType":"YulAssignment","src":"3850:25:15","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:15"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:15"},"nodeType":"YulFunctionCall","src":"3859:16:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:15"}]},{"nodeType":"YulAssignment","src":"3990:39:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:15","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:15"},"nodeType":"YulFunctionCall","src":"4006:12:15"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:15"},"nodeType":"YulFunctionCall","src":"4002:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:15"},"nodeType":"YulFunctionCall","src":"3998:31:15"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2807,"isOffset":false,"isSlot":false,"src":"3746:11:15","valueSize":1},{"declaration":2807,"isOffset":false,"isSlot":false,"src":"3765:11:15","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"3850:5:15","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"3863:5:15","valueSize":1},{"declaration":2839,"isOffset":false,"isSlot":false,"src":"3778:4:15","valueSize":1},{"declaration":2839,"isOffset":false,"isSlot":false,"src":"3870:4:15","valueSize":1},{"declaration":2839,"isOffset":false,"isSlot":false,"src":"3990:4:15","valueSize":1},{"declaration":2839,"isOffset":false,"isSlot":false,"src":"4013:4:15","valueSize":1},{"declaration":2839,"isOffset":false,"isSlot":false,"src":"4020:4:15","valueSize":1}],"id":2848,"nodeType":"InlineAssembly","src":"3672:371:15"},{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2849,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"4109:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"4118:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2851,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"4126:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2854,"nodeType":"ExpressionStatement","src":"4109:21:15"},{"assignments":[2856],"declarations":[{"constant":false,"id":2856,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:15","nodeType":"VariableDeclaration","scope":2920,"src":"4448:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2863,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2858,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"4471:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:15"},{"expression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2864,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2866,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"4719:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2867,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4733:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2871,"nodeType":"ExpressionStatement","src":"4704:36:15"},{"expression":{"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2872,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4773:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2874,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"4788:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2875,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4802:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2879,"nodeType":"ExpressionStatement","src":"4773:36:15"},{"expression":{"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2880,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4843:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2882,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"4858:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2883,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4872:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2887,"nodeType":"ExpressionStatement","src":"4843:36:15"},{"expression":{"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2888,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4913:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2890,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"4928:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2891,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4942:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2895,"nodeType":"ExpressionStatement","src":"4913:36:15"},{"expression":{"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2896,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4983:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"4998:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2899,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"5012:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2903,"nodeType":"ExpressionStatement","src":"4983:36:15"},{"expression":{"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2904,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"5054:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"5069:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2907,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"5083:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2911,"nodeType":"ExpressionStatement","src":"5054:36:15"},{"expression":{"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"5524:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"5533:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2914,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"5541:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2917,"nodeType":"ExpressionStatement","src":"5524:24:15"},{"expression":{"id":2918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"5569:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2811,"id":2919,"nodeType":"Return","src":"5562:13:15"}]}]},"documentation":{"id":2801,"nodeType":"StructuredDocumentation","src":"1357:305:15","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2922,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:15","nodeType":"FunctionDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"x","nameLocation":"1700:1:15","nodeType":"VariableDeclaration","scope":2922,"src":"1692:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2805,"mutability":"mutable","name":"y","nameLocation":"1719:1:15","nodeType":"VariableDeclaration","scope":2922,"src":"1711:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:15","nodeType":"VariableDeclaration","scope":2922,"src":"1730:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:15"},"returnParameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"result","nameLocation":"1787:6:15","nodeType":"VariableDeclaration","scope":2922,"src":"1779:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:15"},"scope":3574,"src":"1667:3925:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2965,"nodeType":"Block","src":"5872:189:15","statements":[{"assignments":[2938],"declarations":[{"constant":false,"id":2938,"mutability":"mutable","name":"result","nameLocation":"5890:6:15","nodeType":"VariableDeclaration","scope":2965,"src":"5882:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2944,"initialValue":{"arguments":[{"id":2940,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"5906:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2941,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"5909:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2942,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"5912:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2939,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2922,2966],"referencedDeclaration":2922,"src":"5899:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"5938:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2946,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"5950:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2716_$","typeString":"type(enum Math.Rounding)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2714,"src":"5950:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"src":"5938:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2950,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"5972:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2951,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"5975:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2952,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"5978:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2949,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:15","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2962,"nodeType":"IfStatement","src":"5934:98:15","trueBody":{"id":2961,"nodeType":"Block","src":"5996:36:15","statements":[{"expression":{"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"6010:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2960,"nodeType":"ExpressionStatement","src":"6010:11:15"}]}},{"expression":{"id":2963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"6048:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2936,"id":2964,"nodeType":"Return","src":"6041:13:15"}]},"documentation":{"id":2923,"nodeType":"StructuredDocumentation","src":"5598:121:15","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2966,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:15","nodeType":"FunctionDefinition","parameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"x","nameLocation":"5757:1:15","nodeType":"VariableDeclaration","scope":2966,"src":"5749:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"y","nameLocation":"5776:1:15","nodeType":"VariableDeclaration","scope":2966,"src":"5768:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:15","nodeType":"VariableDeclaration","scope":2966,"src":"5787:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:15","nodeType":"VariableDeclaration","scope":2966,"src":"5816:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"},"typeName":{"id":2931,"nodeType":"UserDefinedTypeName","pathNode":{"id":2930,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2716,"src":"5816:8:15"},"referencedDeclaration":2716,"src":"5816:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:15"},"returnParameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2966,"src":"5863:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:15"},"scope":3574,"src":"5724:337:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3077,"nodeType":"Block","src":"6337:1585:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2974,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"6351:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2980,"nodeType":"IfStatement","src":"6347:45:15","trueBody":{"id":2979,"nodeType":"Block","src":"6359:33:15","statements":[{"expression":{"hexValue":"30","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2973,"id":2978,"nodeType":"Return","src":"6373:8:15"}]}},{"assignments":[2982],"declarations":[{"constant":false,"id":2982,"mutability":"mutable","name":"result","nameLocation":"7079:6:15","nodeType":"VariableDeclaration","scope":3077,"src":"7071:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2981,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2991,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"7099:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2984,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3246,3282],"referencedDeclaration":3246,"src":"7094:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:15"},{"id":3076,"nodeType":"UncheckedBlock","src":"7508:408:15","statements":[{"expression":{"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7532:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2993,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7542:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"7551:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7555:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3002,"nodeType":"ExpressionStatement","src":"7532:35:15"},{"expression":{"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7581:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7591:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"7600:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7604:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3013,"nodeType":"ExpressionStatement","src":"7581:35:15"},{"expression":{"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3014,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7630:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3015,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7640:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"7649:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3017,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7653:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3024,"nodeType":"ExpressionStatement","src":"7630:35:15"},{"expression":{"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3025,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7679:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7689:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"7698:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7702:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3035,"nodeType":"ExpressionStatement","src":"7679:35:15"},{"expression":{"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7728:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7738:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3038,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"7747:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3039,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7751:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3046,"nodeType":"ExpressionStatement","src":"7728:35:15"},{"expression":{"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7777:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7787:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3049,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"7796:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3050,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7800:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3053,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3057,"nodeType":"ExpressionStatement","src":"7777:35:15"},{"expression":{"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3058,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7826:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3059,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7836:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3060,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"7845:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7849:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3068,"nodeType":"ExpressionStatement","src":"7826:35:15"},{"expression":{"arguments":[{"id":3070,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7886:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3071,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"7894:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7898:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3069,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"7882:3:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2973,"id":3075,"nodeType":"Return","src":"7875:30:15"}]}]},"documentation":{"id":2967,"nodeType":"StructuredDocumentation","src":"6067:208:15","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3078,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:15","nodeType":"FunctionDefinition","parameters":{"id":2970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"mutability":"mutable","name":"a","nameLocation":"6302:1:15","nodeType":"VariableDeclaration","scope":3078,"src":"6294:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:15"},"returnParameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3078,"src":"6328:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:15"},"scope":3574,"src":"6280:1642:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3113,"nodeType":"Block","src":"8098:161:15","statements":[{"id":3112,"nodeType":"UncheckedBlock","src":"8108:145:15","statements":[{"assignments":[3090],"declarations":[{"constant":false,"id":3090,"mutability":"mutable","name":"result","nameLocation":"8140:6:15","nodeType":"VariableDeclaration","scope":3112,"src":"8132:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3094,"initialValue":{"arguments":[{"id":3092,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"8154:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3091,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3078,3114],"referencedDeclaration":3078,"src":"8149:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"8177:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3096,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"8187:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3097,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"8199:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2716_$","typeString":"type(enum Math.Rounding)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2714,"src":"8199:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"src":"8187:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"8214:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"8223:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3103,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"8232:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:15","trueExpression":{"hexValue":"31","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3088,"id":3111,"nodeType":"Return","src":"8170:72:15"}]}]},"documentation":{"id":3079,"nodeType":"StructuredDocumentation","src":"7928:89:15","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3114,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:15","nodeType":"FunctionDefinition","parameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"a","nameLocation":"8044:1:15","nodeType":"VariableDeclaration","scope":3114,"src":"8036:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3084,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:15","nodeType":"VariableDeclaration","scope":3114,"src":"8047:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"},"typeName":{"id":3083,"nodeType":"UserDefinedTypeName","pathNode":{"id":3082,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2716,"src":"8047:8:15"},"referencedDeclaration":2716,"src":"8047:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:15"},"returnParameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3114,"src":"8089:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:15"},"scope":3574,"src":"8022:237:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3245,"nodeType":"Block","src":"8444:922:15","statements":[{"assignments":[3123],"declarations":[{"constant":false,"id":3123,"mutability":"mutable","name":"result","nameLocation":"8462:6:15","nodeType":"VariableDeclaration","scope":3245,"src":"8454:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3125,"initialValue":{"hexValue":"30","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:15"},{"id":3242,"nodeType":"UncheckedBlock","src":"8482:855:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"8510:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3140,"nodeType":"IfStatement","src":"8506:99:15","trueBody":{"id":3139,"nodeType":"Block","src":"8528:77:15","statements":[{"expression":{"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"8546:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3134,"nodeType":"ExpressionStatement","src":"8546:13:15"},{"expression":{"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3135,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"8577:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3138,"nodeType":"ExpressionStatement","src":"8577:13:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"8622:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3155,"nodeType":"IfStatement","src":"8618:96:15","trueBody":{"id":3154,"nodeType":"Block","src":"8639:75:15","statements":[{"expression":{"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"8657:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3149,"nodeType":"ExpressionStatement","src":"8657:12:15"},{"expression":{"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3150,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"8687:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3153,"nodeType":"ExpressionStatement","src":"8687:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"8731:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3170,"nodeType":"IfStatement","src":"8727:96:15","trueBody":{"id":3169,"nodeType":"Block","src":"8748:75:15","statements":[{"expression":{"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"8766:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3164,"nodeType":"ExpressionStatement","src":"8766:12:15"},{"expression":{"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"8796:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3168,"nodeType":"ExpressionStatement","src":"8796:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"8840:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3185,"nodeType":"IfStatement","src":"8836:96:15","trueBody":{"id":3184,"nodeType":"Block","src":"8857:75:15","statements":[{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"8875:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3179,"nodeType":"ExpressionStatement","src":"8875:12:15"},{"expression":{"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"8905:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3183,"nodeType":"ExpressionStatement","src":"8905:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"8949:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3200,"nodeType":"IfStatement","src":"8945:93:15","trueBody":{"id":3199,"nodeType":"Block","src":"8965:73:15","statements":[{"expression":{"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"8983:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3194,"nodeType":"ExpressionStatement","src":"8983:11:15"},{"expression":{"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"9012:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3198,"nodeType":"ExpressionStatement","src":"9012:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"9055:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3215,"nodeType":"IfStatement","src":"9051:93:15","trueBody":{"id":3214,"nodeType":"Block","src":"9071:73:15","statements":[{"expression":{"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"9089:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3209,"nodeType":"ExpressionStatement","src":"9089:11:15"},{"expression":{"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3210,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"9118:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3213,"nodeType":"ExpressionStatement","src":"9118:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"9161:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3230,"nodeType":"IfStatement","src":"9157:93:15","trueBody":{"id":3229,"nodeType":"Block","src":"9177:73:15","statements":[{"expression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"9195:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3224,"nodeType":"ExpressionStatement","src":"9195:11:15"},{"expression":{"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"9224:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3228,"nodeType":"ExpressionStatement","src":"9224:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"9267:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3241,"nodeType":"IfStatement","src":"9263:64:15","trueBody":{"id":3240,"nodeType":"Block","src":"9283:44:15","statements":[{"expression":{"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"9301:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3239,"nodeType":"ExpressionStatement","src":"9301:11:15"}]}}]},{"expression":{"id":3243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"9353:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3121,"id":3244,"nodeType":"Return","src":"9346:13:15"}]},"documentation":{"id":3115,"nodeType":"StructuredDocumentation","src":"8265:113:15","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3246,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:15","nodeType":"FunctionDefinition","parameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"value","nameLocation":"8405:5:15","nodeType":"VariableDeclaration","scope":3246,"src":"8397:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:15"},"returnParameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3246,"src":"8435:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:15"},"scope":3574,"src":"8383:983:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3281,"nodeType":"Block","src":"9599:165:15","statements":[{"id":3280,"nodeType":"UncheckedBlock","src":"9609:149:15","statements":[{"assignments":[3258],"declarations":[{"constant":false,"id":3258,"mutability":"mutable","name":"result","nameLocation":"9641:6:15","nodeType":"VariableDeclaration","scope":3280,"src":"9633:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3257,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3262,"initialValue":{"arguments":[{"id":3260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"9655:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3259,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3246,3282],"referencedDeclaration":3246,"src":"9650:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"9682:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3264,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"9692:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3265,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"9704:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2716_$","typeString":"type(enum Math.Rounding)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2714,"src":"9704:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"src":"9692:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3269,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"9724:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"9733:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:15","trueExpression":{"hexValue":"31","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3256,"id":3279,"nodeType":"Return","src":"9675:72:15"}]}]},"documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"9372:142:15","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3282,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:15","nodeType":"FunctionDefinition","parameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"value","nameLocation":"9541:5:15","nodeType":"VariableDeclaration","scope":3282,"src":"9533:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3248,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3252,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:15","nodeType":"VariableDeclaration","scope":3282,"src":"9548:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"},"typeName":{"id":3251,"nodeType":"UserDefinedTypeName","pathNode":{"id":3250,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2716,"src":"9548:8:15"},"referencedDeclaration":2716,"src":"9548:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:15"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3282,"src":"9590:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:15"},"scope":3574,"src":"9519:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3410,"nodeType":"Block","src":"9951:828:15","statements":[{"assignments":[3291],"declarations":[{"constant":false,"id":3291,"mutability":"mutable","name":"result","nameLocation":"9969:6:15","nodeType":"VariableDeclaration","scope":3410,"src":"9961:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3293,"initialValue":{"hexValue":"30","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:15"},{"id":3407,"nodeType":"UncheckedBlock","src":"9989:761:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10017:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3310,"nodeType":"IfStatement","src":"10013:99:15","trueBody":{"id":3309,"nodeType":"Block","src":"10034:78:15","statements":[{"expression":{"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10052:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3304,"nodeType":"ExpressionStatement","src":"10052:15:15"},{"expression":{"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"10085:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3308,"nodeType":"ExpressionStatement","src":"10085:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10129:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3327,"nodeType":"IfStatement","src":"10125:99:15","trueBody":{"id":3326,"nodeType":"Block","src":"10146:78:15","statements":[{"expression":{"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10164:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3321,"nodeType":"ExpressionStatement","src":"10164:15:15"},{"expression":{"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3322,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"10197:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3325,"nodeType":"ExpressionStatement","src":"10197:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10241:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3344,"nodeType":"IfStatement","src":"10237:99:15","trueBody":{"id":3343,"nodeType":"Block","src":"10258:78:15","statements":[{"expression":{"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10276:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3338,"nodeType":"ExpressionStatement","src":"10276:15:15"},{"expression":{"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"10309:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3342,"nodeType":"ExpressionStatement","src":"10309:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10353:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3361,"nodeType":"IfStatement","src":"10349:96:15","trueBody":{"id":3360,"nodeType":"Block","src":"10369:76:15","statements":[{"expression":{"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10387:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3355,"nodeType":"ExpressionStatement","src":"10387:14:15"},{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3356,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"10419:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ExpressionStatement","src":"10419:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10462:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3378,"nodeType":"IfStatement","src":"10458:96:15","trueBody":{"id":3377,"nodeType":"Block","src":"10478:76:15","statements":[{"expression":{"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3372,"nodeType":"ExpressionStatement","src":"10496:14:15"},{"expression":{"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"10528:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3376,"nodeType":"ExpressionStatement","src":"10528:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10571:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3395,"nodeType":"IfStatement","src":"10567:96:15","trueBody":{"id":3394,"nodeType":"Block","src":"10587:76:15","statements":[{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10605:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3389,"nodeType":"ExpressionStatement","src":"10605:14:15"},{"expression":{"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3390,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"10637:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3393,"nodeType":"ExpressionStatement","src":"10637:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10680:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3406,"nodeType":"IfStatement","src":"10676:64:15","trueBody":{"id":3405,"nodeType":"Block","src":"10696:44:15","statements":[{"expression":{"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3401,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"10714:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3404,"nodeType":"ExpressionStatement","src":"10714:11:15"}]}}]},{"expression":{"id":3408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"10766:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3289,"id":3409,"nodeType":"Return","src":"10759:13:15"}]},"documentation":{"id":3283,"nodeType":"StructuredDocumentation","src":"9770:114:15","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3411,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:15","nodeType":"FunctionDefinition","parameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"value","nameLocation":"9912:5:15","nodeType":"VariableDeclaration","scope":3411,"src":"9904:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:15"},"returnParameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3411,"src":"9942:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:15"},"scope":3574,"src":"9889:890:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3446,"nodeType":"Block","src":"11014:165:15","statements":[{"id":3445,"nodeType":"UncheckedBlock","src":"11024:149:15","statements":[{"assignments":[3423],"declarations":[{"constant":false,"id":3423,"mutability":"mutable","name":"result","nameLocation":"11056:6:15","nodeType":"VariableDeclaration","scope":3445,"src":"11048:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3427,"initialValue":{"arguments":[{"id":3425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"11071:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3424,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3411,3447],"referencedDeclaration":3411,"src":"11065:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"11098:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3429,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"11108:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3430,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"11120:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2716_$","typeString":"type(enum Math.Rounding)"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2714,"src":"11120:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"src":"11108:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3434,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"11139:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"11148:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:15","trueExpression":{"hexValue":"31","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3421,"id":3444,"nodeType":"Return","src":"11091:71:15"}]}]},"documentation":{"id":3412,"nodeType":"StructuredDocumentation","src":"10785:143:15","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3447,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:15","nodeType":"FunctionDefinition","parameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"value","nameLocation":"10956:5:15","nodeType":"VariableDeclaration","scope":3447,"src":"10948:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3417,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:15","nodeType":"VariableDeclaration","scope":3447,"src":"10963:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"},"typeName":{"id":3416,"nodeType":"UserDefinedTypeName","pathNode":{"id":3415,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2716,"src":"10963:8:15"},"referencedDeclaration":2716,"src":"10963:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:15"},"returnParameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3447,"src":"11005:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:15"},"scope":3574,"src":"10933:246:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3533,"nodeType":"Block","src":"11493:600:15","statements":[{"assignments":[3456],"declarations":[{"constant":false,"id":3456,"mutability":"mutable","name":"result","nameLocation":"11511:6:15","nodeType":"VariableDeclaration","scope":3533,"src":"11503:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3458,"initialValue":{"hexValue":"30","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:15"},{"id":3530,"nodeType":"UncheckedBlock","src":"11531:533:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"11559:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3473,"nodeType":"IfStatement","src":"11555:98:15","trueBody":{"id":3472,"nodeType":"Block","src":"11577:76:15","statements":[{"expression":{"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"11595:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3467,"nodeType":"ExpressionStatement","src":"11595:13:15"},{"expression":{"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"11626:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3471,"nodeType":"ExpressionStatement","src":"11626:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"11670:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3488,"nodeType":"IfStatement","src":"11666:95:15","trueBody":{"id":3487,"nodeType":"Block","src":"11687:74:15","statements":[{"expression":{"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"11705:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3482,"nodeType":"ExpressionStatement","src":"11705:12:15"},{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"11735:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3486,"nodeType":"ExpressionStatement","src":"11735:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"11778:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3503,"nodeType":"IfStatement","src":"11774:95:15","trueBody":{"id":3502,"nodeType":"Block","src":"11795:74:15","statements":[{"expression":{"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"11813:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3497,"nodeType":"ExpressionStatement","src":"11813:12:15"},{"expression":{"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"11843:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3501,"nodeType":"ExpressionStatement","src":"11843:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"11886:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3518,"nodeType":"IfStatement","src":"11882:95:15","trueBody":{"id":3517,"nodeType":"Block","src":"11903:74:15","statements":[{"expression":{"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"11921:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3512,"nodeType":"ExpressionStatement","src":"11921:12:15"},{"expression":{"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"11951:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3516,"nodeType":"ExpressionStatement","src":"11951:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"11994:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3529,"nodeType":"IfStatement","src":"11990:64:15","trueBody":{"id":3528,"nodeType":"Block","src":"12010:44:15","statements":[{"expression":{"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"12028:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3527,"nodeType":"ExpressionStatement","src":"12028:11:15"}]}}]},{"expression":{"id":3531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"12080:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3454,"id":3532,"nodeType":"Return","src":"12073:13:15"}]},"documentation":{"id":3448,"nodeType":"StructuredDocumentation","src":"11185:240:15","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3534,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:15","nodeType":"FunctionDefinition","parameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"value","nameLocation":"11454:5:15","nodeType":"VariableDeclaration","scope":3534,"src":"11446:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:15"},"returnParameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3534,"src":"11484:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:15"},"scope":3574,"src":"11430:663:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3572,"nodeType":"Block","src":"12329:173:15","statements":[{"id":3571,"nodeType":"UncheckedBlock","src":"12339:157:15","statements":[{"assignments":[3546],"declarations":[{"constant":false,"id":3546,"mutability":"mutable","name":"result","nameLocation":"12371:6:15","nodeType":"VariableDeclaration","scope":3571,"src":"12363:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3545,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3550,"initialValue":{"arguments":[{"id":3548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"12387:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3547,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3534,3573],"referencedDeclaration":3534,"src":"12380:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"12414:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"12424:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3553,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"12436:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2716_$","typeString":"type(enum Math.Rounding)"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2714,"src":"12436:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"src":"12424:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"12457:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"12471:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:15","trueExpression":{"hexValue":"31","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3544,"id":3570,"nodeType":"Return","src":"12407:78:15"}]}]},"documentation":{"id":3535,"nodeType":"StructuredDocumentation","src":"12099:143:15","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3573,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:15","nodeType":"FunctionDefinition","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"value","nameLocation":"12271:5:15","nodeType":"VariableDeclaration","scope":3573,"src":"12263:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:15","nodeType":"VariableDeclaration","scope":3573,"src":"12278:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"},"typeName":{"id":3539,"nodeType":"UserDefinedTypeName","pathNode":{"id":3538,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2716,"src":"12278:8:15"},"referencedDeclaration":2716,"src":"12278:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2716","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:15"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3573,"src":"12320:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:15"},"scope":3574,"src":"12247:255:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3575,"src":"202:12302:15","usedErrors":[]}],"src":"103:12402:15"},"id":15},"contracts/BasicNft.sol":{"ast":{"absolutePath":"contracts/BasicNft.sol","exportedSymbols":{"Address":[2476],"BasicNft":[3636],"Context":[2498],"ERC165":[2697],"ERC721":[1860],"IERC165":[2709],"IERC721":[1976],"IERC721Metadata":[2146],"IERC721Receiver":[1994],"Math":[3574],"Strings":[2673]},"id":3637,"license":"SEE LICENSE IN LICENSE","nodeType":"SourceUnit","nodes":[{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":3576,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3637,"sourceUnit":1861,"src":"51:57:16","symbolAliases":[],"unitAlias":""},{"id":3577,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"109:23:16"},{"abstract":false,"baseContracts":[{"baseName":{"id":3578,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1860,"src":"155:6:16"},"id":3579,"nodeType":"InheritanceSpecifier","src":"155:6:16"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3636,"linearizedBaseContracts":[3636,1860,2146,1976,2697,2709,2498],"name":"BasicNft","nameLocation":"143:8:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"78ce9035","id":3582,"mutability":"constant","name":"TOKEN_URI","nameLocation":"191:9:16","nodeType":"VariableDeclaration","scope":3636,"src":"168:132:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3580,"name":"string","nodeType":"ElementaryTypeName","src":"168:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6e","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"211:89:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5eed4f63f16dc8435ed5e031f22f9553384324656005540ac9ece13d0969af8","typeString":"literal_string \"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\""},"value":"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json"},"visibility":"public"},{"constant":false,"id":3584,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"322:14:16","nodeType":"VariableDeclaration","scope":3636,"src":"306:30:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":3595,"nodeType":"Block","src":"380:35:16","statements":[{"expression":{"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3591,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"390:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"407:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"390:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3594,"nodeType":"ExpressionStatement","src":"390:18:16"}]},"id":3596,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"446f676965","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"364:7:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d21699003d762b953d66adecbe4f97c4791cae2f281f96a4beb7efcb7bbcf6","typeString":"literal_string \"Dogie\""},"value":"Dogie"},{"hexValue":"444f47","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"373:5:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5b35d1f7dc7cf1448a70456de4980702e1fdae4e057d31003c0e1e4b3c4bde2","typeString":"literal_string \"DOG\""},"value":"DOG"}],"id":3589,"kind":"baseConstructorSpecifier","modifierName":{"id":3586,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1860,"src":"357:6:16"},"nodeType":"ModifierInvocation","src":"357:22:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3585,"nodeType":"ParameterList","parameters":[],"src":"354:2:16"},"returnParameters":{"id":3590,"nodeType":"ParameterList","parameters":[],"src":"380:0:16"},"scope":3636,"src":"343:72:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3615,"nodeType":"Block","src":"465:130:16","statements":[{"expression":{"arguments":[{"expression":{"id":3602,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"485:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"485:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3604,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"497:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3601,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1428,1457],"referencedDeclaration":1428,"src":"475:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"475:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3606,"nodeType":"ExpressionStatement","src":"475:37:16"},{"expression":{"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3607,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"522:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"539:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"556:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"539:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"522:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3612,"nodeType":"ExpressionStatement","src":"522:35:16"},{"expression":{"id":3613,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"574:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3600,"id":3614,"nodeType":"Return","src":"567:21:16"}]},"functionSelector":"c2229fea","id":3616,"implemented":true,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"430:7:16","nodeType":"FunctionDefinition","parameters":{"id":3597,"nodeType":"ParameterList","parameters":[],"src":"437:2:16"},"returnParameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3616,"src":"456:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"455:9:16"},"scope":3636,"src":"421:174:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1138],"body":{"id":3626,"nodeType":"Block","src":"685:44:16","statements":[{"expression":{"id":3624,"name":"TOKEN_URI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"713:9:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3623,"id":3625,"nodeType":"Return","src":"706:16:16"}]},"functionSelector":"c87b56dd","id":3627,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"610:8:16","nodeType":"FunctionDefinition","overrides":{"id":3620,"nodeType":"OverrideSpecifier","overrides":[],"src":"652:8:16"},"parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3627,"src":"619:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"619:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"618:21:16"},"returnParameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3627,"src":"670:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3621,"name":"string","nodeType":"ElementaryTypeName","src":"670:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"669:15:16"},"scope":3636,"src":"601:128:16","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3634,"nodeType":"Block","src":"792:38:16","statements":[{"expression":{"id":3632,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"809:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3631,"id":3633,"nodeType":"Return","src":"802:21:16"}]},"functionSelector":"6e02007d","id":3635,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"744:15:16","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[],"src":"759:2:16"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3635,"src":"783:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"783:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"782:9:16"},"scope":3636,"src":"735:95:16","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3637,"src":"134:698:16","usedErrors":[]}],"src":"51:782:16"},"id":16},"contracts/RandomIpfsNft.sol":{"ast":{"absolutePath":"contracts/RandomIpfsNft.sol","exportedSymbols":{"Address":[2476],"Context":[2498],"ERC165":[2697],"ERC721":[1860],"ERC721URIStorage":[2119],"IERC165":[2709],"IERC721":[1976],"IERC721Metadata":[2146],"IERC721Receiver":[1994],"Math":[3574],"Ownable":[933],"RandomIpfsNft":[3986],"RandomIpfsNft__NeedMoreETHSent":[3646],"RandomIpfsNft__RangeOutOfBounds":[3644],"RandomIpfsNft__TransferFailed":[3648],"Strings":[2673],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[241]},"id":3987,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3638,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:17"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":3639,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3987,"sourceUnit":242,"src":"56:80:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":3640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3987,"sourceUnit":58,"src":"137:61:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":3641,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3987,"sourceUnit":2120,"src":"199:78:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3987,"sourceUnit":934,"src":"278:52:17","symbolAliases":[],"unitAlias":""},{"id":3644,"name":"RandomIpfsNft__RangeOutOfBounds","nameLocation":"338:31:17","nodeType":"ErrorDefinition","parameters":{"id":3643,"nodeType":"ParameterList","parameters":[],"src":"369:2:17"},"src":"332:40:17"},{"id":3646,"name":"RandomIpfsNft__NeedMoreETHSent","nameLocation":"379:30:17","nodeType":"ErrorDefinition","parameters":{"id":3645,"nodeType":"ParameterList","parameters":[],"src":"409:2:17"},"src":"373:39:17"},{"id":3648,"name":"RandomIpfsNft__TransferFailed","nameLocation":"419:29:17","nodeType":"ErrorDefinition","parameters":{"id":3647,"nodeType":"ParameterList","parameters":[],"src":"448:2:17"},"src":"413:38:17"},{"abstract":false,"baseContracts":[{"baseName":{"id":3649,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"479:17:17"},"id":3650,"nodeType":"InheritanceSpecifier","src":"479:17:17"},{"baseName":{"id":3651,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"498:16:17"},"id":3652,"nodeType":"InheritanceSpecifier","src":"498:16:17"},{"baseName":{"id":3653,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":933,"src":"516:7:17"},"id":3654,"nodeType":"InheritanceSpecifier","src":"516:7:17"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3986,"linearizedBaseContracts":[3986,933,2119,1860,2146,1976,2697,2709,2498,57],"name":"RandomIpfsNft","nameLocation":"462:13:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"RandomIpfsNft.Breed","id":3658,"members":[{"id":3655,"name":"PUG","nameLocation":"574:3:17","nodeType":"EnumValue","src":"574:3:17"},{"id":3656,"name":"SHIBA_INU","nameLocation":"587:9:17","nodeType":"EnumValue","src":"587:9:17"},{"id":3657,"name":"ST_BERNARD","nameLocation":"606:10:17","nodeType":"EnumValue","src":"606:10:17"}],"name":"Breed","nameLocation":"558:5:17","nodeType":"EnumDefinition","src":"553:69:17"},{"constant":false,"id":3661,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"701:16:17","nodeType":"VariableDeclaration","scope":3986,"src":"657:60:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$241","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":3660,"nodeType":"UserDefinedTypeName","pathNode":{"id":3659,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":241,"src":"657:25:17"},"referencedDeclaration":241,"src":"657:25:17","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$241","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":3663,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"748:16:17","nodeType":"VariableDeclaration","scope":3986,"src":"723:41:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3662,"name":"uint64","nodeType":"ElementaryTypeName","src":"723:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":3665,"mutability":"immutable","name":"i_gasLane","nameLocation":"796:9:17","nodeType":"VariableDeclaration","scope":3986,"src":"770:35:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"770:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3667,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"836:18:17","nodeType":"VariableDeclaration","scope":3986,"src":"811:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3666,"name":"uint32","nodeType":"ElementaryTypeName","src":"811:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":3670,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"884:21:17","nodeType":"VariableDeclaration","scope":3986,"src":"860:49:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3668,"name":"uint16","nodeType":"ElementaryTypeName","src":"860:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"908:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":3673,"mutability":"constant","name":"NUM_WORDS","nameLocation":"939:9:17","nodeType":"VariableDeclaration","scope":3986,"src":"915:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3671,"name":"uint32","nodeType":"ElementaryTypeName","src":"915:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":3675,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"995:14:17","nodeType":"VariableDeclaration","scope":3986,"src":"979:30:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"979:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":3678,"mutability":"constant","name":"MAX_CHANCE_VALUE","nameLocation":"1041:16:17","nodeType":"VariableDeclaration","scope":3986,"src":"1015:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"1015:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1060:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":false,"id":3681,"mutability":"mutable","name":"s_dogTokenURIs","nameLocation":"1087:14:17","nodeType":"VariableDeclaration","scope":3986,"src":"1069:32:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":3679,"name":"string","nodeType":"ElementaryTypeName","src":"1069:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3680,"nodeType":"ArrayTypeName","src":"1069:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":3683,"mutability":"immutable","name":"i_mintFee","nameLocation":"1134:9:17","nodeType":"VariableDeclaration","scope":3986,"src":"1107:36:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"id":3689,"name":"NftRequested","nameLocation":"1169:12:17","nodeType":"EventDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1198:9:17","nodeType":"VariableDeclaration","scope":3689,"src":"1182:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"1182:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3687,"indexed":false,"mutability":"mutable","name":"requester","nameLocation":"1217:9:17","nodeType":"VariableDeclaration","scope":3689,"src":"1209:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3686,"name":"address","nodeType":"ElementaryTypeName","src":"1209:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1181:46:17"},"src":"1163:65:17"},{"anonymous":false,"id":3696,"name":"NftMinted","nameLocation":"1239:9:17","nodeType":"EventDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"indexed":false,"mutability":"mutable","name":"dogBreed","nameLocation":"1255:8:17","nodeType":"VariableDeclaration","scope":3696,"src":"1249:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3658","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":3691,"nodeType":"UserDefinedTypeName","pathNode":{"id":3690,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":3658,"src":"1249:5:17"},"referencedDeclaration":3658,"src":"1249:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3658","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"},{"constant":false,"id":3694,"indexed":false,"mutability":"mutable","name":"minter","nameLocation":"1273:6:17","nodeType":"VariableDeclaration","scope":3696,"src":"1265:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3693,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1248:32:17"},"src":"1233:48:17"},{"constant":false,"functionSelector":"a36f573b","id":3700,"mutability":"mutable","name":"s_requestIdToSender","nameLocation":"1339:19:17","nodeType":"VariableDeclaration","scope":3986,"src":"1304:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":3699,"keyType":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1312:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1304:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":3698,"name":"address","nodeType":"ElementaryTypeName","src":"1323:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"body":{"id":3750,"nodeType":"Block","src":"1639:266:17","statements":[{"expression":{"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3724,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"1649:16:17","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$241","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3726,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"1694:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3725,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"1668:25:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$241_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1668:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$241","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1649:62:17","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$241","typeString":"contract VRFCoordinatorV2Interface"}},"id":3729,"nodeType":"ExpressionStatement","src":"1649:62:17"},{"expression":{"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3730,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"1721:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3731,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"1740:14:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1721:33:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3733,"nodeType":"ExpressionStatement","src":"1721:33:17"},{"expression":{"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3734,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"1764:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3735,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"1776:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1764:19:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3737,"nodeType":"ExpressionStatement","src":"1764:19:17"},{"expression":{"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3738,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"1793:18:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3739,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"1814:16:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1793:37:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3741,"nodeType":"ExpressionStatement","src":"1793:37:17"},{"expression":{"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3742,"name":"s_dogTokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"1840:14:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3743,"name":"dogTokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"1857:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string memory[3] memory"}},"src":"1840:29:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":3745,"nodeType":"ExpressionStatement","src":"1840:29:17"},{"expression":{"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3746,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"1879:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3747,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"1891:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3749,"nodeType":"ExpressionStatement","src":"1879:19:17"}]},"id":3751,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3717,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"1588:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3718,"kind":"baseConstructorSpecifier","modifierName":{"id":3716,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"1570:17:17"},"nodeType":"ModifierInvocation","src":"1570:35:17"},{"arguments":[{"hexValue":"52616e646f6d2049504653204e4654","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1613:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_060d1bdab5c66f2c3459267e43d1a510b3c61ad39afb4b1b9b944fbc6d6a9661","typeString":"literal_string \"Random IPFS NFT\""},"value":"Random IPFS NFT"},{"hexValue":"52494e","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1632:5:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2493aacafadd9e7cfb3e25fe184ffa39fa77c9794b3bfc81822f04194b6f764","typeString":"literal_string \"RIN\""},"value":"RIN"}],"id":3722,"kind":"baseConstructorSpecifier","modifierName":{"id":3719,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1860,"src":"1606:6:17"},"nodeType":"ModifierInvocation","src":"1606:32:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1394:16:17","nodeType":"VariableDeclaration","scope":3751,"src":"1386:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3701,"name":"address","nodeType":"ElementaryTypeName","src":"1386:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"subscriptionId","nameLocation":"1427:14:17","nodeType":"VariableDeclaration","scope":3751,"src":"1420:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3703,"name":"uint64","nodeType":"ElementaryTypeName","src":"1420:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"gasLane","nameLocation":"1459:7:17","nodeType":"VariableDeclaration","scope":3751,"src":"1451:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1451:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3708,"mutability":"mutable","name":"mintFee","nameLocation":"1484:7:17","nodeType":"VariableDeclaration","scope":3751,"src":"1476:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3710,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1508:16:17","nodeType":"VariableDeclaration","scope":3751,"src":"1501:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3709,"name":"uint32","nodeType":"ElementaryTypeName","src":"1501:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3714,"mutability":"mutable","name":"dogTokenURIs","nameLocation":"1551:12:17","nodeType":"VariableDeclaration","scope":3751,"src":"1534:29:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string[3]"},"typeName":{"baseType":{"id":3711,"name":"string","nodeType":"ElementaryTypeName","src":"1534:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3713,"length":{"hexValue":"33","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1541:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"1534:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage_ptr","typeString":"string[3]"}},"visibility":"internal"}],"src":"1376:193:17"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[],"src":"1639:0:17"},"scope":3986,"src":"1365:540:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3789,"nodeType":"Block","src":"1976:420:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3756,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1990:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1990:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3758,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"2002:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1990:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3764,"nodeType":"IfStatement","src":"1986:91:17","trueBody":{"id":3763,"nodeType":"Block","src":"2013:64:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3760,"name":"RandomIpfsNft__NeedMoreETHSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"2034:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2034:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3762,"nodeType":"RevertStatement","src":"2027:39:17"}]}},{"expression":{"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3765,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"2086:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3768,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"2147:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3769,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"2170:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3770,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"2200:21:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3771,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"2235:18:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3772,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"2267:9:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3766,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"2098:16:17","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$241","typeString":"contract VRFCoordinatorV2Interface"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":181,"src":"2098:35:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2098:188:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2086:200:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3775,"nodeType":"ExpressionStatement","src":"2086:200:17"},{"expression":{"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3776,"name":"s_requestIdToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"2296:19:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3778,"indexExpression":{"id":3777,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"2316:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2296:30:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3779,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2329:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2329:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2296:43:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3782,"nodeType":"ExpressionStatement","src":"2296:43:17"},{"eventCall":{"arguments":[{"id":3784,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"2367:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3785,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2378:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2378:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3783,"name":"NftRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"2354:12:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2354:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3788,"nodeType":"EmitStatement","src":"2349:40:17"}]},"functionSelector":"aa152491","id":3790,"implemented":true,"kind":"function","modifiers":[],"name":"requestNft","nameLocation":"1920:10:17","nodeType":"FunctionDefinition","parameters":{"id":3752,"nodeType":"ParameterList","parameters":[],"src":"1930:2:17"},"returnParameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"requestId","nameLocation":"1965:9:17","nodeType":"VariableDeclaration","scope":3790,"src":"1957:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"1957:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:19:17"},"scope":3986,"src":"1911:485:17","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[30],"body":{"id":3850,"nodeType":"Block","src":"2497:536:17","statements":[{"assignments":[3800],"declarations":[{"constant":false,"id":3800,"mutability":"mutable","name":"dogOwner","nameLocation":"2515:8:17","nodeType":"VariableDeclaration","scope":3850,"src":"2507:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3799,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3804,"initialValue":{"baseExpression":{"id":3801,"name":"s_requestIdToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"2526:19:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3803,"indexExpression":{"id":3802,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"2546:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2526:30:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2507:49:17"},{"assignments":[3806],"declarations":[{"constant":false,"id":3806,"mutability":"mutable","name":"newTokenId","nameLocation":"2574:10:17","nodeType":"VariableDeclaration","scope":3850,"src":"2566:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2566:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3808,"initialValue":{"id":3807,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"2587:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2566:35:17"},{"expression":{"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3809,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"2611:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3810,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"2628:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2628:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2611:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3814,"nodeType":"ExpressionStatement","src":"2611:35:17"},{"assignments":[3816],"declarations":[{"constant":false,"id":3816,"mutability":"mutable","name":"moddedRng","nameLocation":"2706:9:17","nodeType":"VariableDeclaration","scope":3850,"src":"2698:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2698:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3822,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3817,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"2718:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3819,"indexExpression":{"hexValue":"30","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2730:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2718:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3820,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"2735:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2718:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2698:53:17"},{"assignments":[3825],"declarations":[{"constant":false,"id":3825,"mutability":"mutable","name":"dogBreed","nameLocation":"2828:8:17","nodeType":"VariableDeclaration","scope":3850,"src":"2822:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3658","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":3824,"nodeType":"UserDefinedTypeName","pathNode":{"id":3823,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":3658,"src":"2822:5:17"},"referencedDeclaration":3658,"src":"2822:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3658","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"}],"id":3829,"initialValue":{"arguments":[{"id":3827,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"2861:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3826,"name":"getBreedFromModdedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"2839:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_enum$_Breed_$3658_$","typeString":"function (uint256) pure returns (enum RandomIpfsNft.Breed)"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2839:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3658","typeString":"enum RandomIpfsNft.Breed"}},"nodeType":"VariableDeclarationStatement","src":"2822:49:17"},{"expression":{"arguments":[{"id":3831,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"2892:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3832,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"2902:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3830,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1428,1457],"referencedDeclaration":1428,"src":"2882:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2882:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3834,"nodeType":"ExpressionStatement","src":"2882:31:17"},{"expression":{"arguments":[{"id":3836,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"2936:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3837,"name":"s_dogTokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"2948:14:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":3842,"indexExpression":{"arguments":[{"id":3840,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"2971:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3658","typeString":"enum RandomIpfsNft.Breed"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Breed_$3658","typeString":"enum RandomIpfsNft.Breed"}],"id":3839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2963:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"2963:7:17","typeDescriptions":{}}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2963:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2948:33:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3835,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"2923:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2923:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3844,"nodeType":"ExpressionStatement","src":"2923:59:17"},{"eventCall":{"arguments":[{"id":3846,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"3007:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3658","typeString":"enum RandomIpfsNft.Breed"}},{"id":3847,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"3017:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Breed_$3658","typeString":"enum RandomIpfsNft.Breed"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3845,"name":"NftMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"2997:9:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Breed_$3658_$_t_address_$returns$__$","typeString":"function (enum RandomIpfsNft.Breed,address)"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2997:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3849,"nodeType":"EmitStatement","src":"2992:34:17"}]},"id":3851,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2411:18:17","nodeType":"FunctionDefinition","overrides":{"id":3797,"nodeType":"OverrideSpecifier","overrides":[],"src":"2488:8:17"},"parameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"requestId","nameLocation":"2438:9:17","nodeType":"VariableDeclaration","scope":3851,"src":"2430:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3795,"mutability":"mutable","name":"randomWords","nameLocation":"2466:11:17","nodeType":"VariableDeclaration","scope":3851,"src":"2449:28:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2449:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3794,"nodeType":"ArrayTypeName","src":"2449:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2429:49:17"},"returnParameters":{"id":3798,"nodeType":"ParameterList","parameters":[],"src":"2497:0:17"},"scope":3986,"src":"2402:631:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3884,"nodeType":"Block","src":"3076:213:17","statements":[{"assignments":[3857],"declarations":[{"constant":false,"id":3857,"mutability":"mutable","name":"amount","nameLocation":"3094:6:17","nodeType":"VariableDeclaration","scope":3884,"src":"3086:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3863,"initialValue":{"expression":{"arguments":[{"id":3860,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3111:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_RandomIpfsNft_$3986","typeString":"contract RandomIpfsNft"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RandomIpfsNft_$3986","typeString":"contract RandomIpfsNft"}],"id":3859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3103:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3858,"name":"address","nodeType":"ElementaryTypeName","src":"3103:7:17","typeDescriptions":{}}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3103:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"3103:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3086:38:17"},{"assignments":[3865,null],"declarations":[{"constant":false,"id":3865,"mutability":"mutable","name":"success","nameLocation":"3140:7:17","nodeType":"VariableDeclaration","scope":3884,"src":"3135:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3864,"name":"bool","nodeType":"ElementaryTypeName","src":"3135:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3876,"initialValue":{"arguments":[{"hexValue":"","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3193:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3868,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3161:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3161:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3153:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3866,"name":"address","nodeType":"ElementaryTypeName","src":"3153:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3153:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"3153:24:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3872,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"3185:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3153:39:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3153:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3134:62:17"},{"condition":{"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3210:8:17","subExpression":{"id":3877,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"3211:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3883,"nodeType":"IfStatement","src":"3206:77:17","trueBody":{"id":3882,"nodeType":"Block","src":"3220:63:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3879,"name":"RandomIpfsNft__TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"3241:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3241:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3881,"nodeType":"RevertStatement","src":"3234:38:17"}]}}]},"functionSelector":"3ccfd60b","id":3885,"implemented":true,"kind":"function","modifiers":[{"id":3854,"kind":"modifierInvocation","modifierName":{"id":3853,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":852,"src":"3066:9:17"},"nodeType":"ModifierInvocation","src":"3066:9:17"}],"name":"withdraw","nameLocation":"3048:8:17","nodeType":"FunctionDefinition","parameters":{"id":3852,"nodeType":"ParameterList","parameters":[],"src":"3056:2:17"},"returnParameters":{"id":3855,"nodeType":"ParameterList","parameters":[],"src":"3076:0:17"},"scope":3986,"src":"3039:250:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3943,"nodeType":"Block","src":"3392:505:17","statements":[{"assignments":[3894],"declarations":[{"constant":false,"id":3894,"mutability":"mutable","name":"cumulativeSum","nameLocation":"3410:13:17","nodeType":"VariableDeclaration","scope":3943,"src":"3402:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"3402:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3896,"initialValue":{"hexValue":"30","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3426:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3402:25:17"},{"assignments":[3902],"declarations":[{"constant":false,"id":3902,"mutability":"mutable","name":"chanceArray","nameLocation":"3455:11:17","nodeType":"VariableDeclaration","scope":3943,"src":"3437:29:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3437:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3901,"length":{"hexValue":"33","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3437:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"id":3905,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3903,"name":"getChanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"3469:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_array$_t_uint256_$3_memory_ptr_$","typeString":"function () pure returns (uint256[3] memory)"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3469:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"nodeType":"VariableDeclarationStatement","src":"3437:48:17"},{"body":{"id":3938,"nodeType":"Block","src":"3544:297:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3681:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3918,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"3694:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3681:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3920,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3711:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":3921,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"3723:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":3923,"indexExpression":{"id":3922,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"3735:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3723:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3711:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3681:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3931,"nodeType":"IfStatement","src":"3677:110:17","trueBody":{"id":3930,"nodeType":"Block","src":"3739:48:17","statements":[{"expression":{"arguments":[{"id":3927,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"3770:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3926,"name":"Breed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"3764:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Breed_$3658_$","typeString":"type(enum RandomIpfsNft.Breed)"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3764:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3658","typeString":"enum RandomIpfsNft.Breed"}},"functionReturnParameters":3892,"id":3929,"nodeType":"Return","src":"3757:15:17"}]}},{"expression":{"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3932,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"3800:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3933,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"3816:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":3935,"indexExpression":{"id":3934,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"3828:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3816:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3800:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3937,"nodeType":"ExpressionStatement","src":"3800:30:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"3515:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3911,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"3519:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3519:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3515:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3939,"initializationExpression":{"assignments":[3907],"declarations":[{"constant":false,"id":3907,"mutability":"mutable","name":"i","nameLocation":"3508:1:17","nodeType":"VariableDeclaration","scope":3939,"src":"3500:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"3500:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3909,"initialValue":{"hexValue":"30","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3512:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3500:13:17"},"loopExpression":{"expression":{"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3539:3:17","subExpression":{"id":3914,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"3539:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3916,"nodeType":"ExpressionStatement","src":"3539:3:17"},"nodeType":"ForStatement","src":"3495:346:17"},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3940,"name":"RandomIpfsNft__RangeOutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"3857:31:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3857:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3942,"nodeType":"RevertStatement","src":"3850:40:17"}]},"functionSelector":"a51cccf3","id":3944,"implemented":true,"kind":"function","modifiers":[],"name":"getBreedFromModdedRng","nameLocation":"3323:21:17","nodeType":"FunctionDefinition","parameters":{"id":3888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3887,"mutability":"mutable","name":"moddedRng","nameLocation":"3353:9:17","nodeType":"VariableDeclaration","scope":3944,"src":"3345:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3344:19:17"},"returnParameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3944,"src":"3385:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3658","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":3890,"nodeType":"UserDefinedTypeName","pathNode":{"id":3889,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":3658,"src":"3385:5:17"},"referencedDeclaration":3658,"src":"3385:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3658","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"}],"src":"3384:7:17"},"scope":3986,"src":"3314:583:17","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3956,"nodeType":"Block","src":"3969:50:17","statements":[{"expression":{"components":[{"hexValue":"3130","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3987:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"hexValue":"3330","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3991:2:17","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},{"id":3953,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"3995:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3954,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3986:26:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"functionReturnParameters":3950,"id":3955,"nodeType":"Return","src":"3979:33:17"}]},"functionSelector":"5dacf5f4","id":3957,"implemented":true,"kind":"function","modifiers":[],"name":"getChanceArray","nameLocation":"3912:14:17","nodeType":"FunctionDefinition","parameters":{"id":3945,"nodeType":"ParameterList","parameters":[],"src":"3926:2:17"},"returnParameters":{"id":3950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3957,"src":"3950:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"3950:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3948,"length":{"hexValue":"33","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3958:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3950:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"src":"3949:19:17"},"scope":3986,"src":"3903:116:17","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3964,"nodeType":"Block","src":"4077:33:17","statements":[{"expression":{"id":3962,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"4094:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3961,"id":3963,"nodeType":"Return","src":"4087:16:17"}]},"functionSelector":"7a5caab3","id":3965,"implemented":true,"kind":"function","modifiers":[],"name":"getMintFee","nameLocation":"4034:10:17","nodeType":"FunctionDefinition","parameters":{"id":3958,"nodeType":"ParameterList","parameters":[],"src":"4044:2:17"},"returnParameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3965,"src":"4068:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"4068:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4067:9:17"},"scope":3986,"src":"4025:85:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3976,"nodeType":"Block","src":"4192:45:17","statements":[{"expression":{"baseExpression":{"id":3972,"name":"s_dogTokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"4209:14:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":3974,"indexExpression":{"id":3973,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"4224:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4209:21:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3971,"id":3975,"nodeType":"Return","src":"4202:28:17"}]},"functionSelector":"f4eb69c3","id":3977,"implemented":true,"kind":"function","modifiers":[],"name":"getDogTokenURIs","nameLocation":"4125:15:17","nodeType":"FunctionDefinition","parameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"index","nameLocation":"4149:5:17","nodeType":"VariableDeclaration","scope":3977,"src":"4141:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"4141:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4140:15:17"},"returnParameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3977,"src":"4177:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3969,"name":"string","nodeType":"ElementaryTypeName","src":"4177:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4176:15:17"},"scope":3986,"src":"4116:121:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3984,"nodeType":"Block","src":"4300:38:17","statements":[{"expression":{"id":3982,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"4317:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3981,"id":3983,"nodeType":"Return","src":"4310:21:17"}]},"functionSelector":"6e02007d","id":3985,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"4252:15:17","nodeType":"FunctionDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[],"src":"4267:2:17"},"returnParameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3985,"src":"4291:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3979,"name":"uint256","nodeType":"ElementaryTypeName","src":"4291:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4290:9:17"},"scope":3986,"src":"4243:95:17","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3987,"src":"453:3887:17","usedErrors":[8,3644,3646,3648]}],"src":"32:4309:17"},"id":17},"contracts/test/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"contracts/test/VRFCoordinatorV2Mock.sol","exportedSymbols":{"LinkTokenInterface":[152],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[241],"VRFCoordinatorV2Mock":[820]},"id":3990,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3988,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","id":3989,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3990,"sourceUnit":821,"src":"57:70:18","symbolAliases":[],"unitAlias":""}],"src":"32:96:18"},"id":18}},"contracts":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"VRFCoordinatorV2Mock":{"abi":[{"inputs":[{"internalType":"uint96","name":"_baseFee","type":"uint96"},{"internalType":"uint96","name":"_gasPriceLink","type":"uint96"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputSeed","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"payment","type":"uint96"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"RandomWordsFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preSeed","type":"uint256"},{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomWordsRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"inputs":[],"name":"BASE_FEE","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GAS_PRICE_LINK","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"fulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint96","name":"_amount","type":"uint96"}],"name":"fundSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_keyHash","type":"bytes32"},{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint16","name":"_minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"_callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"_numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"_subId":"- A unique subscription id."}},"fulfillRandomWords(uint256,address)":{"details":"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.","params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill"}},"fundSubscription(uint64,uint96)":{"params":{"_amount":"the amount to fund","_subId":"the subscription to fund"}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_356":{"entryPoint":null,"id":356,"parameterSlots":2,"returnSlots":0},"abi_decode_t_uint96_fromMemory":{"entryPoint":150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint96t_uint96_fromMemory":{"entryPoint":173,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":244,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":268,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":273,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1228:19","statements":[{"body":{"nodeType":"YulBlock","src":"69:79:19","statements":[{"nodeType":"YulAssignment","src":"79:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"94:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"88:5:19"},"nodeType":"YulFunctionCall","src":"88:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"79:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"136:5:19"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"110:25:19"},"nodeType":"YulFunctionCall","src":"110:32:19"},"nodeType":"YulExpressionStatement","src":"110:32:19"}]},"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"47:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"55:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"63:5:19","type":""}],"src":"7:141:19"},{"body":{"nodeType":"YulBlock","src":"246:411:19","statements":[{"body":{"nodeType":"YulBlock","src":"292:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"294:77:19"},"nodeType":"YulFunctionCall","src":"294:79:19"},"nodeType":"YulExpressionStatement","src":"294:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"267:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"276:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"263:3:19"},"nodeType":"YulFunctionCall","src":"263:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"288:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"259:3:19"},"nodeType":"YulFunctionCall","src":"259:32:19"},"nodeType":"YulIf","src":"256:119:19"},{"nodeType":"YulBlock","src":"385:127:19","statements":[{"nodeType":"YulVariableDeclaration","src":"400:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"414:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"404:6:19","type":""}]},{"nodeType":"YulAssignment","src":"429:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"474:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"485:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"470:3:19"},"nodeType":"YulFunctionCall","src":"470:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"494:7:19"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"439:30:19"},"nodeType":"YulFunctionCall","src":"439:63:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"429:6:19"}]}]},{"nodeType":"YulBlock","src":"522:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"537:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"551:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"541:6:19","type":""}]},{"nodeType":"YulAssignment","src":"567:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"612:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"623:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"608:3:19"},"nodeType":"YulFunctionCall","src":"608:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"632:7:19"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"577:30:19"},"nodeType":"YulFunctionCall","src":"577:63:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"567:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint96t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"208:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"219:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"231:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"239:6:19","type":""}],"src":"154:503:19"},{"body":{"nodeType":"YulBlock","src":"703:35:19","statements":[{"nodeType":"YulAssignment","src":"713:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"729:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"723:5:19"},"nodeType":"YulFunctionCall","src":"723:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"713:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"696:6:19","type":""}],"src":"663:75:19"},{"body":{"nodeType":"YulBlock","src":"788:65:19","statements":[{"nodeType":"YulAssignment","src":"798:49:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"813:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"820:26:19","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"809:3:19"},"nodeType":"YulFunctionCall","src":"809:38:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"798:7:19"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"770:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"780:7:19","type":""}],"src":"744:109:19"},{"body":{"nodeType":"YulBlock","src":"948:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"965:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"968:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"958:6:19"},"nodeType":"YulFunctionCall","src":"958:12:19"},"nodeType":"YulExpressionStatement","src":"958:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"859:117:19"},{"body":{"nodeType":"YulBlock","src":"1071:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1088:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1091:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1081:6:19"},"nodeType":"YulFunctionCall","src":"1081:12:19"},"nodeType":"YulExpressionStatement","src":"1081:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"982:117:19"},{"body":{"nodeType":"YulBlock","src":"1147:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"1203:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1212:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1215:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1205:6:19"},"nodeType":"YulFunctionCall","src":"1205:12:19"},"nodeType":"YulExpressionStatement","src":"1205:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1170:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1194:5:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"1177:16:19"},"nodeType":"YulFunctionCall","src":"1177:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1167:2:19"},"nodeType":"YulFunctionCall","src":"1167:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1160:6:19"},"nodeType":"YulFunctionCall","src":"1160:42:19"},"nodeType":"YulIf","src":"1157:62:19"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1140:5:19","type":""}],"src":"1105:120:19"}]},"contents":"{\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint96t_uint96_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040526001805560646002553480156200001a57600080fd5b506040516200202f3803806200202f8339818101604052810190620000409190620000ad565b816bffffffffffffffffffffffff166080816bffffffffffffffffffffffff1660a01b81525050806bffffffffffffffffffffffff1660a0816bffffffffffffffffffffffff1660a01b8152505050506200012b565b600081519050620000a78162000111565b92915050565b60008060408385031215620000c757620000c66200010c565b5b6000620000d78582860162000096565b9250506020620000ea8582860162000096565b9150509250929050565b60006bffffffffffffffffffffffff82169050919050565b600080fd5b6200011c81620000f4565b81146200012857600080fd5b50565b60805160a01c60a05160a01c611eca620001656000396000818161086c0152610cdc01526000818161031101526108b10152611eca6000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c8063823597401161008c578063a410347f11610066578063a410347f146101eb578063a47c769614610209578063afc69b531461023c578063d7ae1d3014610258576100ce565b806382359740146101955780639f87fad7146101b1578063a21a23e4146101cd576100ce565b8062012291146100d357806304c357cb146100f35780633d18651e1461010f5780635d3b1d301461012d5780637341c10c1461015d578063808974ff14610179575b600080fd5b6100db610274565b6040516100ea939291906117a1565b60405180910390f35b61010d60048036038101906101089190611408565b6102d4565b005b61011761030f565b60405161012491906118f8565b60405180910390f35b61014760048036038101906101429190611320565b610333565b60405161015491906117df565b60405180910390f35b61017760048036038101906101729190611408565b61054f565b005b610193600480360381019061018e919061139b565b61058a565b005b6101af60048036038101906101aa91906113db565b610aaf565b005b6101cb60048036038101906101c69190611408565b610aea565b005b6101d5610b25565b6040516101e291906118dd565b60405180910390f35b6101f3610cda565b60405161020091906118f8565b60405180910390f35b610223600480360381019061021e91906113db565b610cfe565b6040516102339493929190611913565b60405180910390f35b61025660048036038101906102519190611448565b610e9f565b005b610272600480360381019061026d9190611408565b61106a565b005b60008060606003621e8480600067ffffffffffffffff81111561029a57610299611d6d565b5b6040519080825280602002602001820160405280156102c85781602001602082028036833780820191505090505b50925092509250909192565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690611761565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b60008073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103e5576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008154809291906103fa90611c95565b91905055905060006002600081548092919061041590611c95565b91905055905060405180606001604052808867ffffffffffffffff1681526020018663ffffffff1681526020018563ffffffff168152506004600084815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff168767ffffffffffffffff16897f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a977285858b8b8b604051610539959493929190611853565b60405180910390a4819250505095945050505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190611761565b60405180910390fd5b60005a905060006004600085815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90611781565b60405180910390fd5b6000600460008581526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff168152505090506000816040015163ffffffff1667ffffffffffffffff8111156106cd576106cc611d6d565b5b6040519080825280602002602001820160405280156106fb5781602001602082028036833780820191505090505b50905060005b826040015163ffffffff1681101561077157858160405160200161072692919061182a565b6040516020818303038152906040528051906020012060001c82828151811061075257610751611d3e565b5b602002602001018181525050808061076990611c95565b915050610701565b50600080631fe543e360e01b87846040516024016107909291906117fa565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008673ffffffffffffffffffffffffffffffffffffffff16856020015163ffffffff16836040516108219190611706565b60006040518083038160008787f1925050503d806000811461085f576040519150601f19603f3d011682016040523d82523d6000602084013e610864565b606091505b5050905060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a886108a59190611b4c565b6108af9190611af2565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff166108e89190611a5a565b9050806bffffffffffffffffffffffff1660036000886000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff161015610986576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000886000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff166109db9190611b80565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600460008a8152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549063ffffffff021916905560008201600c6101000a81549063ffffffff02191690555050887f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e48a8385604051610a9c939291906118a6565b60405180910390a2505050505050505050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae190611761565b60405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1c90611761565b60405180910390fd5b600080600081819054906101000a900467ffffffffffffffff1680929190610b4c90611cde565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff16815250600360008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060008054906101000a900467ffffffffffffffff1667ffffffffffffffff167f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf33604051610cb8919061171d565b60405180910390a260008054906101000a900467ffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006060600073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610db6576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166000600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600067ffffffffffffffff811115610e6157610e60611d6d565b5b604051908082528060200260200182016040528015610e8f5781602001602082028036833780820191505090505b5093509350935093509193509193565b600073ffffffffffffffffffffffffffffffffffffffff16600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f50576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16905081600360008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff16610fe89190611ab0565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508267ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f882848461104f9190611ab0565b60405161105d92919061195f565b60405180910390a2505050565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611121576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461119157806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401611188919061171d565b60405180910390fd5b8367ffffffffffffffff167fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981584600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff1660405161120f929190611738565b60405180910390a2600360008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505050505050565b60008135905061129c81611df3565b92915050565b6000813590506112b181611e0a565b92915050565b6000813590506112c681611e21565b92915050565b6000813590506112db81611e38565b92915050565b6000813590506112f081611e4f565b92915050565b60008135905061130581611e66565b92915050565b60008135905061131a81611e7d565b92915050565b600080600080600060a0868803121561133c5761133b611d9c565b5b600061134a888289016112a2565b955050602061135b888289016112f6565b945050604061136c888289016112b7565b935050606061137d888289016112e1565b925050608061138e888289016112e1565b9150509295509295909350565b600080604083850312156113b2576113b1611d9c565b5b60006113c0858286016112cc565b92505060206113d18582860161128d565b9150509250929050565b6000602082840312156113f1576113f0611d9c565b5b60006113ff848285016112f6565b91505092915050565b6000806040838503121561141f5761141e611d9c565b5b600061142d858286016112f6565b925050602061143e8582860161128d565b9150509250929050565b6000806040838503121561145f5761145e611d9c565b5b600061146d858286016112f6565b925050602061147e8582860161130b565b9150509250929050565b600061149483836114d0565b60208301905092915050565b60006114ac8383611617565b60208301905092915050565b60006114c483836116ac565b60208301905092915050565b6114d981611bb4565b82525050565b6114e881611bb4565b82525050565b60006114f9826119b8565b6115038185611a0b565b935061150e83611988565b8060005b8381101561153f5781516115268882611488565b9750611531836119e4565b925050600181019050611512565b5085935050505092915050565b6000611557826119c3565b6115618185611a1c565b935061156c83611998565b8060005b8381101561159d57815161158488826114a0565b975061158f836119f1565b925050600181019050611570565b5085935050505092915050565b60006115b5826119ce565b6115bf8185611a2d565b93506115ca836119a8565b8060005b838110156115fb5781516115e288826114b8565b97506115ed836119fe565b9250506001810190506115ce565b5085935050505092915050565b61161181611bc6565b82525050565b61162081611bd2565b82525050565b6000611631826119d9565b61163b8185611a3e565b935061164b818560208601611c62565b80840191505092915050565b6000611664600f83611a49565b915061166f82611da1565b602082019050919050565b6000611687601383611a49565b915061169282611dca565b602082019050919050565b6116a681611bdc565b82525050565b6116b581611c0a565b82525050565b6116c481611c0a565b82525050565b6116d381611c14565b82525050565b6116e281611c24565b82525050565b6116f181611c50565b82525050565b61170081611c38565b82525050565b60006117128284611626565b915081905092915050565b600060208201905061173260008301846114df565b92915050565b600060408201905061174d60008301856114df565b61175a60208301846116e8565b9392505050565b6000602082019050818103600083015261177a81611657565b9050919050565b6000602082019050818103600083015261179a8161167a565b9050919050565b60006060820190506117b6600083018661169d565b6117c360208301856116ca565b81810360408301526117d5818461154c565b9050949350505050565b60006020820190506117f460008301846116bb565b92915050565b600060408201905061180f60008301856116bb565b818103602083015261182181846115aa565b90509392505050565b600060408201905061183f60008301856116bb565b61184c60208301846116bb565b9392505050565b600060a08201905061186860008301886116bb565b61187560208301876116bb565b611882604083018661169d565b61188f60608301856116ca565b61189c60808301846116ca565b9695505050505050565b60006060820190506118bb60008301866116bb565b6118c860208301856116f7565b6118d56040830184611608565b949350505050565b60006020820190506118f260008301846116d9565b92915050565b600060208201905061190d60008301846116f7565b92915050565b600060808201905061192860008301876116f7565b61193560208301866116d9565b61194260408301856114df565b818103606083015261195481846114ee565b905095945050505050565b600060408201905061197460008301856116e8565b61198160208301846116e8565b9392505050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611a6582611c0a565b9150611a7083611c0a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611aa557611aa4611d0f565b5b828201905092915050565b6000611abb82611c38565b9150611ac683611c38565b9250826bffffffffffffffffffffffff03821115611ae757611ae6611d0f565b5b828201905092915050565b6000611afd82611c0a565b9150611b0883611c0a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b4157611b40611d0f565b5b828202905092915050565b6000611b5782611c0a565b9150611b6283611c0a565b925082821015611b7557611b74611d0f565b5b828203905092915050565b6000611b8b82611c38565b9150611b9683611c38565b925082821015611ba957611ba8611d0f565b5b828203905092915050565b6000611bbf82611bea565b9050919050565b60008115159050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60006bffffffffffffffffffffffff82169050919050565b6000611c5b82611c38565b9050919050565b60005b83811015611c80578082015181840152602081019050611c65565b83811115611c8f576000848401525b50505050565b6000611ca082611c0a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cd357611cd2611d0f565b5b600182019050919050565b6000611ce982611c24565b915067ffffffffffffffff821415611d0457611d03611d0f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f6e6f7420696d706c656d656e7465640000000000000000000000000000000000600082015250565b7f6e6f6e6578697374656e74207265717565737400000000000000000000000000600082015250565b611dfc81611bb4565b8114611e0757600080fd5b50565b611e1381611bd2565b8114611e1e57600080fd5b50565b611e2a81611bdc565b8114611e3557600080fd5b50565b611e4181611c0a565b8114611e4c57600080fd5b50565b611e5881611c14565b8114611e6357600080fd5b50565b611e6f81611c24565b8114611e7a57600080fd5b50565b611e8681611c38565b8114611e9157600080fd5b5056fea2646970667358221220e97e70024bd54661de69207be3ddaefdbd14d1846190fede500bd89c8bfe377a64736f6c63430008070033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x64 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x202F CODESIZE SUB DUP1 PUSH3 0x202F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x40 SWAP2 SWAP1 PUSH3 0xAD JUMP JUMPDEST DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 SHL DUP2 MSTORE POP POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 SHL DUP2 MSTORE POP POP POP POP PUSH3 0x12B JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xA7 DUP2 PUSH3 0x111 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xC7 JUMPI PUSH3 0xC6 PUSH3 0x10C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xD7 DUP6 DUP3 DUP7 ADD PUSH3 0x96 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0xEA DUP6 DUP3 DUP7 ADD PUSH3 0x96 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x11C DUP2 PUSH3 0xF4 JUMP JUMPDEST DUP2 EQ PUSH3 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 SHR PUSH1 0xA0 MLOAD PUSH1 0xA0 SHR PUSH2 0x1ECA PUSH3 0x165 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x86C ADD MSTORE PUSH2 0xCDC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x311 ADD MSTORE PUSH2 0x8B1 ADD MSTORE PUSH2 0x1ECA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82359740 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA410347F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x258 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x82359740 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x1CD JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A JUMPI PUSH2 0x299 PUSH2 0x1D6D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA SWAP1 PUSH2 0x1C95 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x415 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP1 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x1D6D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x771 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x726 SWAP3 SWAP2 SWAP1 PUSH2 0x182A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x1D3E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x769 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x701 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x790 SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x864 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP9 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x1AF2 JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA9C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB4C SWAP1 PUSH2 0x1CDE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE60 PUSH2 0x1D6D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE8F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE8 SWAP2 SWAP1 PUSH2 0x1AB0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105D SWAP3 SWAP2 SWAP1 PUSH2 0x195F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1191 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1188 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x120F SWAP3 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129C DUP2 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B1 DUP2 PUSH2 0x1E0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12C6 DUP2 PUSH2 0x1E21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12DB DUP2 PUSH2 0x1E38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12F0 DUP2 PUSH2 0x1E4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1305 DUP2 PUSH2 0x1E66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x131A DUP2 PUSH2 0x1E7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x133C JUMPI PUSH2 0x133B PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP9 DUP3 DUP10 ADD PUSH2 0x12A2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x135B DUP9 DUP3 DUP10 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x136C DUP9 DUP3 DUP10 ADD PUSH2 0x12B7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x137D DUP9 DUP3 DUP10 ADD PUSH2 0x12E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x138E DUP9 DUP3 DUP10 ADD PUSH2 0x12E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C0 DUP6 DUP3 DUP7 ADD PUSH2 0x12CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D1 DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FF DUP5 DUP3 DUP6 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x141F JUMPI PUSH2 0x141E PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142D DUP6 DUP3 DUP7 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x143E DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145F JUMPI PUSH2 0x145E PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x146D DUP6 DUP3 DUP7 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x147E DUP6 DUP3 DUP7 ADD PUSH2 0x130B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1494 DUP4 DUP4 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AC DUP4 DUP4 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C4 DUP4 DUP4 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D9 DUP2 PUSH2 0x1BB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14E8 DUP2 PUSH2 0x1BB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F9 DUP3 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x1503 DUP2 DUP6 PUSH2 0x1A0B JUMP JUMPDEST SWAP4 POP PUSH2 0x150E DUP4 PUSH2 0x1988 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153F JUMPI DUP2 MLOAD PUSH2 0x1526 DUP9 DUP3 PUSH2 0x1488 JUMP JUMPDEST SWAP8 POP PUSH2 0x1531 DUP4 PUSH2 0x19E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1512 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1557 DUP3 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x1561 DUP2 DUP6 PUSH2 0x1A1C JUMP JUMPDEST SWAP4 POP PUSH2 0x156C DUP4 PUSH2 0x1998 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x159D JUMPI DUP2 MLOAD PUSH2 0x1584 DUP9 DUP3 PUSH2 0x14A0 JUMP JUMPDEST SWAP8 POP PUSH2 0x158F DUP4 PUSH2 0x19F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1570 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B5 DUP3 PUSH2 0x19CE JUMP JUMPDEST PUSH2 0x15BF DUP2 DUP6 PUSH2 0x1A2D JUMP JUMPDEST SWAP4 POP PUSH2 0x15CA DUP4 PUSH2 0x19A8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15FB JUMPI DUP2 MLOAD PUSH2 0x15E2 DUP9 DUP3 PUSH2 0x14B8 JUMP JUMPDEST SWAP8 POP PUSH2 0x15ED DUP4 PUSH2 0x19FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15CE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1611 DUP2 PUSH2 0x1BC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1620 DUP2 PUSH2 0x1BD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1631 DUP3 PUSH2 0x19D9 JUMP JUMPDEST PUSH2 0x163B DUP2 DUP6 PUSH2 0x1A3E JUMP JUMPDEST SWAP4 POP PUSH2 0x164B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C62 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1664 PUSH1 0xF DUP4 PUSH2 0x1A49 JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP3 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1687 PUSH1 0x13 DUP4 PUSH2 0x1A49 JUMP JUMPDEST SWAP2 POP PUSH2 0x1692 DUP3 PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A6 DUP2 PUSH2 0x1BDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16B5 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16C4 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16D3 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16E2 DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16F1 DUP2 PUSH2 0x1C50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1700 DUP2 PUSH2 0x1C38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1712 DUP3 DUP5 PUSH2 0x1626 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1732 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x174D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14DF JUMP JUMPDEST PUSH2 0x175A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x177A DUP2 PUSH2 0x1657 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x179A DUP2 PUSH2 0x167A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17B6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x17C3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16CA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x17D5 DUP2 DUP5 PUSH2 0x154C JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x180F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1821 DUP2 DUP5 PUSH2 0x15AA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x183F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x184C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1868 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x1875 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x1882 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x188F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x189C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x16CA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18BB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x18C8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x18D5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1608 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x190D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1928 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1935 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x1942 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14DF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1954 DUP2 DUP5 PUSH2 0x14EE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1974 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x1981 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A65 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A70 DUP4 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1AA4 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABB DUP3 PUSH2 0x1C38 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC6 DUP4 PUSH2 0x1C38 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1AE7 JUMPI PUSH2 0x1AE6 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFD DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B08 DUP4 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B57 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 DUP4 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1B75 JUMPI PUSH2 0x1B74 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B8B DUP3 PUSH2 0x1C38 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B96 DUP4 PUSH2 0x1C38 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BBF DUP3 PUSH2 0x1BEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5B DUP3 PUSH2 0x1C38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C80 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C65 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C8F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA0 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1CD3 JUMPI PUSH2 0x1CD2 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE9 DUP3 PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1D04 JUMPI PUSH2 0x1D03 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1DFC DUP2 PUSH2 0x1BB4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E13 DUP2 PUSH2 0x1BD2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E2A DUP2 PUSH2 0x1BDC JUMP JUMPDEST DUP2 EQ PUSH2 0x1E35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E41 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E58 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E6F DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E86 DUP2 PUSH2 0x1C38 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 PUSH31 0x70024BD54661DE69207BE3DDAEFDBD14D1846190FEDE500BD89C8BFE377A64 PUSH20 0x6F6C634300080700330000000000000000000000 ","sourceMap":"254:5984:3:-:0;;;1144:1;1118:27;;1173:3;1149:27;;1494:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1562:8;1551:19;;;;;;;;;;;;1593:13;1576:30;;;;;;;;;;;;1494:117;;254:5984;;7:141:19;63:5;94:6;88:13;79:22;;110:32;136:5;110:32;:::i;:::-;7:141;;;;:::o;154:503::-;231:6;239;288:2;276:9;267:7;263:23;259:32;256:119;;;294:79;;:::i;:::-;256:119;414:1;439:63;494:7;485:6;474:9;470:22;439:63;:::i;:::-;429:73;;385:127;551:2;577:63;632:7;623:6;612:9;608:22;577:63;:::i;:::-;567:73;;522:128;154:503;;;;;:::o;744:109::-;780:7;820:26;813:5;809:38;798:49;;744:109;;;:::o;982:117::-;1091:1;1088;1081:12;1105:120;1177:23;1194:5;1177:23;:::i;:::-;1170:5;1167:34;1157:62;;1215:1;1212;1205:12;1157:62;1105:120;:::o;254:5984:3:-;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BASE_FEE_250":{"entryPoint":783,"id":250,"parameterSlots":0,"returnSlots":0},"@GAS_PRICE_LINK_252":{"entryPoint":3290,"id":252,"parameterSlots":0,"returnSlots":0},"@acceptSubscriptionOwnerTransfer_819":{"entryPoint":2735,"id":819,"parameterSlots":1,"returnSlots":0},"@addConsumer_782":{"entryPoint":1359,"id":782,"parameterSlots":2,"returnSlots":0},"@cancelSubscription_714":{"entryPoint":4202,"id":714,"parameterSlots":2,"returnSlots":0},"@createSubscription_641":{"entryPoint":2853,"id":641,"parameterSlots":0,"returnSlots":1},"@fulfillRandomWords_503":{"entryPoint":1418,"id":503,"parameterSlots":2,"returnSlots":0},"@fundSubscription_548":{"entryPoint":3743,"id":548,"parameterSlots":2,"returnSlots":0},"@getRequestConfig_769":{"entryPoint":628,"id":769,"parameterSlots":0,"returnSlots":3},"@getSubscription_687":{"entryPoint":3326,"id":687,"parameterSlots":1,"returnSlots":4},"@removeConsumer_795":{"entryPoint":2794,"id":795,"parameterSlots":2,"returnSlots":0},"@requestRandomWords_613":{"entryPoint":819,"id":613,"parameterSlots":5,"returnSlots":1},"@requestSubscriptionOwnerTransfer_808":{"entryPoint":724,"id":808,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":4749,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":4770,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":4791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4812,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":4833,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":4854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":4875,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32":{"entryPoint":4896,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_address":{"entryPoint":5019,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64":{"entryPoint":5083,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64t_address":{"entryPoint":5128,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64t_uint96":{"entryPoint":5192,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":5256,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":5280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":5304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":5328,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5343,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":5358,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":5452,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":5546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5640,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":5655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack":{"entryPoint":5719,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack":{"entryPoint":5754,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":5789,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":5804,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5819,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":5834,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":5849,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":5864,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":5879,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5894,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":5944,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6017,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6049,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6138,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6186,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":6227,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed":{"entryPoint":6310,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":6365,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":6392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6419,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6495,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6536,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":6552,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6568,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6584,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":6595,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6606,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6617,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6628,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":6641,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6654,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":6667,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":6684,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6701,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6718,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6729,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6746,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":6832,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6898,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6988,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":7040,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7092,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7110,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7122,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":7132,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7146,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7178,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":7188,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":7204,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":7224,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":7248,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":7266,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":7317,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":7390,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7439,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7486,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7533,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7580,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9":{"entryPoint":7585,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0":{"entryPoint":7626,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7667,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7690,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":7713,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7736,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":7759,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":7782,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":7805,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22250:19","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:19","statements":[{"nodeType":"YulAssignment","src":"69:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:19"},"nodeType":"YulFunctionCall","src":"78:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:19"},"nodeType":"YulFunctionCall","src":"107:33:19"},"nodeType":"YulExpressionStatement","src":"107:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:19","type":""}],"src":"7:139:19"},{"body":{"nodeType":"YulBlock","src":"204:87:19","statements":[{"nodeType":"YulAssignment","src":"214:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:19"},"nodeType":"YulFunctionCall","src":"223:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"252:26:19"},"nodeType":"YulFunctionCall","src":"252:33:19"},"nodeType":"YulExpressionStatement","src":"252:33:19"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:19","type":""}],"src":"152:139:19"},{"body":{"nodeType":"YulBlock","src":"348:86:19","statements":[{"nodeType":"YulAssignment","src":"358:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"380:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"367:12:19"},"nodeType":"YulFunctionCall","src":"367:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"358:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"422:5:19"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"396:25:19"},"nodeType":"YulFunctionCall","src":"396:32:19"},"nodeType":"YulExpressionStatement","src":"396:32:19"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"326:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"334:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"342:5:19","type":""}],"src":"297:137:19"},{"body":{"nodeType":"YulBlock","src":"492:87:19","statements":[{"nodeType":"YulAssignment","src":"502:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"524:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"511:12:19"},"nodeType":"YulFunctionCall","src":"511:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"502:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"567:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"540:26:19"},"nodeType":"YulFunctionCall","src":"540:33:19"},"nodeType":"YulExpressionStatement","src":"540:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"470:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"478:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"486:5:19","type":""}],"src":"440:139:19"},{"body":{"nodeType":"YulBlock","src":"636:86:19","statements":[{"nodeType":"YulAssignment","src":"646:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"668:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"655:12:19"},"nodeType":"YulFunctionCall","src":"655:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"646:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"710:5:19"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"684:25:19"},"nodeType":"YulFunctionCall","src":"684:32:19"},"nodeType":"YulExpressionStatement","src":"684:32:19"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"614:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"622:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"630:5:19","type":""}],"src":"585:137:19"},{"body":{"nodeType":"YulBlock","src":"779:86:19","statements":[{"nodeType":"YulAssignment","src":"789:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"811:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"798:12:19"},"nodeType":"YulFunctionCall","src":"798:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"789:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"853:5:19"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"827:25:19"},"nodeType":"YulFunctionCall","src":"827:32:19"},"nodeType":"YulExpressionStatement","src":"827:32:19"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"757:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"765:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"773:5:19","type":""}],"src":"728:137:19"},{"body":{"nodeType":"YulBlock","src":"922:86:19","statements":[{"nodeType":"YulAssignment","src":"932:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"954:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"941:12:19"},"nodeType":"YulFunctionCall","src":"941:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"932:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"996:5:19"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"970:25:19"},"nodeType":"YulFunctionCall","src":"970:32:19"},"nodeType":"YulExpressionStatement","src":"970:32:19"}]},"name":"abi_decode_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"900:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"908:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"916:5:19","type":""}],"src":"871:137:19"},{"body":{"nodeType":"YulBlock","src":"1144:773:19","statements":[{"body":{"nodeType":"YulBlock","src":"1191:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1193:77:19"},"nodeType":"YulFunctionCall","src":"1193:79:19"},"nodeType":"YulExpressionStatement","src":"1193:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1165:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1161:3:19"},"nodeType":"YulFunctionCall","src":"1161:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1186:3:19","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1157:3:19"},"nodeType":"YulFunctionCall","src":"1157:33:19"},"nodeType":"YulIf","src":"1154:120:19"},{"nodeType":"YulBlock","src":"1284:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1299:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1313:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1303:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1328:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1363:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1374:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1359:3:19"},"nodeType":"YulFunctionCall","src":"1359:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1383:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1338:20:19"},"nodeType":"YulFunctionCall","src":"1338:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1328:6:19"}]}]},{"nodeType":"YulBlock","src":"1411:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1426:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1440:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1430:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1456:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1490:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1501:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1486:3:19"},"nodeType":"YulFunctionCall","src":"1486:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1510:7:19"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"1466:19:19"},"nodeType":"YulFunctionCall","src":"1466:52:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1456:6:19"}]}]},{"nodeType":"YulBlock","src":"1538:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1553:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1567:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1557:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1583:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1617:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1628:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1613:3:19"},"nodeType":"YulFunctionCall","src":"1613:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1637:7:19"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"1593:19:19"},"nodeType":"YulFunctionCall","src":"1593:52:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1583:6:19"}]}]},{"nodeType":"YulBlock","src":"1665:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1680:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1694:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1684:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1710:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1744:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1755:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1740:3:19"},"nodeType":"YulFunctionCall","src":"1740:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1764:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"1720:19:19"},"nodeType":"YulFunctionCall","src":"1720:52:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1710:6:19"}]}]},{"nodeType":"YulBlock","src":"1792:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1807:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1821:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1811:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1838:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1872:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1883:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1868:3:19"},"nodeType":"YulFunctionCall","src":"1868:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1892:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"1848:19:19"},"nodeType":"YulFunctionCall","src":"1848:52:19"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1838:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1082:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1093:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1105:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1113:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1121:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1129:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1137:6:19","type":""}],"src":"1014:903:19"},{"body":{"nodeType":"YulBlock","src":"2006:391:19","statements":[{"body":{"nodeType":"YulBlock","src":"2052:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2054:77:19"},"nodeType":"YulFunctionCall","src":"2054:79:19"},"nodeType":"YulExpressionStatement","src":"2054:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:19"},"nodeType":"YulFunctionCall","src":"2023:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:19"},"nodeType":"YulFunctionCall","src":"2019:32:19"},"nodeType":"YulIf","src":"2016:119:19"},{"nodeType":"YulBlock","src":"2145:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2160:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2174:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2164:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2189:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2224:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2235:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2220:3:19"},"nodeType":"YulFunctionCall","src":"2220:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2244:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2199:20:19"},"nodeType":"YulFunctionCall","src":"2199:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2189:6:19"}]}]},{"nodeType":"YulBlock","src":"2272:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2287:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2301:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2291:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2317:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2352:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2363:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2348:3:19"},"nodeType":"YulFunctionCall","src":"2348:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2372:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2327:20:19"},"nodeType":"YulFunctionCall","src":"2327:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2317:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1968:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1979:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1991:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1999:6:19","type":""}],"src":"1923:474:19"},{"body":{"nodeType":"YulBlock","src":"2468:262:19","statements":[{"body":{"nodeType":"YulBlock","src":"2514:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2516:77:19"},"nodeType":"YulFunctionCall","src":"2516:79:19"},"nodeType":"YulExpressionStatement","src":"2516:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2489:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2498:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2485:3:19"},"nodeType":"YulFunctionCall","src":"2485:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2510:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2481:3:19"},"nodeType":"YulFunctionCall","src":"2481:32:19"},"nodeType":"YulIf","src":"2478:119:19"},{"nodeType":"YulBlock","src":"2607:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2622:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2636:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2626:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2651:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2685:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2696:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2681:3:19"},"nodeType":"YulFunctionCall","src":"2681:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2705:7:19"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"2661:19:19"},"nodeType":"YulFunctionCall","src":"2661:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2651:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2438:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2449:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2461:6:19","type":""}],"src":"2403:327:19"},{"body":{"nodeType":"YulBlock","src":"2818:390:19","statements":[{"body":{"nodeType":"YulBlock","src":"2864:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2866:77:19"},"nodeType":"YulFunctionCall","src":"2866:79:19"},"nodeType":"YulExpressionStatement","src":"2866:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2839:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2848:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2835:3:19"},"nodeType":"YulFunctionCall","src":"2835:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2860:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2831:3:19"},"nodeType":"YulFunctionCall","src":"2831:32:19"},"nodeType":"YulIf","src":"2828:119:19"},{"nodeType":"YulBlock","src":"2957:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2972:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2986:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2976:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3001:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3035:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3046:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3031:3:19"},"nodeType":"YulFunctionCall","src":"3031:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3055:7:19"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"3011:19:19"},"nodeType":"YulFunctionCall","src":"3011:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3001:6:19"}]}]},{"nodeType":"YulBlock","src":"3083:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3098:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3112:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3102:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3128:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3163:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3174:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3159:3:19"},"nodeType":"YulFunctionCall","src":"3159:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3183:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3138:20:19"},"nodeType":"YulFunctionCall","src":"3138:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3128:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint64t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2780:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2791:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2803:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2811:6:19","type":""}],"src":"2736:472:19"},{"body":{"nodeType":"YulBlock","src":"3295:389:19","statements":[{"body":{"nodeType":"YulBlock","src":"3341:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3343:77:19"},"nodeType":"YulFunctionCall","src":"3343:79:19"},"nodeType":"YulExpressionStatement","src":"3343:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3316:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3325:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3312:3:19"},"nodeType":"YulFunctionCall","src":"3312:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3337:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3308:3:19"},"nodeType":"YulFunctionCall","src":"3308:32:19"},"nodeType":"YulIf","src":"3305:119:19"},{"nodeType":"YulBlock","src":"3434:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3449:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3463:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3453:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3478:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3512:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3523:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3508:3:19"},"nodeType":"YulFunctionCall","src":"3508:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3532:7:19"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"3488:19:19"},"nodeType":"YulFunctionCall","src":"3488:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3478:6:19"}]}]},{"nodeType":"YulBlock","src":"3560:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3575:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3589:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3579:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3605:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3639:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3650:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3635:3:19"},"nodeType":"YulFunctionCall","src":"3635:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3659:7:19"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"3615:19:19"},"nodeType":"YulFunctionCall","src":"3615:52:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3605:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint64t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3257:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3268:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3280:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3288:6:19","type":""}],"src":"3214:470:19"},{"body":{"nodeType":"YulBlock","src":"3770:99:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3814:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"3822:3:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3780:33:19"},"nodeType":"YulFunctionCall","src":"3780:46:19"},"nodeType":"YulExpressionStatement","src":"3780:46:19"},{"nodeType":"YulAssignment","src":"3835:28:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3853:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3858:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3849:3:19"},"nodeType":"YulFunctionCall","src":"3849:14:19"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"3835:10:19"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"3743:6:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3751:3:19","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"3759:10:19","type":""}],"src":"3690:179:19"},{"body":{"nodeType":"YulBlock","src":"3955:99:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3999:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"4007:3:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"3965:33:19"},"nodeType":"YulFunctionCall","src":"3965:46:19"},"nodeType":"YulExpressionStatement","src":"3965:46:19"},{"nodeType":"YulAssignment","src":"4020:28:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4038:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4043:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4034:3:19"},"nodeType":"YulFunctionCall","src":"4034:14:19"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4020:10:19"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"3928:6:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3936:3:19","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"3944:10:19","type":""}],"src":"3875:179:19"},{"body":{"nodeType":"YulBlock","src":"4140:99:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4184:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"4192:3:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4150:33:19"},"nodeType":"YulFunctionCall","src":"4150:46:19"},"nodeType":"YulExpressionStatement","src":"4150:46:19"},{"nodeType":"YulAssignment","src":"4205:28:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4223:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4228:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4219:3:19"},"nodeType":"YulFunctionCall","src":"4219:14:19"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4205:10:19"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"4113:6:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4121:3:19","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"4129:10:19","type":""}],"src":"4060:179:19"},{"body":{"nodeType":"YulBlock","src":"4300:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4317:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4340:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4322:17:19"},"nodeType":"YulFunctionCall","src":"4322:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4310:6:19"},"nodeType":"YulFunctionCall","src":"4310:37:19"},"nodeType":"YulExpressionStatement","src":"4310:37:19"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4288:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4295:3:19","type":""}],"src":"4245:108:19"},{"body":{"nodeType":"YulBlock","src":"4424:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4441:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4464:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4446:17:19"},"nodeType":"YulFunctionCall","src":"4446:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4434:6:19"},"nodeType":"YulFunctionCall","src":"4434:37:19"},"nodeType":"YulExpressionStatement","src":"4434:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4412:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4419:3:19","type":""}],"src":"4359:118:19"},{"body":{"nodeType":"YulBlock","src":"4637:608:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:68:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4709:5:19"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4661:47:19"},"nodeType":"YulFunctionCall","src":"4661:54:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4651:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4724:93:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4805:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"4810:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4731:73:19"},"nodeType":"YulFunctionCall","src":"4731:86:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4724:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"4826:71:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4891:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4841:49:19"},"nodeType":"YulFunctionCall","src":"4841:56:19"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"4830:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4906:21:19","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"4920:7:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4910:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"4996:224:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5010:34:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5037:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5031:5:19"},"nodeType":"YulFunctionCall","src":"5031:13:19"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5014:13:19","type":""}]},{"nodeType":"YulAssignment","src":"5057:70:19","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"5108:13:19"},{"name":"pos","nodeType":"YulIdentifier","src":"5123:3:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"5064:43:19"},"nodeType":"YulFunctionCall","src":"5064:63:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5057:3:19"}]},{"nodeType":"YulAssignment","src":"5140:70:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5203:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5150:52:19"},"nodeType":"YulFunctionCall","src":"5150:60:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5140:6:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4958:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"4961:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4955:2:19"},"nodeType":"YulFunctionCall","src":"4955:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4969:18:19","statements":[{"nodeType":"YulAssignment","src":"4971:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4980:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"4983:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4976:3:19"},"nodeType":"YulFunctionCall","src":"4976:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4971:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"4940:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4942:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4951:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4946:1:19","type":""}]}]},"src":"4936:284:19"},{"nodeType":"YulAssignment","src":"5229:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"5236:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5229:3:19"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4616:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4623:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4632:3:19","type":""}],"src":"4513:732:19"},{"body":{"nodeType":"YulBlock","src":"5405:608:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5415:68:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5477:5:19"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5429:47:19"},"nodeType":"YulFunctionCall","src":"5429:54:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5419:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5492:93:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5573:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"5578:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5499:73:19"},"nodeType":"YulFunctionCall","src":"5499:86:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5492:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"5594:71:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5659:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5609:49:19"},"nodeType":"YulFunctionCall","src":"5609:56:19"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5598:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5674:21:19","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5688:7:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5678:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"5764:224:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5778:34:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5805:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5799:5:19"},"nodeType":"YulFunctionCall","src":"5799:13:19"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5782:13:19","type":""}]},{"nodeType":"YulAssignment","src":"5825:70:19","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"5876:13:19"},{"name":"pos","nodeType":"YulIdentifier","src":"5891:3:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"5832:43:19"},"nodeType":"YulFunctionCall","src":"5832:63:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5825:3:19"}]},{"nodeType":"YulAssignment","src":"5908:70:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5971:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5918:52:19"},"nodeType":"YulFunctionCall","src":"5918:60:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5908:6:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5726:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"5729:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5723:2:19"},"nodeType":"YulFunctionCall","src":"5723:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5737:18:19","statements":[{"nodeType":"YulAssignment","src":"5739:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5748:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"5751:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5744:3:19"},"nodeType":"YulFunctionCall","src":"5744:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5739:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"5708:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5710:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5719:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5714:1:19","type":""}]}]},"src":"5704:284:19"},{"nodeType":"YulAssignment","src":"5997:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"6004:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5997:3:19"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5384:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5391:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5400:3:19","type":""}],"src":"5281:732:19"},{"body":{"nodeType":"YulBlock","src":"6173:608:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6183:68:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6245:5:19"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6197:47:19"},"nodeType":"YulFunctionCall","src":"6197:54:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6187:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6260:93:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6341:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6346:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6267:73:19"},"nodeType":"YulFunctionCall","src":"6267:86:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6260:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"6362:71:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6427:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6377:49:19"},"nodeType":"YulFunctionCall","src":"6377:56:19"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"6366:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6442:21:19","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"6456:7:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6446:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"6532:224:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6546:34:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6573:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6567:5:19"},"nodeType":"YulFunctionCall","src":"6567:13:19"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"6550:13:19","type":""}]},{"nodeType":"YulAssignment","src":"6593:70:19","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"6644:13:19"},{"name":"pos","nodeType":"YulIdentifier","src":"6659:3:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6600:43:19"},"nodeType":"YulFunctionCall","src":"6600:63:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6593:3:19"}]},{"nodeType":"YulAssignment","src":"6676:70:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6739:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6686:52:19"},"nodeType":"YulFunctionCall","src":"6686:60:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6676:6:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6494:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"6497:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6491:2:19"},"nodeType":"YulFunctionCall","src":"6491:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6505:18:19","statements":[{"nodeType":"YulAssignment","src":"6507:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6516:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"6519:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6512:3:19"},"nodeType":"YulFunctionCall","src":"6512:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6507:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"6476:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6478:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6487:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6482:1:19","type":""}]}]},"src":"6472:284:19"},{"nodeType":"YulAssignment","src":"6765:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"6772:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6765:3:19"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6152:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6159:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6168:3:19","type":""}],"src":"6049:732:19"},{"body":{"nodeType":"YulBlock","src":"6846:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6863:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6883:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6868:14:19"},"nodeType":"YulFunctionCall","src":"6868:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6856:6:19"},"nodeType":"YulFunctionCall","src":"6856:34:19"},"nodeType":"YulExpressionStatement","src":"6856:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6834:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6841:3:19","type":""}],"src":"6787:109:19"},{"body":{"nodeType":"YulBlock","src":"6957:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6974:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6997:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6979:17:19"},"nodeType":"YulFunctionCall","src":"6979:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6967:6:19"},"nodeType":"YulFunctionCall","src":"6967:37:19"},"nodeType":"YulExpressionStatement","src":"6967:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6945:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6952:3:19","type":""}],"src":"6902:108:19"},{"body":{"nodeType":"YulBlock","src":"7124:265:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7134:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7180:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7148:31:19"},"nodeType":"YulFunctionCall","src":"7148:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7138:6:19","type":""}]},{"nodeType":"YulAssignment","src":"7195:95:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7278:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"7283:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7202:75:19"},"nodeType":"YulFunctionCall","src":"7202:88:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7195:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7325:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7332:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7321:3:19"},"nodeType":"YulFunctionCall","src":"7321:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"7339:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"7344:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7299:21:19"},"nodeType":"YulFunctionCall","src":"7299:52:19"},"nodeType":"YulExpressionStatement","src":"7299:52:19"},{"nodeType":"YulAssignment","src":"7360:23:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7371:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"7376:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7367:3:19"},"nodeType":"YulFunctionCall","src":"7367:16:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7360:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7105:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7112:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7120:3:19","type":""}],"src":"7016:373:19"},{"body":{"nodeType":"YulBlock","src":"7541:220:19","statements":[{"nodeType":"YulAssignment","src":"7551:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7617:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7622:2:19","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7558:58:19"},"nodeType":"YulFunctionCall","src":"7558:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7551:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7723:3:19"}],"functionName":{"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulIdentifier","src":"7634:88:19"},"nodeType":"YulFunctionCall","src":"7634:93:19"},"nodeType":"YulExpressionStatement","src":"7634:93:19"},{"nodeType":"YulAssignment","src":"7736:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7747:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7752:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7743:3:19"},"nodeType":"YulFunctionCall","src":"7743:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7736:3:19"}]}]},"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7529:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7537:3:19","type":""}],"src":"7395:366:19"},{"body":{"nodeType":"YulBlock","src":"7913:220:19","statements":[{"nodeType":"YulAssignment","src":"7923:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7989:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7994:2:19","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7930:58:19"},"nodeType":"YulFunctionCall","src":"7930:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7923:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8095:3:19"}],"functionName":{"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulIdentifier","src":"8006:88:19"},"nodeType":"YulFunctionCall","src":"8006:93:19"},"nodeType":"YulExpressionStatement","src":"8006:93:19"},{"nodeType":"YulAssignment","src":"8108:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8119:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8124:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8115:3:19"},"nodeType":"YulFunctionCall","src":"8115:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8108:3:19"}]}]},"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7901:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7909:3:19","type":""}],"src":"7767:366:19"},{"body":{"nodeType":"YulBlock","src":"8202:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8219:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8241:5:19"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"8224:16:19"},"nodeType":"YulFunctionCall","src":"8224:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8212:6:19"},"nodeType":"YulFunctionCall","src":"8212:36:19"},"nodeType":"YulExpressionStatement","src":"8212:36:19"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8190:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8197:3:19","type":""}],"src":"8139:115:19"},{"body":{"nodeType":"YulBlock","src":"8315:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8332:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8355:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8337:17:19"},"nodeType":"YulFunctionCall","src":"8337:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8325:6:19"},"nodeType":"YulFunctionCall","src":"8325:37:19"},"nodeType":"YulExpressionStatement","src":"8325:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8303:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8310:3:19","type":""}],"src":"8260:108:19"},{"body":{"nodeType":"YulBlock","src":"8439:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8456:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8479:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8461:17:19"},"nodeType":"YulFunctionCall","src":"8461:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8449:6:19"},"nodeType":"YulFunctionCall","src":"8449:37:19"},"nodeType":"YulExpressionStatement","src":"8449:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8427:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8434:3:19","type":""}],"src":"8374:118:19"},{"body":{"nodeType":"YulBlock","src":"8561:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8578:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8600:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"8583:16:19"},"nodeType":"YulFunctionCall","src":"8583:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8571:6:19"},"nodeType":"YulFunctionCall","src":"8571:36:19"},"nodeType":"YulExpressionStatement","src":"8571:36:19"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8549:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8556:3:19","type":""}],"src":"8498:115:19"},{"body":{"nodeType":"YulBlock","src":"8682:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8699:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8721:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"8704:16:19"},"nodeType":"YulFunctionCall","src":"8704:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8692:6:19"},"nodeType":"YulFunctionCall","src":"8692:36:19"},"nodeType":"YulExpressionStatement","src":"8692:36:19"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8670:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8677:3:19","type":""}],"src":"8619:115:19"},{"body":{"nodeType":"YulBlock","src":"8804:65:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8821:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8856:5:19"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"8826:29:19"},"nodeType":"YulFunctionCall","src":"8826:36:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8814:6:19"},"nodeType":"YulFunctionCall","src":"8814:49:19"},"nodeType":"YulExpressionStatement","src":"8814:49:19"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8792:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8799:3:19","type":""}],"src":"8740:129:19"},{"body":{"nodeType":"YulBlock","src":"8938:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8955:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8977:5:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"8960:16:19"},"nodeType":"YulFunctionCall","src":"8960:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8948:6:19"},"nodeType":"YulFunctionCall","src":"8948:36:19"},"nodeType":"YulExpressionStatement","src":"8948:36:19"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8926:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8933:3:19","type":""}],"src":"8875:115:19"},{"body":{"nodeType":"YulBlock","src":"9130:137:19","statements":[{"nodeType":"YulAssignment","src":"9141:100:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9228:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"9237:3:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9148:79:19"},"nodeType":"YulFunctionCall","src":"9148:93:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9141:3:19"}]},{"nodeType":"YulAssignment","src":"9251:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"9258:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9251:3:19"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9109:3:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9115:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9126:3:19","type":""}],"src":"8996:271:19"},{"body":{"nodeType":"YulBlock","src":"9371:124:19","statements":[{"nodeType":"YulAssignment","src":"9381:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9393:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9404:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9389:3:19"},"nodeType":"YulFunctionCall","src":"9389:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9381:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9461:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9474:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9485:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9470:3:19"},"nodeType":"YulFunctionCall","src":"9470:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9417:43:19"},"nodeType":"YulFunctionCall","src":"9417:71:19"},"nodeType":"YulExpressionStatement","src":"9417:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9343:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9355:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9366:4:19","type":""}],"src":"9273:222:19"},{"body":{"nodeType":"YulBlock","src":"9626:205:19","statements":[{"nodeType":"YulAssignment","src":"9636:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9648:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9659:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9644:3:19"},"nodeType":"YulFunctionCall","src":"9644:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9636:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9716:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9729:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9740:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9725:3:19"},"nodeType":"YulFunctionCall","src":"9725:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9672:43:19"},"nodeType":"YulFunctionCall","src":"9672:71:19"},"nodeType":"YulExpressionStatement","src":"9672:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9796:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9809:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9820:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9805:3:19"},"nodeType":"YulFunctionCall","src":"9805:18:19"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9753:42:19"},"nodeType":"YulFunctionCall","src":"9753:71:19"},"nodeType":"YulExpressionStatement","src":"9753:71:19"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9590:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9602:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9610:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9621:4:19","type":""}],"src":"9501:330:19"},{"body":{"nodeType":"YulBlock","src":"10008:248:19","statements":[{"nodeType":"YulAssignment","src":"10018:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10030:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10041:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10026:3:19"},"nodeType":"YulFunctionCall","src":"10026:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10018:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10065:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10076:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10061:3:19"},"nodeType":"YulFunctionCall","src":"10061:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10084:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"10090:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10080:3:19"},"nodeType":"YulFunctionCall","src":"10080:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10054:6:19"},"nodeType":"YulFunctionCall","src":"10054:47:19"},"nodeType":"YulExpressionStatement","src":"10054:47:19"},{"nodeType":"YulAssignment","src":"10110:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10244:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10118:124:19"},"nodeType":"YulFunctionCall","src":"10118:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10110:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9988:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10003:4:19","type":""}],"src":"9837:419:19"},{"body":{"nodeType":"YulBlock","src":"10433:248:19","statements":[{"nodeType":"YulAssignment","src":"10443:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10455:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10466:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10451:3:19"},"nodeType":"YulFunctionCall","src":"10451:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10443:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10490:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10501:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10486:3:19"},"nodeType":"YulFunctionCall","src":"10486:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10509:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"10515:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10505:3:19"},"nodeType":"YulFunctionCall","src":"10505:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10479:6:19"},"nodeType":"YulFunctionCall","src":"10479:47:19"},"nodeType":"YulExpressionStatement","src":"10479:47:19"},{"nodeType":"YulAssignment","src":"10535:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10669:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10543:124:19"},"nodeType":"YulFunctionCall","src":"10543:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10535:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10413:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10428:4:19","type":""}],"src":"10262:419:19"},{"body":{"nodeType":"YulBlock","src":"10887:385:19","statements":[{"nodeType":"YulAssignment","src":"10897:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10909:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10920:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10905:3:19"},"nodeType":"YulFunctionCall","src":"10905:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10897:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10975:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10988:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10999:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10984:3:19"},"nodeType":"YulFunctionCall","src":"10984:17:19"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"10933:41:19"},"nodeType":"YulFunctionCall","src":"10933:69:19"},"nodeType":"YulExpressionStatement","src":"10933:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11054:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11067:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11078:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11063:3:19"},"nodeType":"YulFunctionCall","src":"11063:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11012:41:19"},"nodeType":"YulFunctionCall","src":"11012:70:19"},"nodeType":"YulExpressionStatement","src":"11012:70:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11103:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11114:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11099:3:19"},"nodeType":"YulFunctionCall","src":"11099:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11123:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"11129:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11119:3:19"},"nodeType":"YulFunctionCall","src":"11119:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11092:6:19"},"nodeType":"YulFunctionCall","src":"11092:48:19"},"nodeType":"YulExpressionStatement","src":"11092:48:19"},{"nodeType":"YulAssignment","src":"11149:116:19","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11251:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"11260:4:19"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11157:93:19"},"nodeType":"YulFunctionCall","src":"11157:108:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11149:4:19"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10843:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10855:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10863:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10871:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10882:4:19","type":""}],"src":"10687:585:19"},{"body":{"nodeType":"YulBlock","src":"11376:124:19","statements":[{"nodeType":"YulAssignment","src":"11386:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11398:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11409:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11394:3:19"},"nodeType":"YulFunctionCall","src":"11394:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11386:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11466:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11479:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11490:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11475:3:19"},"nodeType":"YulFunctionCall","src":"11475:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11422:43:19"},"nodeType":"YulFunctionCall","src":"11422:71:19"},"nodeType":"YulExpressionStatement","src":"11422:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11348:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11360:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11371:4:19","type":""}],"src":"11278:222:19"},{"body":{"nodeType":"YulBlock","src":"11682:307:19","statements":[{"nodeType":"YulAssignment","src":"11692:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11704:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11715:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11700:3:19"},"nodeType":"YulFunctionCall","src":"11700:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11692:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11772:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11785:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11796:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11781:3:19"},"nodeType":"YulFunctionCall","src":"11781:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11728:43:19"},"nodeType":"YulFunctionCall","src":"11728:71:19"},"nodeType":"YulExpressionStatement","src":"11728:71:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11820:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11831:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11816:3:19"},"nodeType":"YulFunctionCall","src":"11816:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11840:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"11846:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11836:3:19"},"nodeType":"YulFunctionCall","src":"11836:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11809:6:19"},"nodeType":"YulFunctionCall","src":"11809:48:19"},"nodeType":"YulExpressionStatement","src":"11809:48:19"},{"nodeType":"YulAssignment","src":"11866:116:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11968:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"11977:4:19"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11874:93:19"},"nodeType":"YulFunctionCall","src":"11874:108:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11866:4:19"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11646:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11658:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11666:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11677:4:19","type":""}],"src":"11506:483:19"},{"body":{"nodeType":"YulBlock","src":"12121:206:19","statements":[{"nodeType":"YulAssignment","src":"12131:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12143:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12154:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12139:3:19"},"nodeType":"YulFunctionCall","src":"12139:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12131:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12211:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12224:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12235:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12220:3:19"},"nodeType":"YulFunctionCall","src":"12220:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12167:43:19"},"nodeType":"YulFunctionCall","src":"12167:71:19"},"nodeType":"YulExpressionStatement","src":"12167:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12292:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12305:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12316:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12301:3:19"},"nodeType":"YulFunctionCall","src":"12301:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12248:43:19"},"nodeType":"YulFunctionCall","src":"12248:72:19"},"nodeType":"YulExpressionStatement","src":"12248:72:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12085:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12097:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12105:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12116:4:19","type":""}],"src":"11995:332:19"},{"body":{"nodeType":"YulBlock","src":"12537:448:19","statements":[{"nodeType":"YulAssignment","src":"12547:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12559:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12570:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12555:3:19"},"nodeType":"YulFunctionCall","src":"12555:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12547:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12628:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12641:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12652:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12637:3:19"},"nodeType":"YulFunctionCall","src":"12637:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12584:43:19"},"nodeType":"YulFunctionCall","src":"12584:71:19"},"nodeType":"YulExpressionStatement","src":"12584:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12709:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12722:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12733:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12718:3:19"},"nodeType":"YulFunctionCall","src":"12718:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12665:43:19"},"nodeType":"YulFunctionCall","src":"12665:72:19"},"nodeType":"YulExpressionStatement","src":"12665:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12789:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12802:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12813:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:19"},"nodeType":"YulFunctionCall","src":"12798:18:19"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"12747:41:19"},"nodeType":"YulFunctionCall","src":"12747:70:19"},"nodeType":"YulExpressionStatement","src":"12747:70:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12869:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12882:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12893:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12878:3:19"},"nodeType":"YulFunctionCall","src":"12878:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"12827:41:19"},"nodeType":"YulFunctionCall","src":"12827:70:19"},"nodeType":"YulExpressionStatement","src":"12827:70:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12949:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12962:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12973:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12958:3:19"},"nodeType":"YulFunctionCall","src":"12958:19:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"12907:41:19"},"nodeType":"YulFunctionCall","src":"12907:71:19"},"nodeType":"YulExpressionStatement","src":"12907:71:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12477:9:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12489:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12497:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12505:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12513:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12521:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12532:4:19","type":""}],"src":"12333:652:19"},{"body":{"nodeType":"YulBlock","src":"13137:280:19","statements":[{"nodeType":"YulAssignment","src":"13147:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13159:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13170:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13155:3:19"},"nodeType":"YulFunctionCall","src":"13155:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13147:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13227:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13240:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13251:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13236:3:19"},"nodeType":"YulFunctionCall","src":"13236:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13183:43:19"},"nodeType":"YulFunctionCall","src":"13183:71:19"},"nodeType":"YulExpressionStatement","src":"13183:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13306:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13319:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13330:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13315:3:19"},"nodeType":"YulFunctionCall","src":"13315:18:19"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"13264:41:19"},"nodeType":"YulFunctionCall","src":"13264:70:19"},"nodeType":"YulExpressionStatement","src":"13264:70:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13382:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13395:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13406:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13391:3:19"},"nodeType":"YulFunctionCall","src":"13391:18:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"13344:37:19"},"nodeType":"YulFunctionCall","src":"13344:66:19"},"nodeType":"YulExpressionStatement","src":"13344:66:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13093:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13105:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13113:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13121:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13132:4:19","type":""}],"src":"12991:426:19"},{"body":{"nodeType":"YulBlock","src":"13519:122:19","statements":[{"nodeType":"YulAssignment","src":"13529:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13541:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13552:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13537:3:19"},"nodeType":"YulFunctionCall","src":"13537:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13529:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13607:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13620:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13631:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13616:3:19"},"nodeType":"YulFunctionCall","src":"13616:17:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"13565:41:19"},"nodeType":"YulFunctionCall","src":"13565:69:19"},"nodeType":"YulExpressionStatement","src":"13565:69:19"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13491:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13503:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13514:4:19","type":""}],"src":"13423:218:19"},{"body":{"nodeType":"YulBlock","src":"13743:122:19","statements":[{"nodeType":"YulAssignment","src":"13753:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13765:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13776:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13761:3:19"},"nodeType":"YulFunctionCall","src":"13761:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13753:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13831:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13844:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13855:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13840:3:19"},"nodeType":"YulFunctionCall","src":"13840:17:19"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"13789:41:19"},"nodeType":"YulFunctionCall","src":"13789:69:19"},"nodeType":"YulExpressionStatement","src":"13789:69:19"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13715:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13727:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13738:4:19","type":""}],"src":"13647:218:19"},{"body":{"nodeType":"YulBlock","src":"14099:468:19","statements":[{"nodeType":"YulAssignment","src":"14109:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14121:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14132:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14117:3:19"},"nodeType":"YulFunctionCall","src":"14117:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14109:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14188:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14201:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14212:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14197:3:19"},"nodeType":"YulFunctionCall","src":"14197:17:19"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"14146:41:19"},"nodeType":"YulFunctionCall","src":"14146:69:19"},"nodeType":"YulExpressionStatement","src":"14146:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14267:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14280:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14291:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14276:3:19"},"nodeType":"YulFunctionCall","src":"14276:18:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"14225:41:19"},"nodeType":"YulFunctionCall","src":"14225:70:19"},"nodeType":"YulExpressionStatement","src":"14225:70:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14349:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14362:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14373:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14358:3:19"},"nodeType":"YulFunctionCall","src":"14358:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14305:43:19"},"nodeType":"YulFunctionCall","src":"14305:72:19"},"nodeType":"YulExpressionStatement","src":"14305:72:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14398:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14409:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14394:3:19"},"nodeType":"YulFunctionCall","src":"14394:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14418:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"14424:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14414:3:19"},"nodeType":"YulFunctionCall","src":"14414:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14387:6:19"},"nodeType":"YulFunctionCall","src":"14387:48:19"},"nodeType":"YulExpressionStatement","src":"14387:48:19"},{"nodeType":"YulAssignment","src":"14444:116:19","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14546:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"14555:4:19"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14452:93:19"},"nodeType":"YulFunctionCall","src":"14452:108:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14444:4:19"}]}]},"name":"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14047:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14059:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14067:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14075:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14083:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14094:4:19","type":""}],"src":"13871:696:19"},{"body":{"nodeType":"YulBlock","src":"14697:204:19","statements":[{"nodeType":"YulAssignment","src":"14707:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14719:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14730:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14715:3:19"},"nodeType":"YulFunctionCall","src":"14715:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14707:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14786:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14799:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14810:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14795:3:19"},"nodeType":"YulFunctionCall","src":"14795:17:19"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14743:42:19"},"nodeType":"YulFunctionCall","src":"14743:70:19"},"nodeType":"YulExpressionStatement","src":"14743:70:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14866:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14879:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14890:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14875:3:19"},"nodeType":"YulFunctionCall","src":"14875:18:19"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14823:42:19"},"nodeType":"YulFunctionCall","src":"14823:71:19"},"nodeType":"YulExpressionStatement","src":"14823:71:19"}]},"name":"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14661:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14673:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14681:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14692:4:19","type":""}],"src":"14573:328:19"},{"body":{"nodeType":"YulBlock","src":"14947:35:19","statements":[{"nodeType":"YulAssignment","src":"14957:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14973:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14967:5:19"},"nodeType":"YulFunctionCall","src":"14967:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14957:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"14940:6:19","type":""}],"src":"14907:75:19"},{"body":{"nodeType":"YulBlock","src":"15060:60:19","statements":[{"nodeType":"YulAssignment","src":"15070:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15078:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15070:4:19"}]},{"nodeType":"YulAssignment","src":"15091:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15103:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15108:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15099:3:19"},"nodeType":"YulFunctionCall","src":"15099:14:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15091:4:19"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15047:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15055:4:19","type":""}],"src":"14988:132:19"},{"body":{"nodeType":"YulBlock","src":"15198:60:19","statements":[{"nodeType":"YulAssignment","src":"15208:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15216:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15208:4:19"}]},{"nodeType":"YulAssignment","src":"15229:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15241:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15246:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15237:3:19"},"nodeType":"YulFunctionCall","src":"15237:14:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15229:4:19"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15185:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15193:4:19","type":""}],"src":"15126:132:19"},{"body":{"nodeType":"YulBlock","src":"15336:60:19","statements":[{"nodeType":"YulAssignment","src":"15346:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15354:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15346:4:19"}]},{"nodeType":"YulAssignment","src":"15367:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15379:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15384:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15375:3:19"},"nodeType":"YulFunctionCall","src":"15375:14:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15367:4:19"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15323:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15331:4:19","type":""}],"src":"15264:132:19"},{"body":{"nodeType":"YulBlock","src":"15476:40:19","statements":[{"nodeType":"YulAssignment","src":"15487:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15503:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15497:5:19"},"nodeType":"YulFunctionCall","src":"15497:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15487:6:19"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15459:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15469:6:19","type":""}],"src":"15402:114:19"},{"body":{"nodeType":"YulBlock","src":"15596:40:19","statements":[{"nodeType":"YulAssignment","src":"15607:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15623:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15617:5:19"},"nodeType":"YulFunctionCall","src":"15617:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15607:6:19"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15579:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15589:6:19","type":""}],"src":"15522:114:19"},{"body":{"nodeType":"YulBlock","src":"15716:40:19","statements":[{"nodeType":"YulAssignment","src":"15727:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15743:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15737:5:19"},"nodeType":"YulFunctionCall","src":"15737:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15727:6:19"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15699:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15709:6:19","type":""}],"src":"15642:114:19"},{"body":{"nodeType":"YulBlock","src":"15820:40:19","statements":[{"nodeType":"YulAssignment","src":"15831:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15847:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15841:5:19"},"nodeType":"YulFunctionCall","src":"15841:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15831:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15803:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15813:6:19","type":""}],"src":"15762:98:19"},{"body":{"nodeType":"YulBlock","src":"15941:38:19","statements":[{"nodeType":"YulAssignment","src":"15951:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15963:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15968:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15959:3:19"},"nodeType":"YulFunctionCall","src":"15959:14:19"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"15951:4:19"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15928:3:19","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"15936:4:19","type":""}],"src":"15866:113:19"},{"body":{"nodeType":"YulBlock","src":"16060:38:19","statements":[{"nodeType":"YulAssignment","src":"16070:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16082:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16087:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16078:3:19"},"nodeType":"YulFunctionCall","src":"16078:14:19"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16070:4:19"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16047:3:19","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16055:4:19","type":""}],"src":"15985:113:19"},{"body":{"nodeType":"YulBlock","src":"16179:38:19","statements":[{"nodeType":"YulAssignment","src":"16189:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16201:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16206:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16197:3:19"},"nodeType":"YulFunctionCall","src":"16197:14:19"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16189:4:19"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16166:3:19","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16174:4:19","type":""}],"src":"16104:113:19"},{"body":{"nodeType":"YulBlock","src":"16334:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16351:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"16356:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16344:6:19"},"nodeType":"YulFunctionCall","src":"16344:19:19"},"nodeType":"YulExpressionStatement","src":"16344:19:19"},{"nodeType":"YulAssignment","src":"16372:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16391:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16396:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16387:3:19"},"nodeType":"YulFunctionCall","src":"16387:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16372:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16306:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"16311:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16322:11:19","type":""}],"src":"16223:184:19"},{"body":{"nodeType":"YulBlock","src":"16524:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16541:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"16546:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16534:6:19"},"nodeType":"YulFunctionCall","src":"16534:19:19"},"nodeType":"YulExpressionStatement","src":"16534:19:19"},{"nodeType":"YulAssignment","src":"16562:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16581:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16586:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16577:3:19"},"nodeType":"YulFunctionCall","src":"16577:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16562:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16496:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"16501:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16512:11:19","type":""}],"src":"16413:184:19"},{"body":{"nodeType":"YulBlock","src":"16714:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16731:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"16736:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16724:6:19"},"nodeType":"YulFunctionCall","src":"16724:19:19"},"nodeType":"YulExpressionStatement","src":"16724:19:19"},{"nodeType":"YulAssignment","src":"16752:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16771:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16776:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16767:3:19"},"nodeType":"YulFunctionCall","src":"16767:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16752:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16686:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"16691:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16702:11:19","type":""}],"src":"16603:184:19"},{"body":{"nodeType":"YulBlock","src":"16906:34:19","statements":[{"nodeType":"YulAssignment","src":"16916:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"16931:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16916:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16878:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"16883:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16894:11:19","type":""}],"src":"16793:147:19"},{"body":{"nodeType":"YulBlock","src":"17042:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17059:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"17064:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17052:6:19"},"nodeType":"YulFunctionCall","src":"17052:19:19"},"nodeType":"YulExpressionStatement","src":"17052:19:19"},{"nodeType":"YulAssignment","src":"17080:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17099:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"17104:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17095:3:19"},"nodeType":"YulFunctionCall","src":"17095:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17080:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17014:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"17019:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17030:11:19","type":""}],"src":"16946:169:19"},{"body":{"nodeType":"YulBlock","src":"17165:261:19","statements":[{"nodeType":"YulAssignment","src":"17175:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17198:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17180:17:19"},"nodeType":"YulFunctionCall","src":"17180:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17175:1:19"}]},{"nodeType":"YulAssignment","src":"17209:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17232:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17214:17:19"},"nodeType":"YulFunctionCall","src":"17214:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17209:1:19"}]},{"body":{"nodeType":"YulBlock","src":"17372:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17374:16:19"},"nodeType":"YulFunctionCall","src":"17374:18:19"},"nodeType":"YulExpressionStatement","src":"17374:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17293:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17300:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17368:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17296:3:19"},"nodeType":"YulFunctionCall","src":"17296:74:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17290:2:19"},"nodeType":"YulFunctionCall","src":"17290:81:19"},"nodeType":"YulIf","src":"17287:107:19"},{"nodeType":"YulAssignment","src":"17404:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17415:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"17418:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:19"},"nodeType":"YulFunctionCall","src":"17411:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17404:3:19"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17152:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"17155:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17161:3:19","type":""}],"src":"17121:305:19"},{"body":{"nodeType":"YulBlock","src":"17475:219:19","statements":[{"nodeType":"YulAssignment","src":"17485:24:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17507:1:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"17490:16:19"},"nodeType":"YulFunctionCall","src":"17490:19:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17485:1:19"}]},{"nodeType":"YulAssignment","src":"17518:24:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17540:1:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"17523:16:19"},"nodeType":"YulFunctionCall","src":"17523:19:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17518:1:19"}]},{"body":{"nodeType":"YulBlock","src":"17640:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17642:16:19"},"nodeType":"YulFunctionCall","src":"17642:18:19"},"nodeType":"YulExpressionStatement","src":"17642:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17601:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17608:26:19","type":"","value":"0xffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17636:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17604:3:19"},"nodeType":"YulFunctionCall","src":"17604:34:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17598:2:19"},"nodeType":"YulFunctionCall","src":"17598:41:19"},"nodeType":"YulIf","src":"17595:67:19"},{"nodeType":"YulAssignment","src":"17672:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17683:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"17686:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17679:3:19"},"nodeType":"YulFunctionCall","src":"17679:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17672:3:19"}]}]},"name":"checked_add_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17462:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"17465:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17471:3:19","type":""}],"src":"17432:262:19"},{"body":{"nodeType":"YulBlock","src":"17748:300:19","statements":[{"nodeType":"YulAssignment","src":"17758:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17781:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17763:17:19"},"nodeType":"YulFunctionCall","src":"17763:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17758:1:19"}]},{"nodeType":"YulAssignment","src":"17792:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17815:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17797:17:19"},"nodeType":"YulFunctionCall","src":"17797:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17792:1:19"}]},{"body":{"nodeType":"YulBlock","src":"17990:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17992:16:19"},"nodeType":"YulFunctionCall","src":"17992:18:19"},"nodeType":"YulExpressionStatement","src":"17992:18:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17902:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17895:6:19"},"nodeType":"YulFunctionCall","src":"17895:9:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17888:6:19"},"nodeType":"YulFunctionCall","src":"17888:17:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17910:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17917:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"17985:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17913:3:19"},"nodeType":"YulFunctionCall","src":"17913:74:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17907:2:19"},"nodeType":"YulFunctionCall","src":"17907:81:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17884:3:19"},"nodeType":"YulFunctionCall","src":"17884:105:19"},"nodeType":"YulIf","src":"17881:131:19"},{"nodeType":"YulAssignment","src":"18022:20:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18037:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"18040:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18033:3:19"},"nodeType":"YulFunctionCall","src":"18033:9:19"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"18022:7:19"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17731:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"17734:1:19","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"17740:7:19","type":""}],"src":"17700:348:19"},{"body":{"nodeType":"YulBlock","src":"18099:146:19","statements":[{"nodeType":"YulAssignment","src":"18109:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18132:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18114:17:19"},"nodeType":"YulFunctionCall","src":"18114:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18109:1:19"}]},{"nodeType":"YulAssignment","src":"18143:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18166:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18148:17:19"},"nodeType":"YulFunctionCall","src":"18148:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18143:1:19"}]},{"body":{"nodeType":"YulBlock","src":"18190:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18192:16:19"},"nodeType":"YulFunctionCall","src":"18192:18:19"},"nodeType":"YulExpressionStatement","src":"18192:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18184:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"18187:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18181:2:19"},"nodeType":"YulFunctionCall","src":"18181:8:19"},"nodeType":"YulIf","src":"18178:34:19"},{"nodeType":"YulAssignment","src":"18222:17:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18234:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"18237:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18230:3:19"},"nodeType":"YulFunctionCall","src":"18230:9:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"18222:4:19"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18085:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"18088:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18094:4:19","type":""}],"src":"18054:191:19"},{"body":{"nodeType":"YulBlock","src":"18295:144:19","statements":[{"nodeType":"YulAssignment","src":"18305:24:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18327:1:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"18310:16:19"},"nodeType":"YulFunctionCall","src":"18310:19:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18305:1:19"}]},{"nodeType":"YulAssignment","src":"18338:24:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18360:1:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"18343:16:19"},"nodeType":"YulFunctionCall","src":"18343:19:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18338:1:19"}]},{"body":{"nodeType":"YulBlock","src":"18384:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18386:16:19"},"nodeType":"YulFunctionCall","src":"18386:18:19"},"nodeType":"YulExpressionStatement","src":"18386:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18378:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"18381:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18375:2:19"},"nodeType":"YulFunctionCall","src":"18375:8:19"},"nodeType":"YulIf","src":"18372:34:19"},{"nodeType":"YulAssignment","src":"18416:17:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18428:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"18431:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18424:3:19"},"nodeType":"YulFunctionCall","src":"18424:9:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"18416:4:19"}]}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18281:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"18284:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18290:4:19","type":""}],"src":"18251:188:19"},{"body":{"nodeType":"YulBlock","src":"18490:51:19","statements":[{"nodeType":"YulAssignment","src":"18500:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18529:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"18511:17:19"},"nodeType":"YulFunctionCall","src":"18511:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18500:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18472:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18482:7:19","type":""}],"src":"18445:96:19"},{"body":{"nodeType":"YulBlock","src":"18589:48:19","statements":[{"nodeType":"YulAssignment","src":"18599:32:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18624:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18617:6:19"},"nodeType":"YulFunctionCall","src":"18617:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18610:6:19"},"nodeType":"YulFunctionCall","src":"18610:21:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18599:7:19"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18571:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18581:7:19","type":""}],"src":"18547:90:19"},{"body":{"nodeType":"YulBlock","src":"18688:32:19","statements":[{"nodeType":"YulAssignment","src":"18698:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"18709:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18698:7:19"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18670:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18680:7:19","type":""}],"src":"18643:77:19"},{"body":{"nodeType":"YulBlock","src":"18770:45:19","statements":[{"nodeType":"YulAssignment","src":"18780:29:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18795:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18802:6:19","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18791:3:19"},"nodeType":"YulFunctionCall","src":"18791:18:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18780:7:19"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18752:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18762:7:19","type":""}],"src":"18726:89:19"},{"body":{"nodeType":"YulBlock","src":"18866:81:19","statements":[{"nodeType":"YulAssignment","src":"18876:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18891:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18898:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18887:3:19"},"nodeType":"YulFunctionCall","src":"18887:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18876:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18848:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18858:7:19","type":""}],"src":"18821:126:19"},{"body":{"nodeType":"YulBlock","src":"18998:32:19","statements":[{"nodeType":"YulAssignment","src":"19008:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"19019:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19008:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18980:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18990:7:19","type":""}],"src":"18953:77:19"},{"body":{"nodeType":"YulBlock","src":"19080:49:19","statements":[{"nodeType":"YulAssignment","src":"19090:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19105:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"19112:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19101:3:19"},"nodeType":"YulFunctionCall","src":"19101:22:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19090:7:19"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19062:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19072:7:19","type":""}],"src":"19036:93:19"},{"body":{"nodeType":"YulBlock","src":"19179:57:19","statements":[{"nodeType":"YulAssignment","src":"19189:41:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19204:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"19211:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19200:3:19"},"nodeType":"YulFunctionCall","src":"19200:30:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19189:7:19"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19161:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19171:7:19","type":""}],"src":"19135:101:19"},{"body":{"nodeType":"YulBlock","src":"19286:65:19","statements":[{"nodeType":"YulAssignment","src":"19296:49:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19311:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"19318:26:19","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19307:3:19"},"nodeType":"YulFunctionCall","src":"19307:38:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19296:7:19"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19268:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19278:7:19","type":""}],"src":"19242:109:19"},{"body":{"nodeType":"YulBlock","src":"19416:52:19","statements":[{"nodeType":"YulAssignment","src":"19426:36:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19456:5:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"19439:16:19"},"nodeType":"YulFunctionCall","src":"19439:23:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19426:9:19"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19396:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19406:9:19","type":""}],"src":"19357:111:19"},{"body":{"nodeType":"YulBlock","src":"19523:258:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19533:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"19542:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19537:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"19602:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19627:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"19632:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19623:3:19"},"nodeType":"YulFunctionCall","src":"19623:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19646:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"19651:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19642:3:19"},"nodeType":"YulFunctionCall","src":"19642:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19636:5:19"},"nodeType":"YulFunctionCall","src":"19636:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19616:6:19"},"nodeType":"YulFunctionCall","src":"19616:39:19"},"nodeType":"YulExpressionStatement","src":"19616:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19563:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"19566:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19560:2:19"},"nodeType":"YulFunctionCall","src":"19560:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19574:19:19","statements":[{"nodeType":"YulAssignment","src":"19576:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19585:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"19588:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19581:3:19"},"nodeType":"YulFunctionCall","src":"19581:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19576:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"19556:3:19","statements":[]},"src":"19552:113:19"},{"body":{"nodeType":"YulBlock","src":"19699:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19749:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"19754:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19745:3:19"},"nodeType":"YulFunctionCall","src":"19745:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"19763:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19738:6:19"},"nodeType":"YulFunctionCall","src":"19738:27:19"},"nodeType":"YulExpressionStatement","src":"19738:27:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19680:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"19683:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19677:2:19"},"nodeType":"YulFunctionCall","src":"19677:13:19"},"nodeType":"YulIf","src":"19674:101:19"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"19505:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"19510:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"19515:6:19","type":""}],"src":"19474:307:19"},{"body":{"nodeType":"YulBlock","src":"19830:190:19","statements":[{"nodeType":"YulAssignment","src":"19840:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19867:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19849:17:19"},"nodeType":"YulFunctionCall","src":"19849:24:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19840:5:19"}]},{"body":{"nodeType":"YulBlock","src":"19963:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19965:16:19"},"nodeType":"YulFunctionCall","src":"19965:18:19"},"nodeType":"YulExpressionStatement","src":"19965:18:19"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19888:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"19895:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19885:2:19"},"nodeType":"YulFunctionCall","src":"19885:77:19"},"nodeType":"YulIf","src":"19882:103:19"},{"nodeType":"YulAssignment","src":"19994:20:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20005:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"20012:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20001:3:19"},"nodeType":"YulFunctionCall","src":"20001:13:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19994:3:19"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19816:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19826:3:19","type":""}],"src":"19787:233:19"},{"body":{"nodeType":"YulBlock","src":"20068:141:19","statements":[{"nodeType":"YulAssignment","src":"20078:32:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20104:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"20087:16:19"},"nodeType":"YulFunctionCall","src":"20087:23:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20078:5:19"}]},{"body":{"nodeType":"YulBlock","src":"20152:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20154:16:19"},"nodeType":"YulFunctionCall","src":"20154:18:19"},"nodeType":"YulExpressionStatement","src":"20154:18:19"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20125:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"20132:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20122:2:19"},"nodeType":"YulFunctionCall","src":"20122:29:19"},"nodeType":"YulIf","src":"20119:55:19"},{"nodeType":"YulAssignment","src":"20183:20:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20194:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"20201:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20190:3:19"},"nodeType":"YulFunctionCall","src":"20190:13:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20183:3:19"}]}]},"name":"increment_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20054:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20064:3:19","type":""}],"src":"20026:183:19"},{"body":{"nodeType":"YulBlock","src":"20243:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20260:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20263:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20253:6:19"},"nodeType":"YulFunctionCall","src":"20253:88:19"},"nodeType":"YulExpressionStatement","src":"20253:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20357:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20360:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20350:6:19"},"nodeType":"YulFunctionCall","src":"20350:15:19"},"nodeType":"YulExpressionStatement","src":"20350:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20381:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20384:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20374:6:19"},"nodeType":"YulFunctionCall","src":"20374:15:19"},"nodeType":"YulExpressionStatement","src":"20374:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20215:180:19"},{"body":{"nodeType":"YulBlock","src":"20429:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20446:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20449:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20439:6:19"},"nodeType":"YulFunctionCall","src":"20439:88:19"},"nodeType":"YulExpressionStatement","src":"20439:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20543:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20546:4:19","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20536:6:19"},"nodeType":"YulFunctionCall","src":"20536:15:19"},"nodeType":"YulExpressionStatement","src":"20536:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20567:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20570:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20560:6:19"},"nodeType":"YulFunctionCall","src":"20560:15:19"},"nodeType":"YulExpressionStatement","src":"20560:15:19"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20401:180:19"},{"body":{"nodeType":"YulBlock","src":"20615:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20632:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20635:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20625:6:19"},"nodeType":"YulFunctionCall","src":"20625:88:19"},"nodeType":"YulExpressionStatement","src":"20625:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20729:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20732:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20722:6:19"},"nodeType":"YulFunctionCall","src":"20722:15:19"},"nodeType":"YulExpressionStatement","src":"20722:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20753:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20756:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20746:6:19"},"nodeType":"YulFunctionCall","src":"20746:15:19"},"nodeType":"YulExpressionStatement","src":"20746:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"20587:180:19"},{"body":{"nodeType":"YulBlock","src":"20862:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20879:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20882:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20872:6:19"},"nodeType":"YulFunctionCall","src":"20872:12:19"},"nodeType":"YulExpressionStatement","src":"20872:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"20773:117:19"},{"body":{"nodeType":"YulBlock","src":"20985:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21002:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21005:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20995:6:19"},"nodeType":"YulFunctionCall","src":"20995:12:19"},"nodeType":"YulExpressionStatement","src":"20995:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"20896:117:19"},{"body":{"nodeType":"YulBlock","src":"21125:59:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21147:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21155:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21143:3:19"},"nodeType":"YulFunctionCall","src":"21143:14:19"},{"hexValue":"6e6f7420696d706c656d656e746564","kind":"string","nodeType":"YulLiteral","src":"21159:17:19","type":"","value":"not implemented"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21136:6:19"},"nodeType":"YulFunctionCall","src":"21136:41:19"},"nodeType":"YulExpressionStatement","src":"21136:41:19"}]},"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21117:6:19","type":""}],"src":"21019:165:19"},{"body":{"nodeType":"YulBlock","src":"21296:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21318:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21326:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21314:3:19"},"nodeType":"YulFunctionCall","src":"21314:14:19"},{"hexValue":"6e6f6e6578697374656e742072657175657374","kind":"string","nodeType":"YulLiteral","src":"21330:21:19","type":"","value":"nonexistent request"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21307:6:19"},"nodeType":"YulFunctionCall","src":"21307:45:19"},"nodeType":"YulExpressionStatement","src":"21307:45:19"}]},"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21288:6:19","type":""}],"src":"21190:169:19"},{"body":{"nodeType":"YulBlock","src":"21408:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"21465:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21474:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21477:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21467:6:19"},"nodeType":"YulFunctionCall","src":"21467:12:19"},"nodeType":"YulExpressionStatement","src":"21467:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21431:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21456:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"21438:17:19"},"nodeType":"YulFunctionCall","src":"21438:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21428:2:19"},"nodeType":"YulFunctionCall","src":"21428:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21421:6:19"},"nodeType":"YulFunctionCall","src":"21421:43:19"},"nodeType":"YulIf","src":"21418:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21401:5:19","type":""}],"src":"21365:122:19"},{"body":{"nodeType":"YulBlock","src":"21536:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"21593:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21602:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21605:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21595:6:19"},"nodeType":"YulFunctionCall","src":"21595:12:19"},"nodeType":"YulExpressionStatement","src":"21595:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21559:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21584:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"21566:17:19"},"nodeType":"YulFunctionCall","src":"21566:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21556:2:19"},"nodeType":"YulFunctionCall","src":"21556:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21549:6:19"},"nodeType":"YulFunctionCall","src":"21549:43:19"},"nodeType":"YulIf","src":"21546:63:19"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21529:5:19","type":""}],"src":"21493:122:19"},{"body":{"nodeType":"YulBlock","src":"21663:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"21719:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21728:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21731:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21721:6:19"},"nodeType":"YulFunctionCall","src":"21721:12:19"},"nodeType":"YulExpressionStatement","src":"21721:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21686:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21710:5:19"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"21693:16:19"},"nodeType":"YulFunctionCall","src":"21693:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21683:2:19"},"nodeType":"YulFunctionCall","src":"21683:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21676:6:19"},"nodeType":"YulFunctionCall","src":"21676:42:19"},"nodeType":"YulIf","src":"21673:62:19"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21656:5:19","type":""}],"src":"21621:120:19"},{"body":{"nodeType":"YulBlock","src":"21790:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"21847:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21856:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21859:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21849:6:19"},"nodeType":"YulFunctionCall","src":"21849:12:19"},"nodeType":"YulExpressionStatement","src":"21849:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21813:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21838:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21820:17:19"},"nodeType":"YulFunctionCall","src":"21820:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21810:2:19"},"nodeType":"YulFunctionCall","src":"21810:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21803:6:19"},"nodeType":"YulFunctionCall","src":"21803:43:19"},"nodeType":"YulIf","src":"21800:63:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21783:5:19","type":""}],"src":"21747:122:19"},{"body":{"nodeType":"YulBlock","src":"21917:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"21973:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21982:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21985:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21975:6:19"},"nodeType":"YulFunctionCall","src":"21975:12:19"},"nodeType":"YulExpressionStatement","src":"21975:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21940:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21964:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"21947:16:19"},"nodeType":"YulFunctionCall","src":"21947:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21937:2:19"},"nodeType":"YulFunctionCall","src":"21937:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21930:6:19"},"nodeType":"YulFunctionCall","src":"21930:42:19"},"nodeType":"YulIf","src":"21927:62:19"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21910:5:19","type":""}],"src":"21875:120:19"},{"body":{"nodeType":"YulBlock","src":"22043:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"22099:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22108:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22111:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22101:6:19"},"nodeType":"YulFunctionCall","src":"22101:12:19"},"nodeType":"YulExpressionStatement","src":"22101:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22066:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22090:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"22073:16:19"},"nodeType":"YulFunctionCall","src":"22073:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22063:2:19"},"nodeType":"YulFunctionCall","src":"22063:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22056:6:19"},"nodeType":"YulFunctionCall","src":"22056:42:19"},"nodeType":"YulIf","src":"22053:62:19"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22036:5:19","type":""}],"src":"22001:120:19"},{"body":{"nodeType":"YulBlock","src":"22169:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"22225:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22234:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22237:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22227:6:19"},"nodeType":"YulFunctionCall","src":"22227:12:19"},"nodeType":"YulExpressionStatement","src":"22227:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22192:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22216:5:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"22199:16:19"},"nodeType":"YulFunctionCall","src":"22199:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22189:2:19"},"nodeType":"YulFunctionCall","src":"22189:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22182:6:19"},"nodeType":"YulFunctionCall","src":"22182:42:19"},"nodeType":"YulIf","src":"22179:62:19"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22162:5:19","type":""}],"src":"22127:120:19"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64t_uint96(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint96(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"not implemented\")\n\n    }\n\n    function store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"nonexistent request\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"250":[{"length":32,"start":785},{"length":32,"start":2225}],"252":[{"length":32,"start":2156},{"length":32,"start":3292}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ce5760003560e01c8063823597401161008c578063a410347f11610066578063a410347f146101eb578063a47c769614610209578063afc69b531461023c578063d7ae1d3014610258576100ce565b806382359740146101955780639f87fad7146101b1578063a21a23e4146101cd576100ce565b8062012291146100d357806304c357cb146100f35780633d18651e1461010f5780635d3b1d301461012d5780637341c10c1461015d578063808974ff14610179575b600080fd5b6100db610274565b6040516100ea939291906117a1565b60405180910390f35b61010d60048036038101906101089190611408565b6102d4565b005b61011761030f565b60405161012491906118f8565b60405180910390f35b61014760048036038101906101429190611320565b610333565b60405161015491906117df565b60405180910390f35b61017760048036038101906101729190611408565b61054f565b005b610193600480360381019061018e919061139b565b61058a565b005b6101af60048036038101906101aa91906113db565b610aaf565b005b6101cb60048036038101906101c69190611408565b610aea565b005b6101d5610b25565b6040516101e291906118dd565b60405180910390f35b6101f3610cda565b60405161020091906118f8565b60405180910390f35b610223600480360381019061021e91906113db565b610cfe565b6040516102339493929190611913565b60405180910390f35b61025660048036038101906102519190611448565b610e9f565b005b610272600480360381019061026d9190611408565b61106a565b005b60008060606003621e8480600067ffffffffffffffff81111561029a57610299611d6d565b5b6040519080825280602002602001820160405280156102c85781602001602082028036833780820191505090505b50925092509250909192565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690611761565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b60008073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103e5576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008154809291906103fa90611c95565b91905055905060006002600081548092919061041590611c95565b91905055905060405180606001604052808867ffffffffffffffff1681526020018663ffffffff1681526020018563ffffffff168152506004600084815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff168767ffffffffffffffff16897f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a977285858b8b8b604051610539959493929190611853565b60405180910390a4819250505095945050505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190611761565b60405180910390fd5b60005a905060006004600085815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90611781565b60405180910390fd5b6000600460008581526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff168152505090506000816040015163ffffffff1667ffffffffffffffff8111156106cd576106cc611d6d565b5b6040519080825280602002602001820160405280156106fb5781602001602082028036833780820191505090505b50905060005b826040015163ffffffff1681101561077157858160405160200161072692919061182a565b6040516020818303038152906040528051906020012060001c82828151811061075257610751611d3e565b5b602002602001018181525050808061076990611c95565b915050610701565b50600080631fe543e360e01b87846040516024016107909291906117fa565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008673ffffffffffffffffffffffffffffffffffffffff16856020015163ffffffff16836040516108219190611706565b60006040518083038160008787f1925050503d806000811461085f576040519150601f19603f3d011682016040523d82523d6000602084013e610864565b606091505b5050905060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a886108a59190611b4c565b6108af9190611af2565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff166108e89190611a5a565b9050806bffffffffffffffffffffffff1660036000886000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff161015610986576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000886000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff166109db9190611b80565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600460008a8152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549063ffffffff021916905560008201600c6101000a81549063ffffffff02191690555050887f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e48a8385604051610a9c939291906118a6565b60405180910390a2505050505050505050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae190611761565b60405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1c90611761565b60405180910390fd5b600080600081819054906101000a900467ffffffffffffffff1680929190610b4c90611cde565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff16815250600360008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060008054906101000a900467ffffffffffffffff1667ffffffffffffffff167f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf33604051610cb8919061171d565b60405180910390a260008054906101000a900467ffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006060600073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610db6576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166000600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600067ffffffffffffffff811115610e6157610e60611d6d565b5b604051908082528060200260200182016040528015610e8f5781602001602082028036833780820191505090505b5093509350935093509193509193565b600073ffffffffffffffffffffffffffffffffffffffff16600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f50576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16905081600360008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff16610fe89190611ab0565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508267ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f882848461104f9190611ab0565b60405161105d92919061195f565b60405180910390a2505050565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611121576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461119157806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401611188919061171d565b60405180910390fd5b8367ffffffffffffffff167fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981584600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff1660405161120f929190611738565b60405180910390a2600360008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505050505050565b60008135905061129c81611df3565b92915050565b6000813590506112b181611e0a565b92915050565b6000813590506112c681611e21565b92915050565b6000813590506112db81611e38565b92915050565b6000813590506112f081611e4f565b92915050565b60008135905061130581611e66565b92915050565b60008135905061131a81611e7d565b92915050565b600080600080600060a0868803121561133c5761133b611d9c565b5b600061134a888289016112a2565b955050602061135b888289016112f6565b945050604061136c888289016112b7565b935050606061137d888289016112e1565b925050608061138e888289016112e1565b9150509295509295909350565b600080604083850312156113b2576113b1611d9c565b5b60006113c0858286016112cc565b92505060206113d18582860161128d565b9150509250929050565b6000602082840312156113f1576113f0611d9c565b5b60006113ff848285016112f6565b91505092915050565b6000806040838503121561141f5761141e611d9c565b5b600061142d858286016112f6565b925050602061143e8582860161128d565b9150509250929050565b6000806040838503121561145f5761145e611d9c565b5b600061146d858286016112f6565b925050602061147e8582860161130b565b9150509250929050565b600061149483836114d0565b60208301905092915050565b60006114ac8383611617565b60208301905092915050565b60006114c483836116ac565b60208301905092915050565b6114d981611bb4565b82525050565b6114e881611bb4565b82525050565b60006114f9826119b8565b6115038185611a0b565b935061150e83611988565b8060005b8381101561153f5781516115268882611488565b9750611531836119e4565b925050600181019050611512565b5085935050505092915050565b6000611557826119c3565b6115618185611a1c565b935061156c83611998565b8060005b8381101561159d57815161158488826114a0565b975061158f836119f1565b925050600181019050611570565b5085935050505092915050565b60006115b5826119ce565b6115bf8185611a2d565b93506115ca836119a8565b8060005b838110156115fb5781516115e288826114b8565b97506115ed836119fe565b9250506001810190506115ce565b5085935050505092915050565b61161181611bc6565b82525050565b61162081611bd2565b82525050565b6000611631826119d9565b61163b8185611a3e565b935061164b818560208601611c62565b80840191505092915050565b6000611664600f83611a49565b915061166f82611da1565b602082019050919050565b6000611687601383611a49565b915061169282611dca565b602082019050919050565b6116a681611bdc565b82525050565b6116b581611c0a565b82525050565b6116c481611c0a565b82525050565b6116d381611c14565b82525050565b6116e281611c24565b82525050565b6116f181611c50565b82525050565b61170081611c38565b82525050565b60006117128284611626565b915081905092915050565b600060208201905061173260008301846114df565b92915050565b600060408201905061174d60008301856114df565b61175a60208301846116e8565b9392505050565b6000602082019050818103600083015261177a81611657565b9050919050565b6000602082019050818103600083015261179a8161167a565b9050919050565b60006060820190506117b6600083018661169d565b6117c360208301856116ca565b81810360408301526117d5818461154c565b9050949350505050565b60006020820190506117f460008301846116bb565b92915050565b600060408201905061180f60008301856116bb565b818103602083015261182181846115aa565b90509392505050565b600060408201905061183f60008301856116bb565b61184c60208301846116bb565b9392505050565b600060a08201905061186860008301886116bb565b61187560208301876116bb565b611882604083018661169d565b61188f60608301856116ca565b61189c60808301846116ca565b9695505050505050565b60006060820190506118bb60008301866116bb565b6118c860208301856116f7565b6118d56040830184611608565b949350505050565b60006020820190506118f260008301846116d9565b92915050565b600060208201905061190d60008301846116f7565b92915050565b600060808201905061192860008301876116f7565b61193560208301866116d9565b61194260408301856114df565b818103606083015261195481846114ee565b905095945050505050565b600060408201905061197460008301856116e8565b61198160208301846116e8565b9392505050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611a6582611c0a565b9150611a7083611c0a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611aa557611aa4611d0f565b5b828201905092915050565b6000611abb82611c38565b9150611ac683611c38565b9250826bffffffffffffffffffffffff03821115611ae757611ae6611d0f565b5b828201905092915050565b6000611afd82611c0a565b9150611b0883611c0a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b4157611b40611d0f565b5b828202905092915050565b6000611b5782611c0a565b9150611b6283611c0a565b925082821015611b7557611b74611d0f565b5b828203905092915050565b6000611b8b82611c38565b9150611b9683611c38565b925082821015611ba957611ba8611d0f565b5b828203905092915050565b6000611bbf82611bea565b9050919050565b60008115159050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60006bffffffffffffffffffffffff82169050919050565b6000611c5b82611c38565b9050919050565b60005b83811015611c80578082015181840152602081019050611c65565b83811115611c8f576000848401525b50505050565b6000611ca082611c0a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cd357611cd2611d0f565b5b600182019050919050565b6000611ce982611c24565b915067ffffffffffffffff821415611d0457611d03611d0f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f6e6f7420696d706c656d656e7465640000000000000000000000000000000000600082015250565b7f6e6f6e6578697374656e74207265717565737400000000000000000000000000600082015250565b611dfc81611bb4565b8114611e0757600080fd5b50565b611e1381611bd2565b8114611e1e57600080fd5b50565b611e2a81611bdc565b8114611e3557600080fd5b50565b611e4181611c0a565b8114611e4c57600080fd5b50565b611e5881611c14565b8114611e6357600080fd5b50565b611e6f81611c24565b8114611e7a57600080fd5b50565b611e8681611c38565b8114611e9157600080fd5b5056fea2646970667358221220e97e70024bd54661de69207be3ddaefdbd14d1846190fede500bd89c8bfe377a64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82359740 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA410347F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x258 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x82359740 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x1CD JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A JUMPI PUSH2 0x299 PUSH2 0x1D6D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA SWAP1 PUSH2 0x1C95 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x415 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP1 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x1D6D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x771 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x726 SWAP3 SWAP2 SWAP1 PUSH2 0x182A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x1D3E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x769 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x701 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x790 SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x864 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP9 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x1AF2 JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA9C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB4C SWAP1 PUSH2 0x1CDE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE60 PUSH2 0x1D6D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE8F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE8 SWAP2 SWAP1 PUSH2 0x1AB0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105D SWAP3 SWAP2 SWAP1 PUSH2 0x195F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1191 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1188 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x120F SWAP3 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129C DUP2 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B1 DUP2 PUSH2 0x1E0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12C6 DUP2 PUSH2 0x1E21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12DB DUP2 PUSH2 0x1E38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12F0 DUP2 PUSH2 0x1E4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1305 DUP2 PUSH2 0x1E66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x131A DUP2 PUSH2 0x1E7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x133C JUMPI PUSH2 0x133B PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP9 DUP3 DUP10 ADD PUSH2 0x12A2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x135B DUP9 DUP3 DUP10 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x136C DUP9 DUP3 DUP10 ADD PUSH2 0x12B7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x137D DUP9 DUP3 DUP10 ADD PUSH2 0x12E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x138E DUP9 DUP3 DUP10 ADD PUSH2 0x12E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C0 DUP6 DUP3 DUP7 ADD PUSH2 0x12CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D1 DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FF DUP5 DUP3 DUP6 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x141F JUMPI PUSH2 0x141E PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142D DUP6 DUP3 DUP7 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x143E DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145F JUMPI PUSH2 0x145E PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x146D DUP6 DUP3 DUP7 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x147E DUP6 DUP3 DUP7 ADD PUSH2 0x130B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1494 DUP4 DUP4 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AC DUP4 DUP4 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C4 DUP4 DUP4 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D9 DUP2 PUSH2 0x1BB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14E8 DUP2 PUSH2 0x1BB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F9 DUP3 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x1503 DUP2 DUP6 PUSH2 0x1A0B JUMP JUMPDEST SWAP4 POP PUSH2 0x150E DUP4 PUSH2 0x1988 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153F JUMPI DUP2 MLOAD PUSH2 0x1526 DUP9 DUP3 PUSH2 0x1488 JUMP JUMPDEST SWAP8 POP PUSH2 0x1531 DUP4 PUSH2 0x19E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1512 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1557 DUP3 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x1561 DUP2 DUP6 PUSH2 0x1A1C JUMP JUMPDEST SWAP4 POP PUSH2 0x156C DUP4 PUSH2 0x1998 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x159D JUMPI DUP2 MLOAD PUSH2 0x1584 DUP9 DUP3 PUSH2 0x14A0 JUMP JUMPDEST SWAP8 POP PUSH2 0x158F DUP4 PUSH2 0x19F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1570 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B5 DUP3 PUSH2 0x19CE JUMP JUMPDEST PUSH2 0x15BF DUP2 DUP6 PUSH2 0x1A2D JUMP JUMPDEST SWAP4 POP PUSH2 0x15CA DUP4 PUSH2 0x19A8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15FB JUMPI DUP2 MLOAD PUSH2 0x15E2 DUP9 DUP3 PUSH2 0x14B8 JUMP JUMPDEST SWAP8 POP PUSH2 0x15ED DUP4 PUSH2 0x19FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15CE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1611 DUP2 PUSH2 0x1BC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1620 DUP2 PUSH2 0x1BD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1631 DUP3 PUSH2 0x19D9 JUMP JUMPDEST PUSH2 0x163B DUP2 DUP6 PUSH2 0x1A3E JUMP JUMPDEST SWAP4 POP PUSH2 0x164B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C62 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1664 PUSH1 0xF DUP4 PUSH2 0x1A49 JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP3 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1687 PUSH1 0x13 DUP4 PUSH2 0x1A49 JUMP JUMPDEST SWAP2 POP PUSH2 0x1692 DUP3 PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A6 DUP2 PUSH2 0x1BDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16B5 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16C4 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16D3 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16E2 DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16F1 DUP2 PUSH2 0x1C50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1700 DUP2 PUSH2 0x1C38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1712 DUP3 DUP5 PUSH2 0x1626 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1732 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x174D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14DF JUMP JUMPDEST PUSH2 0x175A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x177A DUP2 PUSH2 0x1657 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x179A DUP2 PUSH2 0x167A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17B6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x17C3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16CA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x17D5 DUP2 DUP5 PUSH2 0x154C JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x180F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1821 DUP2 DUP5 PUSH2 0x15AA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x183F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x184C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1868 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x1875 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x1882 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x188F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x189C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x16CA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18BB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x18C8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x18D5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1608 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x190D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1928 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1935 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x1942 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14DF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1954 DUP2 DUP5 PUSH2 0x14EE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1974 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x1981 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A65 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A70 DUP4 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1AA4 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABB DUP3 PUSH2 0x1C38 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC6 DUP4 PUSH2 0x1C38 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1AE7 JUMPI PUSH2 0x1AE6 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFD DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B08 DUP4 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B57 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 DUP4 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1B75 JUMPI PUSH2 0x1B74 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B8B DUP3 PUSH2 0x1C38 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B96 DUP4 PUSH2 0x1C38 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BBF DUP3 PUSH2 0x1BEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5B DUP3 PUSH2 0x1C38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C80 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C65 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C8F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA0 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1CD3 JUMPI PUSH2 0x1CD2 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE9 DUP3 PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1D04 JUMPI PUSH2 0x1D03 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1DFC DUP2 PUSH2 0x1BB4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E13 DUP2 PUSH2 0x1BD2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E2A DUP2 PUSH2 0x1BDC JUMP JUMPDEST DUP2 EQ PUSH2 0x1E35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E41 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E58 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E6F DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E86 DUP2 PUSH2 0x1C38 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 PUSH31 0x70024BD54661DE69207BE3DDAEFDBD14D1846190FEDE500BD89C8BFE377A64 PUSH20 0x6F6C634300080700330000000000000000000000 ","sourceMap":"254:5984:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5555:184;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5982:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;317:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3691:718;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5743:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2165:978;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6121:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5861:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4413:269;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;353:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4686:396;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3345:342;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5086:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5555:184;5638:6;5652;5666:16;5705:1;5708:7;5731:1;5717:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5697:37;;;;;;5555:184;;;:::o;5982:135::-;6087:25;;;;;;;;;;:::i;:::-;;;;;;;;317:32;;;:::o;3691:718::-;3884:7;3944:1;3903:43;;:15;:23;3919:6;3903:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;3899:92;;;3963:21;;;;;;;;;;;;;;3899:92;3997:17;4017:15;;:17;;;;;;;;;:::i;:::-;;;;;3997:37;;4040:15;4058:13;;:15;;;;;;;;;:::i;:::-;;;;;4040:33;;4104:82;;;;;;;;4120:6;4104:82;;;;;;4146:17;4104:82;;;;;;4175:9;4104:82;;;;;4080:10;:21;4091:9;4080:21;;;;;;;;;;;:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4366:10;4198:184;;4274:6;4198:184;;4226:8;4198:184;4242:9;4259:7;4288:28;4324:17;4349:9;4198:184;;;;;;;;;;:::i;:::-;;;;;;;;4395:9;4388:16;;;;3691:718;;;;;;;:::o;5743:114::-;5827:25;;;;;;;;;;:::i;:::-;;;;;;;;2165:978;2247:16;2266:9;2247:28;;2317:1;2285:10;:22;2296:10;2285:22;;;;;;;;;;;:28;;;;;;;;;;;;:33;;;2281:83;;;2328:29;;;;;;;;;;:::i;:::-;;;;;;;;2281:83;2369:18;2390:10;:22;2401:10;2390:22;;;;;;;;;;;2369:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:22;2458:3;:12;;;2444:27;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:52;;2482:9;2477:114;2501:3;:12;;;2497:16;;:1;:16;2477:114;;;2568:10;2580:1;2557:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2547:36;;;;;;2539:45;;2528:5;2534:1;2528:8;;;;;;;;:::i;:::-;;;;;;;:56;;;;;2515:3;;;;;:::i;:::-;;;;2477:114;;;;2597:19;2622:20;2668:32;;;2702:10;2714:5;2645:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2622:98;;2727:12;2745:9;:14;;2765:3;:20;;;2745:50;;2787:7;2745:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2726:69;;;2802:14;2863;2838:39;;2850:9;2839:8;:20;;;;:::i;:::-;2838:39;;;;:::i;:::-;2826:8;:52;;;;;;:::i;:::-;2802:77;;2926:7;2889:44;;:15;:26;2905:3;:9;;;2889:26;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:44;;;2885:93;;;2950:21;;;;;;;;;;;;;;2885:93;3021:7;2983:15;:26;2999:3;:9;;;2983:26;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3042:10;:22;3053:10;3042:22;;;;;;;;;;;;3034:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3097:10;3076:62;3109:10;3121:7;3130;3076:62;;;;;;;;:::i;:::-;;;;;;;;2241:902;;;;;;;2165:978;;:::o;6121:115::-;6206:25;;;;;;;;;;:::i;:::-;;;;;;;;5861:117;5948:25;;;;;;;;;;:::i;:::-;;;;;;;;4413:269;4470:13;4491:14;;:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4547:45;;;;;;;;4568:10;4547:45;;;;;;4589:1;4547:45;;;;;4513:15;:31;4529:14;;;;;;;;;;;4513:31;;;;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4623:14;;;;;;;;;;4603:47;;;4639:10;4603:47;;;;;;:::i;:::-;;;;;;;;4663:14;;;;;;;;;;4656:21;;4413:269;:::o;353:38::-;;;:::o;4686:396::-;4781:14;4803:15;4826:13;4847:26;4933:1;4892:43;;:15;:23;4908:6;4892:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;4888:92;;;4952:21;;;;;;;;;;;;;;4888:92;4993:15;:23;5009:6;4993:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;5026:1;5029:15;:23;5045:6;5029:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;5074:1;5060:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4985:92;;;;;;;;4686:396;;;;;:::o;3345:342::-;3460:1;3419:43;;:15;:23;3435:6;3419:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;3415:92;;;3479:21;;;;;;;;;;;;;;3415:92;3512:17;3532:15;:23;3548:6;3532:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;3512:51;;3604:7;3569:15;:23;3585:6;3569:23;;;;;;;;;;;;;;;:31;;;:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3641:6;3622:60;;;3649:10;3674:7;3661:10;:20;;;;:::i;:::-;3622:60;;;;;;;:::i;:::-;;;;;;;;3409:278;3345:342;;:::o;5086:215::-;5173:6;5348:13;5364:15;:23;5380:6;5364:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;5348:45;;5420:1;5403:19;;:5;:19;;;5399:68;;;5439:21;;;;;;;;;;;;;;5399:68;5490:5;5476:19;;:10;:19;;;5472:68;;5527:5;5512:21;;;;;;;;;;;:::i;:::-;;;;;;;;5472:68;5213:6:::1;5192:66;;;5221:3;5226:15;:23;5242:6;5226:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;5192:66;;;;;;;:::i;:::-;;;;;;;;5272:15;:23;5288:6;5272:23;;;;;;;;;;;;;;;;5264:32:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5342:209:::0;5086:215;;;:::o;7:139:19:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:137::-;342:5;380:6;367:20;358:29;;396:32;422:5;396:32;:::i;:::-;297:137;;;;:::o;440:139::-;486:5;524:6;511:20;502:29;;540:33;567:5;540:33;:::i;:::-;440:139;;;;:::o;585:137::-;630:5;668:6;655:20;646:29;;684:32;710:5;684:32;:::i;:::-;585:137;;;;:::o;728:::-;773:5;811:6;798:20;789:29;;827:32;853:5;827:32;:::i;:::-;728:137;;;;:::o;871:::-;916:5;954:6;941:20;932:29;;970:32;996:5;970:32;:::i;:::-;871:137;;;;:::o;1014:903::-;1105:6;1113;1121;1129;1137;1186:3;1174:9;1165:7;1161:23;1157:33;1154:120;;;1193:79;;:::i;:::-;1154:120;1313:1;1338:53;1383:7;1374:6;1363:9;1359:22;1338:53;:::i;:::-;1328:63;;1284:117;1440:2;1466:52;1510:7;1501:6;1490:9;1486:22;1466:52;:::i;:::-;1456:62;;1411:117;1567:2;1593:52;1637:7;1628:6;1617:9;1613:22;1593:52;:::i;:::-;1583:62;;1538:117;1694:2;1720:52;1764:7;1755:6;1744:9;1740:22;1720:52;:::i;:::-;1710:62;;1665:117;1821:3;1848:52;1892:7;1883:6;1872:9;1868:22;1848:52;:::i;:::-;1838:62;;1792:118;1014:903;;;;;;;;:::o;1923:474::-;1991:6;1999;2048:2;2036:9;2027:7;2023:23;2019:32;2016:119;;;2054:79;;:::i;:::-;2016:119;2174:1;2199:53;2244:7;2235:6;2224:9;2220:22;2199:53;:::i;:::-;2189:63;;2145:117;2301:2;2327:53;2372:7;2363:6;2352:9;2348:22;2327:53;:::i;:::-;2317:63;;2272:118;1923:474;;;;;:::o;2403:327::-;2461:6;2510:2;2498:9;2489:7;2485:23;2481:32;2478:119;;;2516:79;;:::i;:::-;2478:119;2636:1;2661:52;2705:7;2696:6;2685:9;2681:22;2661:52;:::i;:::-;2651:62;;2607:116;2403:327;;;;:::o;2736:472::-;2803:6;2811;2860:2;2848:9;2839:7;2835:23;2831:32;2828:119;;;2866:79;;:::i;:::-;2828:119;2986:1;3011:52;3055:7;3046:6;3035:9;3031:22;3011:52;:::i;:::-;3001:62;;2957:116;3112:2;3138:53;3183:7;3174:6;3163:9;3159:22;3138:53;:::i;:::-;3128:63;;3083:118;2736:472;;;;;:::o;3214:470::-;3280:6;3288;3337:2;3325:9;3316:7;3312:23;3308:32;3305:119;;;3343:79;;:::i;:::-;3305:119;3463:1;3488:52;3532:7;3523:6;3512:9;3508:22;3488:52;:::i;:::-;3478:62;;3434:116;3589:2;3615:52;3659:7;3650:6;3639:9;3635:22;3615:52;:::i;:::-;3605:62;;3560:117;3214:470;;;;;:::o;3690:179::-;3759:10;3780:46;3822:3;3814:6;3780:46;:::i;:::-;3858:4;3853:3;3849:14;3835:28;;3690:179;;;;:::o;3875:::-;3944:10;3965:46;4007:3;3999:6;3965:46;:::i;:::-;4043:4;4038:3;4034:14;4020:28;;3875:179;;;;:::o;4060:::-;4129:10;4150:46;4192:3;4184:6;4150:46;:::i;:::-;4228:4;4223:3;4219:14;4205:28;;4060:179;;;;:::o;4245:108::-;4322:24;4340:5;4322:24;:::i;:::-;4317:3;4310:37;4245:108;;:::o;4359:118::-;4446:24;4464:5;4446:24;:::i;:::-;4441:3;4434:37;4359:118;;:::o;4513:732::-;4632:3;4661:54;4709:5;4661:54;:::i;:::-;4731:86;4810:6;4805:3;4731:86;:::i;:::-;4724:93;;4841:56;4891:5;4841:56;:::i;:::-;4920:7;4951:1;4936:284;4961:6;4958:1;4955:13;4936:284;;;5037:6;5031:13;5064:63;5123:3;5108:13;5064:63;:::i;:::-;5057:70;;5150:60;5203:6;5150:60;:::i;:::-;5140:70;;4996:224;4983:1;4980;4976:9;4971:14;;4936:284;;;4940:14;5236:3;5229:10;;4637:608;;;4513:732;;;;:::o;5281:::-;5400:3;5429:54;5477:5;5429:54;:::i;:::-;5499:86;5578:6;5573:3;5499:86;:::i;:::-;5492:93;;5609:56;5659:5;5609:56;:::i;:::-;5688:7;5719:1;5704:284;5729:6;5726:1;5723:13;5704:284;;;5805:6;5799:13;5832:63;5891:3;5876:13;5832:63;:::i;:::-;5825:70;;5918:60;5971:6;5918:60;:::i;:::-;5908:70;;5764:224;5751:1;5748;5744:9;5739:14;;5704:284;;;5708:14;6004:3;5997:10;;5405:608;;;5281:732;;;;:::o;6049:::-;6168:3;6197:54;6245:5;6197:54;:::i;:::-;6267:86;6346:6;6341:3;6267:86;:::i;:::-;6260:93;;6377:56;6427:5;6377:56;:::i;:::-;6456:7;6487:1;6472:284;6497:6;6494:1;6491:13;6472:284;;;6573:6;6567:13;6600:63;6659:3;6644:13;6600:63;:::i;:::-;6593:70;;6686:60;6739:6;6686:60;:::i;:::-;6676:70;;6532:224;6519:1;6516;6512:9;6507:14;;6472:284;;;6476:14;6772:3;6765:10;;6173:608;;;6049:732;;;;:::o;6787:109::-;6868:21;6883:5;6868:21;:::i;:::-;6863:3;6856:34;6787:109;;:::o;6902:108::-;6979:24;6997:5;6979:24;:::i;:::-;6974:3;6967:37;6902:108;;:::o;7016:373::-;7120:3;7148:38;7180:5;7148:38;:::i;:::-;7202:88;7283:6;7278:3;7202:88;:::i;:::-;7195:95;;7299:52;7344:6;7339:3;7332:4;7325:5;7321:16;7299:52;:::i;:::-;7376:6;7371:3;7367:16;7360:23;;7124:265;7016:373;;;;:::o;7395:366::-;7537:3;7558:67;7622:2;7617:3;7558:67;:::i;:::-;7551:74;;7634:93;7723:3;7634:93;:::i;:::-;7752:2;7747:3;7743:12;7736:19;;7395:366;;;:::o;7767:::-;7909:3;7930:67;7994:2;7989:3;7930:67;:::i;:::-;7923:74;;8006:93;8095:3;8006:93;:::i;:::-;8124:2;8119:3;8115:12;8108:19;;7767:366;;;:::o;8139:115::-;8224:23;8241:5;8224:23;:::i;:::-;8219:3;8212:36;8139:115;;:::o;8260:108::-;8337:24;8355:5;8337:24;:::i;:::-;8332:3;8325:37;8260:108;;:::o;8374:118::-;8461:24;8479:5;8461:24;:::i;:::-;8456:3;8449:37;8374:118;;:::o;8498:115::-;8583:23;8600:5;8583:23;:::i;:::-;8578:3;8571:36;8498:115;;:::o;8619:::-;8704:23;8721:5;8704:23;:::i;:::-;8699:3;8692:36;8619:115;;:::o;8740:129::-;8826:36;8856:5;8826:36;:::i;:::-;8821:3;8814:49;8740:129;;:::o;8875:115::-;8960:23;8977:5;8960:23;:::i;:::-;8955:3;8948:36;8875:115;;:::o;8996:271::-;9126:3;9148:93;9237:3;9228:6;9148:93;:::i;:::-;9141:100;;9258:3;9251:10;;8996:271;;;;:::o;9273:222::-;9366:4;9404:2;9393:9;9389:18;9381:26;;9417:71;9485:1;9474:9;9470:17;9461:6;9417:71;:::i;:::-;9273:222;;;;:::o;9501:330::-;9621:4;9659:2;9648:9;9644:18;9636:26;;9672:71;9740:1;9729:9;9725:17;9716:6;9672:71;:::i;:::-;9753;9820:2;9809:9;9805:18;9796:6;9753:71;:::i;:::-;9501:330;;;;;:::o;9837:419::-;10003:4;10041:2;10030:9;10026:18;10018:26;;10090:9;10084:4;10080:20;10076:1;10065:9;10061:17;10054:47;10118:131;10244:4;10118:131;:::i;:::-;10110:139;;9837:419;;;:::o;10262:::-;10428:4;10466:2;10455:9;10451:18;10443:26;;10515:9;10509:4;10505:20;10501:1;10490:9;10486:17;10479:47;10543:131;10669:4;10543:131;:::i;:::-;10535:139;;10262:419;;;:::o;10687:585::-;10882:4;10920:2;10909:9;10905:18;10897:26;;10933:69;10999:1;10988:9;10984:17;10975:6;10933:69;:::i;:::-;11012:70;11078:2;11067:9;11063:18;11054:6;11012:70;:::i;:::-;11129:9;11123:4;11119:20;11114:2;11103:9;11099:18;11092:48;11157:108;11260:4;11251:6;11157:108;:::i;:::-;11149:116;;10687:585;;;;;;:::o;11278:222::-;11371:4;11409:2;11398:9;11394:18;11386:26;;11422:71;11490:1;11479:9;11475:17;11466:6;11422:71;:::i;:::-;11278:222;;;;:::o;11506:483::-;11677:4;11715:2;11704:9;11700:18;11692:26;;11728:71;11796:1;11785:9;11781:17;11772:6;11728:71;:::i;:::-;11846:9;11840:4;11836:20;11831:2;11820:9;11816:18;11809:48;11874:108;11977:4;11968:6;11874:108;:::i;:::-;11866:116;;11506:483;;;;;:::o;11995:332::-;12116:4;12154:2;12143:9;12139:18;12131:26;;12167:71;12235:1;12224:9;12220:17;12211:6;12167:71;:::i;:::-;12248:72;12316:2;12305:9;12301:18;12292:6;12248:72;:::i;:::-;11995:332;;;;;:::o;12333:652::-;12532:4;12570:3;12559:9;12555:19;12547:27;;12584:71;12652:1;12641:9;12637:17;12628:6;12584:71;:::i;:::-;12665:72;12733:2;12722:9;12718:18;12709:6;12665:72;:::i;:::-;12747:70;12813:2;12802:9;12798:18;12789:6;12747:70;:::i;:::-;12827;12893:2;12882:9;12878:18;12869:6;12827:70;:::i;:::-;12907:71;12973:3;12962:9;12958:19;12949:6;12907:71;:::i;:::-;12333:652;;;;;;;;:::o;12991:426::-;13132:4;13170:2;13159:9;13155:18;13147:26;;13183:71;13251:1;13240:9;13236:17;13227:6;13183:71;:::i;:::-;13264:70;13330:2;13319:9;13315:18;13306:6;13264:70;:::i;:::-;13344:66;13406:2;13395:9;13391:18;13382:6;13344:66;:::i;:::-;12991:426;;;;;;:::o;13423:218::-;13514:4;13552:2;13541:9;13537:18;13529:26;;13565:69;13631:1;13620:9;13616:17;13607:6;13565:69;:::i;:::-;13423:218;;;;:::o;13647:::-;13738:4;13776:2;13765:9;13761:18;13753:26;;13789:69;13855:1;13844:9;13840:17;13831:6;13789:69;:::i;:::-;13647:218;;;;:::o;13871:696::-;14094:4;14132:3;14121:9;14117:19;14109:27;;14146:69;14212:1;14201:9;14197:17;14188:6;14146:69;:::i;:::-;14225:70;14291:2;14280:9;14276:18;14267:6;14225:70;:::i;:::-;14305:72;14373:2;14362:9;14358:18;14349:6;14305:72;:::i;:::-;14424:9;14418:4;14414:20;14409:2;14398:9;14394:18;14387:48;14452:108;14555:4;14546:6;14452:108;:::i;:::-;14444:116;;13871:696;;;;;;;:::o;14573:328::-;14692:4;14730:2;14719:9;14715:18;14707:26;;14743:70;14810:1;14799:9;14795:17;14786:6;14743:70;:::i;:::-;14823:71;14890:2;14879:9;14875:18;14866:6;14823:71;:::i;:::-;14573:328;;;;;:::o;14988:132::-;15055:4;15078:3;15070:11;;15108:4;15103:3;15099:14;15091:22;;14988:132;;;:::o;15126:::-;15193:4;15216:3;15208:11;;15246:4;15241:3;15237:14;15229:22;;15126:132;;;:::o;15264:::-;15331:4;15354:3;15346:11;;15384:4;15379:3;15375:14;15367:22;;15264:132;;;:::o;15402:114::-;15469:6;15503:5;15497:12;15487:22;;15402:114;;;:::o;15522:::-;15589:6;15623:5;15617:12;15607:22;;15522:114;;;:::o;15642:::-;15709:6;15743:5;15737:12;15727:22;;15642:114;;;:::o;15762:98::-;15813:6;15847:5;15841:12;15831:22;;15762:98;;;:::o;15866:113::-;15936:4;15968;15963:3;15959:14;15951:22;;15866:113;;;:::o;15985:::-;16055:4;16087;16082:3;16078:14;16070:22;;15985:113;;;:::o;16104:::-;16174:4;16206;16201:3;16197:14;16189:22;;16104:113;;;:::o;16223:184::-;16322:11;16356:6;16351:3;16344:19;16396:4;16391:3;16387:14;16372:29;;16223:184;;;;:::o;16413:::-;16512:11;16546:6;16541:3;16534:19;16586:4;16581:3;16577:14;16562:29;;16413:184;;;;:::o;16603:::-;16702:11;16736:6;16731:3;16724:19;16776:4;16771:3;16767:14;16752:29;;16603:184;;;;:::o;16793:147::-;16894:11;16931:3;16916:18;;16793:147;;;;:::o;16946:169::-;17030:11;17064:6;17059:3;17052:19;17104:4;17099:3;17095:14;17080:29;;16946:169;;;;:::o;17121:305::-;17161:3;17180:20;17198:1;17180:20;:::i;:::-;17175:25;;17214:20;17232:1;17214:20;:::i;:::-;17209:25;;17368:1;17300:66;17296:74;17293:1;17290:81;17287:107;;;17374:18;;:::i;:::-;17287:107;17418:1;17415;17411:9;17404:16;;17121:305;;;;:::o;17432:262::-;17471:3;17490:19;17507:1;17490:19;:::i;:::-;17485:24;;17523:19;17540:1;17523:19;:::i;:::-;17518:24;;17636:1;17608:26;17604:34;17601:1;17598:41;17595:67;;;17642:18;;:::i;:::-;17595:67;17686:1;17683;17679:9;17672:16;;17432:262;;;;:::o;17700:348::-;17740:7;17763:20;17781:1;17763:20;:::i;:::-;17758:25;;17797:20;17815:1;17797:20;:::i;:::-;17792:25;;17985:1;17917:66;17913:74;17910:1;17907:81;17902:1;17895:9;17888:17;17884:105;17881:131;;;17992:18;;:::i;:::-;17881:131;18040:1;18037;18033:9;18022:20;;17700:348;;;;:::o;18054:191::-;18094:4;18114:20;18132:1;18114:20;:::i;:::-;18109:25;;18148:20;18166:1;18148:20;:::i;:::-;18143:25;;18187:1;18184;18181:8;18178:34;;;18192:18;;:::i;:::-;18178:34;18237:1;18234;18230:9;18222:17;;18054:191;;;;:::o;18251:188::-;18290:4;18310:19;18327:1;18310:19;:::i;:::-;18305:24;;18343:19;18360:1;18343:19;:::i;:::-;18338:24;;18381:1;18378;18375:8;18372:34;;;18386:18;;:::i;:::-;18372:34;18431:1;18428;18424:9;18416:17;;18251:188;;;;:::o;18445:96::-;18482:7;18511:24;18529:5;18511:24;:::i;:::-;18500:35;;18445:96;;;:::o;18547:90::-;18581:7;18624:5;18617:13;18610:21;18599:32;;18547:90;;;:::o;18643:77::-;18680:7;18709:5;18698:16;;18643:77;;;:::o;18726:89::-;18762:7;18802:6;18795:5;18791:18;18780:29;;18726:89;;;:::o;18821:126::-;18858:7;18898:42;18891:5;18887:54;18876:65;;18821:126;;;:::o;18953:77::-;18990:7;19019:5;19008:16;;18953:77;;;:::o;19036:93::-;19072:7;19112:10;19105:5;19101:22;19090:33;;19036:93;;;:::o;19135:101::-;19171:7;19211:18;19204:5;19200:30;19189:41;;19135:101;;;:::o;19242:109::-;19278:7;19318:26;19311:5;19307:38;19296:49;;19242:109;;;:::o;19357:111::-;19406:9;19439:23;19456:5;19439:23;:::i;:::-;19426:36;;19357:111;;;:::o;19474:307::-;19542:1;19552:113;19566:6;19563:1;19560:13;19552:113;;;19651:1;19646:3;19642:11;19636:18;19632:1;19627:3;19623:11;19616:39;19588:2;19585:1;19581:10;19576:15;;19552:113;;;19683:6;19680:1;19677:13;19674:101;;;19763:1;19754:6;19749:3;19745:16;19738:27;19674:101;19523:258;19474:307;;;:::o;19787:233::-;19826:3;19849:24;19867:5;19849:24;:::i;:::-;19840:33;;19895:66;19888:5;19885:77;19882:103;;;19965:18;;:::i;:::-;19882:103;20012:1;20005:5;20001:13;19994:20;;19787:233;;;:::o;20026:183::-;20064:3;20087:23;20104:5;20087:23;:::i;:::-;20078:32;;20132:18;20125:5;20122:29;20119:55;;;20154:18;;:::i;:::-;20119:55;20201:1;20194:5;20190:13;20183:20;;20026:183;;;:::o;20215:180::-;20263:77;20260:1;20253:88;20360:4;20357:1;20350:15;20384:4;20381:1;20374:15;20401:180;20449:77;20446:1;20439:88;20546:4;20543:1;20536:15;20570:4;20567:1;20560:15;20587:180;20635:77;20632:1;20625:88;20732:4;20729:1;20722:15;20756:4;20753:1;20746:15;20896:117;21005:1;21002;20995:12;21019:165;21159:17;21155:1;21147:6;21143:14;21136:41;21019:165;:::o;21190:169::-;21330:21;21326:1;21318:6;21314:14;21307:45;21190:169;:::o;21365:122::-;21438:24;21456:5;21438:24;:::i;:::-;21431:5;21428:35;21418:63;;21477:1;21474;21467:12;21418:63;21365:122;:::o;21493:::-;21566:24;21584:5;21566:24;:::i;:::-;21559:5;21556:35;21546:63;;21605:1;21602;21595:12;21546:63;21493:122;:::o;21621:120::-;21693:23;21710:5;21693:23;:::i;:::-;21686:5;21683:34;21673:62;;21731:1;21728;21721:12;21673:62;21621:120;:::o;21747:122::-;21820:24;21838:5;21820:24;:::i;:::-;21813:5;21810:35;21800:63;;21859:1;21856;21849:12;21800:63;21747:122;:::o;21875:120::-;21947:23;21964:5;21947:23;:::i;:::-;21940:5;21937:34;21927:62;;21985:1;21982;21975:12;21927:62;21875:120;:::o;22001:::-;22073:23;22090:5;22073:23;:::i;:::-;22066:5;22063:34;22053:62;;22111:1;22108;22101:12;22053:62;22001:120;:::o;22127:::-;22199:23;22216:5;22199:23;:::i;:::-;22192:5;22189:34;22179:62;;22237:1;22234;22227:12;22179:62;22127:120;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1576400","executionCost":"infinite","totalCost":"infinite"},"external":{"BASE_FEE()":"infinite","GAS_PRICE_LINK()":"infinite","acceptSubscriptionOwnerTransfer(uint64)":"723","addConsumer(uint64,address)":"1009","cancelSubscription(uint64,address)":"infinite","createSubscription()":"infinite","fulfillRandomWords(uint256,address)":"infinite","fundSubscription(uint64,uint96)":"infinite","getRequestConfig()":"885","getSubscription(uint64)":"infinite","removeConsumer(uint64,address)":"965","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"infinite","requestSubscriptionOwnerTransfer(uint64,address)":"943"}},"methodIdentifiers":{"BASE_FEE()":"3d18651e","GAS_PRICE_LINK()":"a410347f","acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","fulfillRandomWords(uint256,address)":"808974ff","fundSubscription(uint64,uint96)":"afc69b53","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_baseFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_gasPriceLink\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_FEE\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAS_PRICE_LINK\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"_amount\",\"type\":\"uint96\"}],\"name\":\"fundSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"_minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"_subId\":\"- A unique subscription id.\"}},\"fulfillRandomWords(uint256,address)\":{\"details\":\"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.\",\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\"}},\"fundSubscription(uint64,uint96)\":{\"params\":{\"_amount\":\"the amount to fund\",\"_subId\":\"the subscription to fund\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fulfillRandomWords(uint256,address)\":{\"notice\":\"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer.\"},\"fundSubscription(uint64,uint96)\":{\"notice\":\"fundSubscription allows funding a subscription with an arbitrary amount for testing.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":\"VRFCoordinatorV2Mock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// A mock for testing code that relies on VRFCoordinatorV2.\\npragma solidity ^0.8.4;\\n\\nimport \\\"../interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"../interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"../VRFConsumerBaseV2.sol\\\";\\n\\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\\n  uint96 public immutable BASE_FEE;\\n  uint96 public immutable GAS_PRICE_LINK;\\n\\n  error InvalidSubscription();\\n  error InsufficientBalance();\\n  error MustBeSubOwner(address owner);\\n\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint64 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\\n  event SubscriptionCreated(uint64 indexed subId, address owner);\\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\\n\\n  uint64 s_currentSubId;\\n  uint256 s_nextRequestId = 1;\\n  uint256 s_nextPreSeed = 100;\\n  struct Subscription {\\n    address owner;\\n    uint96 balance;\\n  }\\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\\n\\n  struct Request {\\n    uint64 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n  }\\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\\n\\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\\n    BASE_FEE = _baseFee;\\n    GAS_PRICE_LINK = _gasPriceLink;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\\n   * @notice consumer.\\n   *\\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\\n   * @dev against the real coordinator a small amount of additional LINK is required.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   */\\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\\n    uint256 startGas = gasleft();\\n    if (s_requests[_requestId].subId == 0) {\\n      revert(\\\"nonexistent request\\\");\\n    }\\n    Request memory req = s_requests[_requestId];\\n\\n    uint256[] memory words = new uint256[](req.numWords);\\n    for (uint256 i = 0; i < req.numWords; i++) {\\n      words[i] = uint256(keccak256(abi.encode(_requestId, i)));\\n    }\\n\\n    VRFConsumerBaseV2 v;\\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, words);\\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\\n\\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\\n    if (s_subscriptions[req.subId].balance < payment) {\\n      revert InsufficientBalance();\\n    }\\n    s_subscriptions[req.subId].balance -= payment;\\n    delete (s_requests[_requestId]);\\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\\n  }\\n\\n  /**\\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\\n   *\\n   * @param _subId the subscription to fund\\n   * @param _amount the amount to fund\\n   */\\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    uint96 oldBalance = s_subscriptions[_subId].balance;\\n    s_subscriptions[_subId].balance += _amount;\\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\\n  }\\n\\n  function requestRandomWords(\\n    bytes32 _keyHash,\\n    uint64 _subId,\\n    uint16 _minimumRequestConfirmations,\\n    uint32 _callbackGasLimit,\\n    uint32 _numWords\\n  ) external override returns (uint256) {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n\\n    uint256 requestId = s_nextRequestId++;\\n    uint256 preSeed = s_nextPreSeed++;\\n\\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\\n\\n    emit RandomWordsRequested(\\n      _keyHash,\\n      requestId,\\n      preSeed,\\n      _subId,\\n      _minimumRequestConfirmations,\\n      _callbackGasLimit,\\n      _numWords,\\n      msg.sender\\n    );\\n    return requestId;\\n  }\\n\\n  function createSubscription() external override returns (uint64 _subId) {\\n    s_currentSubId++;\\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\\n    return s_currentSubId;\\n  }\\n\\n  function getSubscription(uint64 _subId)\\n    external\\n    view\\n    override\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    )\\n  {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, new address[](0));\\n  }\\n\\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\\n    delete (s_subscriptions[_subId]);\\n  }\\n\\n  modifier onlySubOwner(uint64 _subId) {\\n    address owner = s_subscriptions[_subId].owner;\\n    if (owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (msg.sender != owner) {\\n      revert MustBeSubOwner(owner);\\n    }\\n    _;\\n  }\\n\\n  function getRequestConfig()\\n    external\\n    pure\\n    override\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    )\\n  {\\n    return (3, 2000000, new bytes32[](0));\\n  }\\n\\n  function addConsumer(uint64 _subId, address _consumer) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function removeConsumer(uint64 _subId, address _consumer) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n}\\n\",\"keccak256\":\"0xb9d619acd3fe9b3571f7d1601ed6aadb235415fbce395001e122773c0bb3843e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":312,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_currentSubId","offset":0,"slot":"0","type":"t_uint64"},{"astId":315,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextRequestId","offset":0,"slot":"1","type":"t_uint256"},{"astId":318,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextPreSeed","offset":0,"slot":"2","type":"t_uint256"},{"astId":328,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_subscriptions","offset":0,"slot":"3","type":"t_mapping(t_uint64,t_struct(Subscription)323_storage)"},{"astId":340,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_requests","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(Request)335_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_uint256,t_struct(Request)335_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)","numberOfBytes":"32","value":"t_struct(Request)335_storage"},"t_mapping(t_uint64,t_struct(Subscription)323_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)323_storage"},"t_struct(Request)335_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Request","members":[{"astId":330,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"subId","offset":0,"slot":"0","type":"t_uint64"},{"astId":332,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"callbackGasLimit","offset":8,"slot":"0","type":"t_uint32"},{"astId":334,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"numWords","offset":12,"slot":"0","type":"t_uint32"}],"numberOfBytes":"32"},"t_struct(Subscription)323_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Subscription","members":[{"astId":320,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":322,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"balance","offset":20,"slot":"0","type":"t_uint96"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"createSubscription()":{"notice":"Create a VRF subscription."},"fulfillRandomWords(uint256,address)":{"notice":"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer."},"fundSubscription(uint64,uint96)":{"notice":"fundSubscription allows funding a subscription with an arbitrary amount for testing."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"}},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":828,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_996":{"entryPoint":null,"id":996,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":289,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":415,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":548,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":579,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":589,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":643,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":697,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":751,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":805,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":852,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":899,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":904,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":909,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":914,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":919,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:19","statements":[{"body":{"nodeType":"YulBlock","src":"102:326:19","statements":[{"nodeType":"YulAssignment","src":"112:75:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:19"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:19"},"nodeType":"YulFunctionCall","src":"137:49:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:19"},"nodeType":"YulFunctionCall","src":"121:66:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:19"},"nodeType":"YulFunctionCall","src":"196:21:19"},"nodeType":"YulExpressionStatement","src":"196:21:19"},{"nodeType":"YulVariableDeclaration","src":"226:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:19"},"nodeType":"YulFunctionCall","src":"237:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"293:77:19"},"nodeType":"YulFunctionCall","src":"293:79:19"},"nodeType":"YulExpressionStatement","src":"293:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:19"},"nodeType":"YulFunctionCall","src":"268:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:19"},"nodeType":"YulFunctionCall","src":"265:25:19"},"nodeType":"YulIf","src":"262:112:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"405:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"410:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"415:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"383:21:19"},"nodeType":"YulFunctionCall","src":"383:39:19"},"nodeType":"YulExpressionStatement","src":"383:39:19"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:19","type":""}],"src":"7:421:19"},{"body":{"nodeType":"YulBlock","src":"521:282:19","statements":[{"body":{"nodeType":"YulBlock","src":"570:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"572:77:19"},"nodeType":"YulFunctionCall","src":"572:79:19"},"nodeType":"YulExpressionStatement","src":"572:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"549:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"557:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"545:3:19"},"nodeType":"YulFunctionCall","src":"545:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"564:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"541:3:19"},"nodeType":"YulFunctionCall","src":"541:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"534:6:19"},"nodeType":"YulFunctionCall","src":"534:35:19"},"nodeType":"YulIf","src":"531:122:19"},{"nodeType":"YulVariableDeclaration","src":"662:27:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"682:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"676:5:19"},"nodeType":"YulFunctionCall","src":"676:13:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"666:6:19","type":""}]},{"nodeType":"YulAssignment","src":"698:99:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"770:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"778:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"766:3:19"},"nodeType":"YulFunctionCall","src":"766:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"793:3:19"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"707:58:19"},"nodeType":"YulFunctionCall","src":"707:90:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"698:5:19"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"499:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"507:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"515:5:19","type":""}],"src":"448:355:19"},{"body":{"nodeType":"YulBlock","src":"923:739:19","statements":[{"body":{"nodeType":"YulBlock","src":"969:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"971:77:19"},"nodeType":"YulFunctionCall","src":"971:79:19"},"nodeType":"YulExpressionStatement","src":"971:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"944:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"953:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"940:3:19"},"nodeType":"YulFunctionCall","src":"940:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"965:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"936:3:19"},"nodeType":"YulFunctionCall","src":"936:32:19"},"nodeType":"YulIf","src":"933:119:19"},{"nodeType":"YulBlock","src":"1062:291:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1077:38:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1101:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1112:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1097:3:19"},"nodeType":"YulFunctionCall","src":"1097:17:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1091:5:19"},"nodeType":"YulFunctionCall","src":"1091:24:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1081:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1162:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1164:77:19"},"nodeType":"YulFunctionCall","src":"1164:79:19"},"nodeType":"YulExpressionStatement","src":"1164:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1134:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1142:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1131:2:19"},"nodeType":"YulFunctionCall","src":"1131:30:19"},"nodeType":"YulIf","src":"1128:117:19"},{"nodeType":"YulAssignment","src":"1259:84:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1315:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1326:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:19"},"nodeType":"YulFunctionCall","src":"1311:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1335:7:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1269:41:19"},"nodeType":"YulFunctionCall","src":"1269:74:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1259:6:19"}]}]},{"nodeType":"YulBlock","src":"1363:292:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1378:39:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1413:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1398:3:19"},"nodeType":"YulFunctionCall","src":"1398:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1392:5:19"},"nodeType":"YulFunctionCall","src":"1392:25:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1382:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1464:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1466:77:19"},"nodeType":"YulFunctionCall","src":"1466:79:19"},"nodeType":"YulExpressionStatement","src":"1466:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1436:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1444:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1433:2:19"},"nodeType":"YulFunctionCall","src":"1433:30:19"},"nodeType":"YulIf","src":"1430:117:19"},{"nodeType":"YulAssignment","src":"1561:84:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1617:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1628:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1613:3:19"},"nodeType":"YulFunctionCall","src":"1613:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1637:7:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1571:41:19"},"nodeType":"YulFunctionCall","src":"1571:74:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1561:6:19"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"885:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"896:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"908:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"916:6:19","type":""}],"src":"809:853:19"},{"body":{"nodeType":"YulBlock","src":"1709:88:19","statements":[{"nodeType":"YulAssignment","src":"1719:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1729:18:19"},"nodeType":"YulFunctionCall","src":"1729:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1719:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1778:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"1786:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1758:19:19"},"nodeType":"YulFunctionCall","src":"1758:33:19"},"nodeType":"YulExpressionStatement","src":"1758:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1693:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1702:6:19","type":""}],"src":"1668:129:19"},{"body":{"nodeType":"YulBlock","src":"1843:35:19","statements":[{"nodeType":"YulAssignment","src":"1853:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1869:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1863:5:19"},"nodeType":"YulFunctionCall","src":"1863:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1853:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1836:6:19","type":""}],"src":"1803:75:19"},{"body":{"nodeType":"YulBlock","src":"1951:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"2056:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2058:16:19"},"nodeType":"YulFunctionCall","src":"2058:18:19"},"nodeType":"YulExpressionStatement","src":"2058:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2028:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2036:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2025:2:19"},"nodeType":"YulFunctionCall","src":"2025:30:19"},"nodeType":"YulIf","src":"2022:56:19"},{"nodeType":"YulAssignment","src":"2088:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2118:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2096:21:19"},"nodeType":"YulFunctionCall","src":"2096:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2088:4:19"}]},{"nodeType":"YulAssignment","src":"2162:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2174:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"2180:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:19"},"nodeType":"YulFunctionCall","src":"2170:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2162:4:19"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1935:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1946:4:19","type":""}],"src":"1884:308:19"},{"body":{"nodeType":"YulBlock","src":"2247:258:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2257:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2266:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2261:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2326:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2351:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"2356:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:19"},"nodeType":"YulFunctionCall","src":"2347:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2370:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"2375:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:19"},"nodeType":"YulFunctionCall","src":"2366:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2360:5:19"},"nodeType":"YulFunctionCall","src":"2360:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2340:6:19"},"nodeType":"YulFunctionCall","src":"2340:39:19"},"nodeType":"YulExpressionStatement","src":"2340:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2287:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"2290:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2284:2:19"},"nodeType":"YulFunctionCall","src":"2284:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2298:19:19","statements":[{"nodeType":"YulAssignment","src":"2300:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2309:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"2312:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2305:3:19"},"nodeType":"YulFunctionCall","src":"2305:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2300:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"2280:3:19","statements":[]},"src":"2276:113:19"},{"body":{"nodeType":"YulBlock","src":"2423:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2473:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2478:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:19"},"nodeType":"YulFunctionCall","src":"2469:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"2487:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2462:6:19"},"nodeType":"YulFunctionCall","src":"2462:27:19"},"nodeType":"YulExpressionStatement","src":"2462:27:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2404:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"2407:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2401:2:19"},"nodeType":"YulFunctionCall","src":"2401:13:19"},"nodeType":"YulIf","src":"2398:101:19"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2229:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2234:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"2239:6:19","type":""}],"src":"2198:307:19"},{"body":{"nodeType":"YulBlock","src":"2562:269:19","statements":[{"nodeType":"YulAssignment","src":"2572:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2586:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"2592:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2582:3:19"},"nodeType":"YulFunctionCall","src":"2582:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2572:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"2603:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2633:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2629:3:19"},"nodeType":"YulFunctionCall","src":"2629:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2607:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2680:51:19","statements":[{"nodeType":"YulAssignment","src":"2694:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2708:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2716:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2704:3:19"},"nodeType":"YulFunctionCall","src":"2704:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2694:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2660:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2653:6:19"},"nodeType":"YulFunctionCall","src":"2653:26:19"},"nodeType":"YulIf","src":"2650:81:19"},{"body":{"nodeType":"YulBlock","src":"2783:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2797:16:19"},"nodeType":"YulFunctionCall","src":"2797:18:19"},"nodeType":"YulExpressionStatement","src":"2797:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2747:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2770:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2778:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2767:2:19"},"nodeType":"YulFunctionCall","src":"2767:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2744:2:19"},"nodeType":"YulFunctionCall","src":"2744:38:19"},"nodeType":"YulIf","src":"2741:84:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2546:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2555:6:19","type":""}],"src":"2511:320:19"},{"body":{"nodeType":"YulBlock","src":"2880:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2890:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2912:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2942:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2920:21:19"},"nodeType":"YulFunctionCall","src":"2920:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2908:3:19"},"nodeType":"YulFunctionCall","src":"2908:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2894:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"3059:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3061:16:19"},"nodeType":"YulFunctionCall","src":"3061:18:19"},"nodeType":"YulExpressionStatement","src":"3061:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3002:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"3014:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:19"},"nodeType":"YulFunctionCall","src":"2999:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3038:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3050:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3035:2:19"},"nodeType":"YulFunctionCall","src":"3035:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2996:2:19"},"nodeType":"YulFunctionCall","src":"2996:62:19"},"nodeType":"YulIf","src":"2993:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3097:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3101:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3090:6:19"},"nodeType":"YulFunctionCall","src":"3090:22:19"},"nodeType":"YulExpressionStatement","src":"3090:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2866:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"2874:4:19","type":""}],"src":"2837:281:19"},{"body":{"nodeType":"YulBlock","src":"3152:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3169:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3172:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3162:6:19"},"nodeType":"YulFunctionCall","src":"3162:88:19"},"nodeType":"YulExpressionStatement","src":"3162:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3266:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3269:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3259:6:19"},"nodeType":"YulFunctionCall","src":"3259:15:19"},"nodeType":"YulExpressionStatement","src":"3259:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:19"},"nodeType":"YulFunctionCall","src":"3283:15:19"},"nodeType":"YulExpressionStatement","src":"3283:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3124:180:19"},{"body":{"nodeType":"YulBlock","src":"3338:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3355:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3358:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:19"},"nodeType":"YulFunctionCall","src":"3348:88:19"},"nodeType":"YulExpressionStatement","src":"3348:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3452:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3455:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:19"},"nodeType":"YulFunctionCall","src":"3445:15:19"},"nodeType":"YulExpressionStatement","src":"3445:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3476:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3479:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3469:6:19"},"nodeType":"YulFunctionCall","src":"3469:15:19"},"nodeType":"YulExpressionStatement","src":"3469:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3310:180:19"},{"body":{"nodeType":"YulBlock","src":"3585:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3605:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3595:6:19"},"nodeType":"YulFunctionCall","src":"3595:12:19"},"nodeType":"YulExpressionStatement","src":"3595:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3496:117:19"},{"body":{"nodeType":"YulBlock","src":"3708:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3725:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3728:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3718:6:19"},"nodeType":"YulFunctionCall","src":"3718:12:19"},"nodeType":"YulExpressionStatement","src":"3718:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3619:117:19"},{"body":{"nodeType":"YulBlock","src":"3831:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3848:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3841:6:19"},"nodeType":"YulFunctionCall","src":"3841:12:19"},"nodeType":"YulExpressionStatement","src":"3841:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3742:117:19"},{"body":{"nodeType":"YulBlock","src":"3954:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3971:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3974:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3964:6:19"},"nodeType":"YulFunctionCall","src":"3964:12:19"},"nodeType":"YulExpressionStatement","src":"3964:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3865:117:19"},{"body":{"nodeType":"YulBlock","src":"4036:54:19","statements":[{"nodeType":"YulAssignment","src":"4046:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4064:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4071:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4060:3:19"},"nodeType":"YulFunctionCall","src":"4060:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4076:3:19"},"nodeType":"YulFunctionCall","src":"4076:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4056:3:19"},"nodeType":"YulFunctionCall","src":"4056:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4046:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4019:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4029:6:19","type":""}],"src":"3988:102:19"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620025013803806200250183398181016040528101906200003791906200019f565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61214980620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611743565b6102bc565b6040516100fb9190611a60565b60405180910390f35b61010c61039e565b6040516101199190611a7b565b60405180910390f35b61013c6004803603810190610137919061179d565b610430565b60405161014991906119f9565b60405180910390f35b61016c60048036038101906101679190611703565b610476565b005b610188600480360381019061018391906115ed565b61058e565b005b6101a4600480360381019061019f91906115ed565b6105ee565b005b6101c060048036038101906101bb919061179d565b61060e565b6040516101cd91906119f9565b60405180910390f35b6101f060048036038101906101eb9190611580565b610695565b6040516101fd9190611bbd565b60405180910390f35b61020e61074d565b60405161021b9190611a7b565b60405180910390f35b61023e600480360381019061023991906116c3565b6107df565b005b61025a60048036038101906102559190611640565b6107f5565b005b6102766004803603810190610271919061179d565b610857565b6040516102839190611a7b565b60405180910390f35b6102a660048036038101906102a191906115ad565b6108bf565b6040516102b39190611a60565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611d27565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611d27565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611b7d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611b9d565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611a9d565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611b5d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611b3d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611d27565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611d27565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611a9d565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a79291906119d5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611b5d565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611add565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611afd565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611add565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e538383836001611194565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611b1d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff59190611a60565b60405180910390a3505050565b61100d848484610b5e565b6110198484848461119a565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611abd565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611331565b01905060008167ffffffffffffffff8111156110a3576110a2611de8565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b611d8a565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111bb8473ffffffffffffffffffffffffffffffffffffffff16611484565b15611324578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111e4610a08565b8786866040518563ffffffff1660e01b81526004016112069493929190611a14565b602060405180830381600087803b15801561122057600080fd5b505af192505050801561125157506040513d601f19601f8201168201806040525081019061124e9190611770565b60015b6112d4573d8060008114611281576040519150601f19603f3d011682016040523d82523d6000602084013e611286565b606091505b506000815114156112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c390611abd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611329565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061138f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161138557611384611d8a565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113cc576d04ee2d6d415b85acef810000000083816113c2576113c1611d8a565b5b0492506020810190505b662386f26fc1000083106113fb57662386f26fc1000083816113f1576113f0611d8a565b5b0492506010810190505b6305f5e1008310611424576305f5e100838161141a57611419611d8a565b5b0492506008810190505b612710831061144957612710838161143f5761143e611d8a565b5b0492506004810190505b6064831061146c576064838161146257611461611d8a565b5b0492506002810190505b600a831061147b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006114ba6114b584611bfd565b611bd8565b9050828152602081018484840111156114d6576114d5611e1c565b5b6114e1848285611ce5565b509392505050565b6000813590506114f8816120b7565b92915050565b60008135905061150d816120ce565b92915050565b600081359050611522816120e5565b92915050565b600081519050611537816120e5565b92915050565b600082601f83011261155257611551611e17565b5b81356115628482602086016114a7565b91505092915050565b60008135905061157a816120fc565b92915050565b60006020828403121561159657611595611e26565b5b60006115a4848285016114e9565b91505092915050565b600080604083850312156115c4576115c3611e26565b5b60006115d2858286016114e9565b92505060206115e3858286016114e9565b9150509250929050565b60008060006060848603121561160657611605611e26565b5b6000611614868287016114e9565b9350506020611625868287016114e9565b92505060406116368682870161156b565b9150509250925092565b6000806000806080858703121561165a57611659611e26565b5b6000611668878288016114e9565b9450506020611679878288016114e9565b935050604061168a8782880161156b565b925050606085013567ffffffffffffffff8111156116ab576116aa611e21565b5b6116b78782880161153d565b91505092959194509250565b600080604083850312156116da576116d9611e26565b5b60006116e8858286016114e9565b92505060206116f9858286016114fe565b9150509250929050565b6000806040838503121561171a57611719611e26565b5b6000611728858286016114e9565b92505060206117398582860161156b565b9150509250929050565b60006020828403121561175957611758611e26565b5b600061176784828501611513565b91505092915050565b60006020828403121561178657611785611e26565b5b600061179484828501611528565b91505092915050565b6000602082840312156117b3576117b2611e26565b5b60006117c18482850161156b565b91505092915050565b6117d381611c71565b82525050565b6117e281611c83565b82525050565b60006117f382611c2e565b6117fd8185611c44565b935061180d818560208601611cf4565b61181681611e2b565b840191505092915050565b600061182c82611c39565b6118368185611c55565b9350611846818560208601611cf4565b61184f81611e2b565b840191505092915050565b600061186582611c39565b61186f8185611c66565b935061187f818560208601611cf4565b80840191505092915050565b6000611898602d83611c55565b91506118a382611e3c565b604082019050919050565b60006118bb603283611c55565b91506118c682611e8b565b604082019050919050565b60006118de602583611c55565b91506118e982611eda565b604082019050919050565b6000611901602483611c55565b915061190c82611f29565b604082019050919050565b6000611924601983611c55565b915061192f82611f78565b602082019050919050565b6000611947602983611c55565b915061195282611fa1565b604082019050919050565b600061196a601883611c55565b915061197582611ff0565b602082019050919050565b600061198d602183611c55565b915061199882612019565b604082019050919050565b60006119b0603d83611c55565b91506119bb82612068565b604082019050919050565b6119cf81611cdb565b82525050565b60006119e1828561185a565b91506119ed828461185a565b91508190509392505050565b6000602082019050611a0e60008301846117ca565b92915050565b6000608082019050611a2960008301876117ca565b611a3660208301866117ca565b611a4360408301856119c6565b8181036060830152611a5581846117e8565b905095945050505050565b6000602082019050611a7560008301846117d9565b92915050565b60006020820190508181036000830152611a958184611821565b905092915050565b60006020820190508181036000830152611ab68161188b565b9050919050565b60006020820190508181036000830152611ad6816118ae565b9050919050565b60006020820190508181036000830152611af6816118d1565b9050919050565b60006020820190508181036000830152611b16816118f4565b9050919050565b60006020820190508181036000830152611b3681611917565b9050919050565b60006020820190508181036000830152611b568161193a565b9050919050565b60006020820190508181036000830152611b768161195d565b9050919050565b60006020820190508181036000830152611b9681611980565b9050919050565b60006020820190508181036000830152611bb6816119a3565b9050919050565b6000602082019050611bd260008301846119c6565b92915050565b6000611be2611bf3565b9050611bee8282611d59565b919050565b6000604051905090565b600067ffffffffffffffff821115611c1857611c17611de8565b5b611c2182611e2b565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611c7c82611cbb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611d12578082015181840152602081019050611cf7565b83811115611d21576000848401525b50505050565b60006002820490506001821680611d3f57607f821691505b60208210811415611d5357611d52611db9565b5b50919050565b611d6282611e2b565b810181811067ffffffffffffffff82111715611d8157611d80611de8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6120c081611c71565b81146120cb57600080fd5b50565b6120d781611c83565b81146120e257600080fd5b50565b6120ee81611c8f565b81146120f957600080fd5b50565b61210581611cdb565b811461211057600080fd5b5056fea26469706673582212207ea616c3cfcb7ae2793ccdc4e12c0bdfcb8d51636bec2dfb47d1b4570f7e529464736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2501 CODESIZE SUB DUP1 PUSH3 0x2501 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2149 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1A9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1A9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1194 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1331 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1484 JUMP JUMPDEST ISZERO PUSH2 0x1324 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11E4 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1206 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1251 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12D4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C3 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x138F JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13CC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13C2 JUMPI PUSH2 0x13C1 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13FB JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1424 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1449 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x146C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1462 JUMPI PUSH2 0x1461 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x147B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BA PUSH2 0x14B5 DUP5 PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14D6 JUMPI PUSH2 0x14D5 PUSH2 0x1E1C JUMP JUMPDEST JUMPDEST PUSH2 0x14E1 DUP5 DUP3 DUP6 PUSH2 0x1CE5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F8 DUP2 PUSH2 0x20B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150D DUP2 PUSH2 0x20CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1522 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1537 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1552 JUMPI PUSH2 0x1551 PUSH2 0x1E17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1562 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x157A DUP2 PUSH2 0x20FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1596 JUMPI PUSH2 0x1595 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A4 DUP5 DUP3 DUP6 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15C3 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15D2 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15E3 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1605 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1614 DUP7 DUP3 DUP8 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1625 DUP7 DUP3 DUP8 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1636 DUP7 DUP3 DUP8 ADD PUSH2 0x156B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x165A JUMPI PUSH2 0x1659 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1668 DUP8 DUP3 DUP9 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1679 DUP8 DUP3 DUP9 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x168A DUP8 DUP3 DUP9 ADD PUSH2 0x156B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16AB JUMPI PUSH2 0x16AA PUSH2 0x1E21 JUMP JUMPDEST JUMPDEST PUSH2 0x16B7 DUP8 DUP3 DUP9 ADD PUSH2 0x153D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16E8 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16F9 DUP6 DUP3 DUP7 ADD PUSH2 0x14FE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171A JUMPI PUSH2 0x1719 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1728 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1739 DUP6 DUP3 DUP7 ADD PUSH2 0x156B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1759 JUMPI PUSH2 0x1758 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1767 DUP5 DUP3 DUP6 ADD PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1786 JUMPI PUSH2 0x1785 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1794 DUP5 DUP3 DUP6 ADD PUSH2 0x1528 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x17B2 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C1 DUP5 DUP3 DUP6 ADD PUSH2 0x156B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17D3 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x1C83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F3 DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x17FD DUP2 DUP6 PUSH2 0x1C44 JUMP JUMPDEST SWAP4 POP PUSH2 0x180D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x1816 DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP3 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x1836 DUP2 DUP6 PUSH2 0x1C55 JUMP JUMPDEST SWAP4 POP PUSH2 0x1846 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x184F DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1865 DUP3 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x186F DUP2 DUP6 PUSH2 0x1C66 JUMP JUMPDEST SWAP4 POP PUSH2 0x187F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1898 PUSH1 0x2D DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A3 DUP3 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BB PUSH1 0x32 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C6 DUP3 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DE PUSH1 0x25 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E9 DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1901 PUSH1 0x24 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x190C DUP3 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1924 PUSH1 0x19 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x192F DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1947 PUSH1 0x29 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1952 DUP3 PUSH2 0x1FA1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196A PUSH1 0x18 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1975 DUP3 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198D PUSH1 0x21 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1998 DUP3 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B0 PUSH1 0x3D DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BB DUP3 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CF DUP2 PUSH2 0x1CDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 DUP3 DUP6 PUSH2 0x185A JUMP JUMPDEST SWAP2 POP PUSH2 0x19ED DUP3 DUP5 PUSH2 0x185A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A29 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x1A36 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x1A43 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19C6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1A55 DUP2 DUP5 PUSH2 0x17E8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A95 DUP2 DUP5 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AB6 DUP2 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AD6 DUP2 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AF6 DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B16 DUP2 PUSH2 0x18F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B36 DUP2 PUSH2 0x1917 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B56 DUP2 PUSH2 0x193A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B76 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B96 DUP2 PUSH2 0x1980 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB6 DUP2 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE2 PUSH2 0x1BF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BEE DUP3 DUP3 PUSH2 0x1D59 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C18 JUMPI PUSH2 0x1C17 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST PUSH2 0x1C21 DUP3 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7C DUP3 PUSH2 0x1CBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D12 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CF7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D21 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D3F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1D53 JUMPI PUSH2 0x1D52 PUSH2 0x1DB9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D62 DUP3 PUSH2 0x1E2B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D81 JUMPI PUSH2 0x1D80 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x20C0 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP2 EQ PUSH2 0x20CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20D7 DUP2 PUSH2 0x1C83 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20EE DUP2 PUSH2 0x1C8F JUMP JUMPDEST DUP2 EQ PUSH2 0x20F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x1CDB JUMP JUMPDEST DUP2 EQ PUSH2 0x2110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xA616C3CFCB7AE2793CCDC4E12C0BDFCB8D51636BEC2DFB47D1B4570F7E5294 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"628:16679:5:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:16679;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:19:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;628:16679:5:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1844":{"entryPoint":4500,"id":1844,"parameterSlots":4,"returnSlots":0},"@_approve_1710":{"entryPoint":2576,"id":1710,"parameterSlots":2,"returnSlots":0},"@_baseURI_1147":{"entryPoint":4190,"id":1147,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1831":{"entryPoint":4494,"id":1831,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_1818":{"entryPoint":4506,"id":1818,"parameterSlots":4,"returnSlots":1},"@_exists_1379":{"entryPoint":4429,"id":1379,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1413":{"entryPoint":2761,"id":1413,"parameterSlots":2,"returnSlots":1},"@_msgSender_2488":{"entryPoint":2568,"id":2488,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1361":{"entryPoint":3672,"id":1361,"parameterSlots":1,"returnSlots":1},"@_requireMinted_1756":{"entryPoint":2493,"id":1756,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1348":{"entryPoint":4098,"id":1348,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1742":{"entryPoint":3733,"id":1742,"parameterSlots":3,"returnSlots":0},"@_transfer_1686":{"entryPoint":2910,"id":1686,"parameterSlots":3,"returnSlots":0},"@approve_1190":{"entryPoint":1142,"id":1190,"parameterSlots":2,"returnSlots":0},"@balanceOf_1051":{"entryPoint":1685,"id":1051,"parameterSlots":1,"returnSlots":1},"@getApproved_1208":{"entryPoint":1072,"id":1208,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1243":{"entryPoint":2239,"id":1243,"parameterSlots":2,"returnSlots":1},"@isContract_2164":{"entryPoint":5252,"id":2164,"parameterSlots":1,"returnSlots":1},"@log10_3411":{"entryPoint":4913,"id":3411,"parameterSlots":1,"returnSlots":1},"@name_1089":{"entryPoint":926,"id":1089,"parameterSlots":0,"returnSlots":1},"@ownerOf_1079":{"entryPoint":1550,"id":1079,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1289":{"entryPoint":1518,"id":1289,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1319":{"entryPoint":2037,"id":1319,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1225":{"entryPoint":2015,"id":1225,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1027":{"entryPoint":700,"id":1027,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2696":{"entryPoint":2387,"id":2696,"parameterSlots":1,"returnSlots":1},"@symbol_1099":{"entryPoint":1869,"id":1099,"parameterSlots":0,"returnSlots":1},"@toString_2556":{"entryPoint":4213,"id":2556,"parameterSlots":1,"returnSlots":1},"@tokenURI_1138":{"entryPoint":2135,"id":1138,"parameterSlots":1,"returnSlots":1},"@transferFrom_1270":{"entryPoint":1422,"id":1270,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5287,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5395,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":5416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":5437,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5549,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5613,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5696,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5827,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5891,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6000,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6045,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6090,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6105,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6234,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":6283,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":6318,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":6353,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":6388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":6423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":6458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":6493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6528,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":6563,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6598,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6613,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6649,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6676,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6752,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6813,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6845,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6909,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6941,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6973,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7005,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7069,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7101,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7128,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7155,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7165,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7214,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7225,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":7236,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7253,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7270,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7281,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7299,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7311,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7355,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7387,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":7397,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":7412,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7463,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7513,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x12":{"entryPoint":7562,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7609,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7656,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7703,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7708,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7713,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7718,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7723,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7740,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":7819,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7898,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":7977,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8056,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":8097,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":8176,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":8217,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":8296,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8375,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8398,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":8421,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8444,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23167:19","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:19","statements":[{"nodeType":"YulAssignment","src":"100:74:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:19"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:19"},"nodeType":"YulFunctionCall","src":"125:48:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:19"},"nodeType":"YulFunctionCall","src":"109:65:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:19"},"nodeType":"YulFunctionCall","src":"183:21:19"},"nodeType":"YulExpressionStatement","src":"183:21:19"},{"nodeType":"YulVariableDeclaration","src":"213:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:19"},"nodeType":"YulFunctionCall","src":"224:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:19"},"nodeType":"YulFunctionCall","src":"280:79:19"},"nodeType":"YulExpressionStatement","src":"280:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:19"},"nodeType":"YulFunctionCall","src":"255:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:19"},"nodeType":"YulFunctionCall","src":"252:25:19"},"nodeType":"YulIf","src":"249:112:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:19"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:19"},"nodeType":"YulFunctionCall","src":"370:41:19"},"nodeType":"YulExpressionStatement","src":"370:41:19"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:19","type":""}],"src":"7:410:19"},{"body":{"nodeType":"YulBlock","src":"475:87:19","statements":[{"nodeType":"YulAssignment","src":"485:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:19"},"nodeType":"YulFunctionCall","src":"494:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:19"},"nodeType":"YulFunctionCall","src":"523:33:19"},"nodeType":"YulExpressionStatement","src":"523:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:19","type":""}],"src":"423:139:19"},{"body":{"nodeType":"YulBlock","src":"617:84:19","statements":[{"nodeType":"YulAssignment","src":"627:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"649:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"636:12:19"},"nodeType":"YulFunctionCall","src":"636:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"627:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"689:5:19"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"665:23:19"},"nodeType":"YulFunctionCall","src":"665:30:19"},"nodeType":"YulExpressionStatement","src":"665:30:19"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"603:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"611:5:19","type":""}],"src":"568:133:19"},{"body":{"nodeType":"YulBlock","src":"758:86:19","statements":[{"nodeType":"YulAssignment","src":"768:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"790:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"777:12:19"},"nodeType":"YulFunctionCall","src":"777:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"768:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"832:5:19"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"806:25:19"},"nodeType":"YulFunctionCall","src":"806:32:19"},"nodeType":"YulExpressionStatement","src":"806:32:19"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"736:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"744:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"752:5:19","type":""}],"src":"707:137:19"},{"body":{"nodeType":"YulBlock","src":"912:79:19","statements":[{"nodeType":"YulAssignment","src":"922:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"937:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"931:5:19"},"nodeType":"YulFunctionCall","src":"931:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:19"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"953:25:19"},"nodeType":"YulFunctionCall","src":"953:32:19"},"nodeType":"YulExpressionStatement","src":"953:32:19"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"890:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"898:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"906:5:19","type":""}],"src":"850:141:19"},{"body":{"nodeType":"YulBlock","src":"1071:277:19","statements":[{"body":{"nodeType":"YulBlock","src":"1120:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1122:77:19"},"nodeType":"YulFunctionCall","src":"1122:79:19"},"nodeType":"YulExpressionStatement","src":"1122:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1099:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:19"},"nodeType":"YulFunctionCall","src":"1095:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"1114:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:19"},"nodeType":"YulFunctionCall","src":"1091:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1084:6:19"},"nodeType":"YulFunctionCall","src":"1084:35:19"},"nodeType":"YulIf","src":"1081:122:19"},{"nodeType":"YulVariableDeclaration","src":"1212:34:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1239:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1226:12:19"},"nodeType":"YulFunctionCall","src":"1226:20:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1216:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1255:87:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1315:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1323:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:19"},"nodeType":"YulFunctionCall","src":"1311:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"1330:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"1338:3:19"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1264:46:19"},"nodeType":"YulFunctionCall","src":"1264:78:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1255:5:19"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1049:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1057:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1065:5:19","type":""}],"src":"1010:338:19"},{"body":{"nodeType":"YulBlock","src":"1406:87:19","statements":[{"nodeType":"YulAssignment","src":"1416:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1438:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1425:12:19"},"nodeType":"YulFunctionCall","src":"1425:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1416:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1481:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1454:26:19"},"nodeType":"YulFunctionCall","src":"1454:33:19"},"nodeType":"YulExpressionStatement","src":"1454:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1384:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1392:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:19","type":""}],"src":"1354:139:19"},{"body":{"nodeType":"YulBlock","src":"1565:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"1611:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1613:77:19"},"nodeType":"YulFunctionCall","src":"1613:79:19"},"nodeType":"YulExpressionStatement","src":"1613:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1586:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1582:3:19"},"nodeType":"YulFunctionCall","src":"1582:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1607:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1578:3:19"},"nodeType":"YulFunctionCall","src":"1578:32:19"},"nodeType":"YulIf","src":"1575:119:19"},{"nodeType":"YulBlock","src":"1704:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1719:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1733:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1723:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1748:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1794:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:19"},"nodeType":"YulFunctionCall","src":"1779:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1803:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1758:20:19"},"nodeType":"YulFunctionCall","src":"1758:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1748:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1535:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1546:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1558:6:19","type":""}],"src":"1499:329:19"},{"body":{"nodeType":"YulBlock","src":"1917:391:19","statements":[{"body":{"nodeType":"YulBlock","src":"1963:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1965:77:19"},"nodeType":"YulFunctionCall","src":"1965:79:19"},"nodeType":"YulExpressionStatement","src":"1965:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1938:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1934:3:19"},"nodeType":"YulFunctionCall","src":"1934:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1959:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1930:3:19"},"nodeType":"YulFunctionCall","src":"1930:32:19"},"nodeType":"YulIf","src":"1927:119:19"},{"nodeType":"YulBlock","src":"2056:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2071:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2085:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2075:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2100:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2146:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2131:3:19"},"nodeType":"YulFunctionCall","src":"2131:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2155:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2110:20:19"},"nodeType":"YulFunctionCall","src":"2110:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2100:6:19"}]}]},{"nodeType":"YulBlock","src":"2183:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2198:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2212:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2202:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2228:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2274:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:19"},"nodeType":"YulFunctionCall","src":"2259:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2283:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2238:20:19"},"nodeType":"YulFunctionCall","src":"2238:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2228:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1879:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1890:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1902:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1910:6:19","type":""}],"src":"1834:474:19"},{"body":{"nodeType":"YulBlock","src":"2414:519:19","statements":[{"body":{"nodeType":"YulBlock","src":"2460:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2462:77:19"},"nodeType":"YulFunctionCall","src":"2462:79:19"},"nodeType":"YulExpressionStatement","src":"2462:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2435:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2444:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2431:3:19"},"nodeType":"YulFunctionCall","src":"2431:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2456:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2427:3:19"},"nodeType":"YulFunctionCall","src":"2427:32:19"},"nodeType":"YulIf","src":"2424:119:19"},{"nodeType":"YulBlock","src":"2553:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2568:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2582:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2572:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2597:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2632:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2643:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2628:3:19"},"nodeType":"YulFunctionCall","src":"2628:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2652:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2607:20:19"},"nodeType":"YulFunctionCall","src":"2607:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:19"}]}]},{"nodeType":"YulBlock","src":"2680:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2709:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2725:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2771:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2756:3:19"},"nodeType":"YulFunctionCall","src":"2756:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2780:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2735:20:19"},"nodeType":"YulFunctionCall","src":"2735:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2725:6:19"}]}]},{"nodeType":"YulBlock","src":"2808:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2823:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2837:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2827:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:19"},"nodeType":"YulFunctionCall","src":"2884:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2863:20:19"},"nodeType":"YulFunctionCall","src":"2863:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2853:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2368:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2379:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2391:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2399:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2407:6:19","type":""}],"src":"2314:619:19"},{"body":{"nodeType":"YulBlock","src":"3065:817:19","statements":[{"body":{"nodeType":"YulBlock","src":"3112:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3114:77:19"},"nodeType":"YulFunctionCall","src":"3114:79:19"},"nodeType":"YulExpressionStatement","src":"3114:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3086:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3095:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3082:3:19"},"nodeType":"YulFunctionCall","src":"3082:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3107:3:19","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3078:3:19"},"nodeType":"YulFunctionCall","src":"3078:33:19"},"nodeType":"YulIf","src":"3075:120:19"},{"nodeType":"YulBlock","src":"3205:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3220:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3234:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3224:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3249:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3295:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:19"},"nodeType":"YulFunctionCall","src":"3280:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3304:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3259:20:19"},"nodeType":"YulFunctionCall","src":"3259:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3249:6:19"}]}]},{"nodeType":"YulBlock","src":"3332:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3361:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:19"},"nodeType":"YulFunctionCall","src":"3408:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3387:20:19"},"nodeType":"YulFunctionCall","src":"3387:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3377:6:19"}]}]},{"nodeType":"YulBlock","src":"3460:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3475:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3479:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3505:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3551:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:19"},"nodeType":"YulFunctionCall","src":"3536:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3560:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3515:20:19"},"nodeType":"YulFunctionCall","src":"3515:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3505:6:19"}]}]},{"nodeType":"YulBlock","src":"3588:287:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3603:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3634:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3645:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3630:3:19"},"nodeType":"YulFunctionCall","src":"3630:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3617:12:19"},"nodeType":"YulFunctionCall","src":"3617:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3607:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"3696:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3698:77:19"},"nodeType":"YulFunctionCall","src":"3698:79:19"},"nodeType":"YulExpressionStatement","src":"3698:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3668:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3676:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3665:2:19"},"nodeType":"YulFunctionCall","src":"3665:30:19"},"nodeType":"YulIf","src":"3662:117:19"},{"nodeType":"YulAssignment","src":"3793:72:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:19"},"nodeType":"YulFunctionCall","src":"3833:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3857:7:19"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3803:29:19"},"nodeType":"YulFunctionCall","src":"3803:62:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3793:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3011:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3022:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3034:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3042:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3050:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3058:6:19","type":""}],"src":"2939:943:19"},{"body":{"nodeType":"YulBlock","src":"3968:388:19","statements":[{"body":{"nodeType":"YulBlock","src":"4014:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4016:77:19"},"nodeType":"YulFunctionCall","src":"4016:79:19"},"nodeType":"YulExpressionStatement","src":"4016:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3989:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3985:3:19"},"nodeType":"YulFunctionCall","src":"3985:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4010:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3981:3:19"},"nodeType":"YulFunctionCall","src":"3981:32:19"},"nodeType":"YulIf","src":"3978:119:19"},{"nodeType":"YulBlock","src":"4107:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4122:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4136:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4126:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4151:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4186:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4197:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4182:3:19"},"nodeType":"YulFunctionCall","src":"4182:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4206:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4161:20:19"},"nodeType":"YulFunctionCall","src":"4161:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4151:6:19"}]}]},{"nodeType":"YulBlock","src":"4234:115:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4249:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4263:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4253:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4279:60:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4322:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:19"},"nodeType":"YulFunctionCall","src":"4307:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4331:7:19"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4289:17:19"},"nodeType":"YulFunctionCall","src":"4289:50:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4279:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3941:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3953:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3961:6:19","type":""}],"src":"3888:468:19"},{"body":{"nodeType":"YulBlock","src":"4445:391:19","statements":[{"body":{"nodeType":"YulBlock","src":"4491:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4493:77:19"},"nodeType":"YulFunctionCall","src":"4493:79:19"},"nodeType":"YulExpressionStatement","src":"4493:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4466:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4462:3:19"},"nodeType":"YulFunctionCall","src":"4462:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4487:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4458:3:19"},"nodeType":"YulFunctionCall","src":"4458:32:19"},"nodeType":"YulIf","src":"4455:119:19"},{"nodeType":"YulBlock","src":"4584:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4599:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4613:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4603:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4628:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4663:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4674:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:19"},"nodeType":"YulFunctionCall","src":"4659:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4683:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4638:20:19"},"nodeType":"YulFunctionCall","src":"4638:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4628:6:19"}]}]},{"nodeType":"YulBlock","src":"4711:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4726:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4740:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4730:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4756:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4802:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:19"},"nodeType":"YulFunctionCall","src":"4787:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4811:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4766:20:19"},"nodeType":"YulFunctionCall","src":"4766:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4756:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4438:6:19","type":""}],"src":"4362:474:19"},{"body":{"nodeType":"YulBlock","src":"4907:262:19","statements":[{"body":{"nodeType":"YulBlock","src":"4953:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4955:77:19"},"nodeType":"YulFunctionCall","src":"4955:79:19"},"nodeType":"YulExpressionStatement","src":"4955:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4928:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4937:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4924:3:19"},"nodeType":"YulFunctionCall","src":"4924:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4920:3:19"},"nodeType":"YulFunctionCall","src":"4920:32:19"},"nodeType":"YulIf","src":"4917:119:19"},{"nodeType":"YulBlock","src":"5046:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5061:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5075:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5065:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5090:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5135:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:19"},"nodeType":"YulFunctionCall","src":"5120:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5144:7:19"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5100:19:19"},"nodeType":"YulFunctionCall","src":"5100:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5090:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4877:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4888:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4900:6:19","type":""}],"src":"4842:327:19"},{"body":{"nodeType":"YulBlock","src":"5251:273:19","statements":[{"body":{"nodeType":"YulBlock","src":"5297:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5299:77:19"},"nodeType":"YulFunctionCall","src":"5299:79:19"},"nodeType":"YulExpressionStatement","src":"5299:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5272:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5268:3:19"},"nodeType":"YulFunctionCall","src":"5268:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5264:3:19"},"nodeType":"YulFunctionCall","src":"5264:32:19"},"nodeType":"YulIf","src":"5261:119:19"},{"nodeType":"YulBlock","src":"5390:127:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5405:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5419:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5409:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5434:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5479:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5490:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5475:3:19"},"nodeType":"YulFunctionCall","src":"5475:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5499:7:19"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"5444:30:19"},"nodeType":"YulFunctionCall","src":"5444:63:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5434:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5221:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5232:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5244:6:19","type":""}],"src":"5175:349:19"},{"body":{"nodeType":"YulBlock","src":"5596:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"5642:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5644:77:19"},"nodeType":"YulFunctionCall","src":"5644:79:19"},"nodeType":"YulExpressionStatement","src":"5644:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5617:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5613:3:19"},"nodeType":"YulFunctionCall","src":"5613:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5609:3:19"},"nodeType":"YulFunctionCall","src":"5609:32:19"},"nodeType":"YulIf","src":"5606:119:19"},{"nodeType":"YulBlock","src":"5735:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5750:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5764:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5754:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5779:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5814:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5825:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5810:3:19"},"nodeType":"YulFunctionCall","src":"5810:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5834:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5789:20:19"},"nodeType":"YulFunctionCall","src":"5789:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5779:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5566:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5577:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5589:6:19","type":""}],"src":"5530:329:19"},{"body":{"nodeType":"YulBlock","src":"5930:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5947:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5970:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5952:17:19"},"nodeType":"YulFunctionCall","src":"5952:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5940:6:19"},"nodeType":"YulFunctionCall","src":"5940:37:19"},"nodeType":"YulExpressionStatement","src":"5940:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5918:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5925:3:19","type":""}],"src":"5865:118:19"},{"body":{"nodeType":"YulBlock","src":"6048:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6065:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6085:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6070:14:19"},"nodeType":"YulFunctionCall","src":"6070:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:19"},"nodeType":"YulFunctionCall","src":"6058:34:19"},"nodeType":"YulExpressionStatement","src":"6058:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6036:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6043:3:19","type":""}],"src":"5989:109:19"},{"body":{"nodeType":"YulBlock","src":"6194:270:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6204:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6250:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6218:31:19"},"nodeType":"YulFunctionCall","src":"6218:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6208:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6265:77:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6330:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6335:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6272:57:19"},"nodeType":"YulFunctionCall","src":"6272:70:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6265:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6377:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6384:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:19"},"nodeType":"YulFunctionCall","src":"6373:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"6391:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6396:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6351:21:19"},"nodeType":"YulFunctionCall","src":"6351:52:19"},"nodeType":"YulExpressionStatement","src":"6351:52:19"},{"nodeType":"YulAssignment","src":"6412:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6423:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6450:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6428:21:19"},"nodeType":"YulFunctionCall","src":"6428:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:19"},"nodeType":"YulFunctionCall","src":"6419:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6412:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6182:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6190:3:19","type":""}],"src":"6104:360:19"},{"body":{"nodeType":"YulBlock","src":"6562:272:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6572:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6619:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6586:32:19"},"nodeType":"YulFunctionCall","src":"6586:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6576:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6634:78:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6700:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6705:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6641:58:19"},"nodeType":"YulFunctionCall","src":"6641:71:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6634:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6747:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6754:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:19"},"nodeType":"YulFunctionCall","src":"6743:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"6761:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6766:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6721:21:19"},"nodeType":"YulFunctionCall","src":"6721:52:19"},"nodeType":"YulExpressionStatement","src":"6721:52:19"},{"nodeType":"YulAssignment","src":"6782:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6793:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6820:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6798:21:19"},"nodeType":"YulFunctionCall","src":"6798:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6789:3:19"},"nodeType":"YulFunctionCall","src":"6789:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6782:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6543:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6550:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6558:3:19","type":""}],"src":"6470:364:19"},{"body":{"nodeType":"YulBlock","src":"6950:267:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6960:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7007:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6974:32:19"},"nodeType":"YulFunctionCall","src":"6974:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6964:6:19","type":""}]},{"nodeType":"YulAssignment","src":"7022:96:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7106:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"7111:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7029:76:19"},"nodeType":"YulFunctionCall","src":"7029:89:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7022:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7153:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7160:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7149:3:19"},"nodeType":"YulFunctionCall","src":"7149:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"7167:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"7172:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7127:21:19"},"nodeType":"YulFunctionCall","src":"7127:52:19"},"nodeType":"YulExpressionStatement","src":"7127:52:19"},{"nodeType":"YulAssignment","src":"7188:23:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7199:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"7204:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7195:3:19"},"nodeType":"YulFunctionCall","src":"7195:16:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7188:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6931:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6938:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6946:3:19","type":""}],"src":"6840:377:19"},{"body":{"nodeType":"YulBlock","src":"7369:220:19","statements":[{"nodeType":"YulAssignment","src":"7379:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7445:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7450:2:19","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7386:58:19"},"nodeType":"YulFunctionCall","src":"7386:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7379:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7551:3:19"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"7462:88:19"},"nodeType":"YulFunctionCall","src":"7462:93:19"},"nodeType":"YulExpressionStatement","src":"7462:93:19"},{"nodeType":"YulAssignment","src":"7564:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7575:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7580:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7571:3:19"},"nodeType":"YulFunctionCall","src":"7571:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7564:3:19"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7357:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7365:3:19","type":""}],"src":"7223:366:19"},{"body":{"nodeType":"YulBlock","src":"7741:220:19","statements":[{"nodeType":"YulAssignment","src":"7751:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7817:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7822:2:19","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7758:58:19"},"nodeType":"YulFunctionCall","src":"7758:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7751:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7923:3:19"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"7834:88:19"},"nodeType":"YulFunctionCall","src":"7834:93:19"},"nodeType":"YulExpressionStatement","src":"7834:93:19"},{"nodeType":"YulAssignment","src":"7936:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7947:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7952:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7943:3:19"},"nodeType":"YulFunctionCall","src":"7943:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7936:3:19"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7729:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7737:3:19","type":""}],"src":"7595:366:19"},{"body":{"nodeType":"YulBlock","src":"8113:220:19","statements":[{"nodeType":"YulAssignment","src":"8123:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8189:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8194:2:19","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8130:58:19"},"nodeType":"YulFunctionCall","src":"8130:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8123:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8295:3:19"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"8206:88:19"},"nodeType":"YulFunctionCall","src":"8206:93:19"},"nodeType":"YulExpressionStatement","src":"8206:93:19"},{"nodeType":"YulAssignment","src":"8308:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8319:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8324:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8315:3:19"},"nodeType":"YulFunctionCall","src":"8315:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8308:3:19"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8101:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8109:3:19","type":""}],"src":"7967:366:19"},{"body":{"nodeType":"YulBlock","src":"8485:220:19","statements":[{"nodeType":"YulAssignment","src":"8495:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8561:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8566:2:19","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8502:58:19"},"nodeType":"YulFunctionCall","src":"8502:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8495:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8667:3:19"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"8578:88:19"},"nodeType":"YulFunctionCall","src":"8578:93:19"},"nodeType":"YulExpressionStatement","src":"8578:93:19"},{"nodeType":"YulAssignment","src":"8680:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8691:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8696:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8687:3:19"},"nodeType":"YulFunctionCall","src":"8687:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8680:3:19"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8473:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8481:3:19","type":""}],"src":"8339:366:19"},{"body":{"nodeType":"YulBlock","src":"8857:220:19","statements":[{"nodeType":"YulAssignment","src":"8867:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8933:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8938:2:19","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8874:58:19"},"nodeType":"YulFunctionCall","src":"8874:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8867:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9039:3:19"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"8950:88:19"},"nodeType":"YulFunctionCall","src":"8950:93:19"},"nodeType":"YulExpressionStatement","src":"8950:93:19"},{"nodeType":"YulAssignment","src":"9052:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9063:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9068:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9059:3:19"},"nodeType":"YulFunctionCall","src":"9059:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9052:3:19"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8845:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8853:3:19","type":""}],"src":"8711:366:19"},{"body":{"nodeType":"YulBlock","src":"9229:220:19","statements":[{"nodeType":"YulAssignment","src":"9239:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9305:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9310:2:19","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9246:58:19"},"nodeType":"YulFunctionCall","src":"9246:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9239:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9411:3:19"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"9322:88:19"},"nodeType":"YulFunctionCall","src":"9322:93:19"},"nodeType":"YulExpressionStatement","src":"9322:93:19"},{"nodeType":"YulAssignment","src":"9424:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9435:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9440:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9431:3:19"},"nodeType":"YulFunctionCall","src":"9431:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9424:3:19"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9217:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9225:3:19","type":""}],"src":"9083:366:19"},{"body":{"nodeType":"YulBlock","src":"9601:220:19","statements":[{"nodeType":"YulAssignment","src":"9611:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9677:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9682:2:19","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9618:58:19"},"nodeType":"YulFunctionCall","src":"9618:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9611:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9783:3:19"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"9694:88:19"},"nodeType":"YulFunctionCall","src":"9694:93:19"},"nodeType":"YulExpressionStatement","src":"9694:93:19"},{"nodeType":"YulAssignment","src":"9796:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9807:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9812:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9803:3:19"},"nodeType":"YulFunctionCall","src":"9803:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9796:3:19"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9589:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9597:3:19","type":""}],"src":"9455:366:19"},{"body":{"nodeType":"YulBlock","src":"9973:220:19","statements":[{"nodeType":"YulAssignment","src":"9983:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10049:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10054:2:19","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9990:58:19"},"nodeType":"YulFunctionCall","src":"9990:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9983:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10155:3:19"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"10066:88:19"},"nodeType":"YulFunctionCall","src":"10066:93:19"},"nodeType":"YulExpressionStatement","src":"10066:93:19"},{"nodeType":"YulAssignment","src":"10168:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10179:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10184:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10175:3:19"},"nodeType":"YulFunctionCall","src":"10175:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10168:3:19"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9961:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9969:3:19","type":""}],"src":"9827:366:19"},{"body":{"nodeType":"YulBlock","src":"10345:220:19","statements":[{"nodeType":"YulAssignment","src":"10355:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10421:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10426:2:19","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10362:58:19"},"nodeType":"YulFunctionCall","src":"10362:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10355:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10527:3:19"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"10438:88:19"},"nodeType":"YulFunctionCall","src":"10438:93:19"},"nodeType":"YulExpressionStatement","src":"10438:93:19"},{"nodeType":"YulAssignment","src":"10540:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10551:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10556:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10547:3:19"},"nodeType":"YulFunctionCall","src":"10547:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10540:3:19"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10333:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10341:3:19","type":""}],"src":"10199:366:19"},{"body":{"nodeType":"YulBlock","src":"10636:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10653:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10676:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10658:17:19"},"nodeType":"YulFunctionCall","src":"10658:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10646:6:19"},"nodeType":"YulFunctionCall","src":"10646:37:19"},"nodeType":"YulExpressionStatement","src":"10646:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10624:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10631:3:19","type":""}],"src":"10571:118:19"},{"body":{"nodeType":"YulBlock","src":"10879:251:19","statements":[{"nodeType":"YulAssignment","src":"10890:102:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10979:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"10988:3:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10897:81:19"},"nodeType":"YulFunctionCall","src":"10897:95:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10890:3:19"}]},{"nodeType":"YulAssignment","src":"11002:102:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11091:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"11100:3:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11009:81:19"},"nodeType":"YulFunctionCall","src":"11009:95:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11002:3:19"}]},{"nodeType":"YulAssignment","src":"11114:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"11121:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11114:3:19"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10850:3:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10856:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10864:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10875:3:19","type":""}],"src":"10695:435:19"},{"body":{"nodeType":"YulBlock","src":"11234:124:19","statements":[{"nodeType":"YulAssignment","src":"11244:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11256:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11267:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11252:3:19"},"nodeType":"YulFunctionCall","src":"11252:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11244:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11324:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11337:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11348:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11333:3:19"},"nodeType":"YulFunctionCall","src":"11333:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11280:43:19"},"nodeType":"YulFunctionCall","src":"11280:71:19"},"nodeType":"YulExpressionStatement","src":"11280:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11206:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11218:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11229:4:19","type":""}],"src":"11136:222:19"},{"body":{"nodeType":"YulBlock","src":"11564:440:19","statements":[{"nodeType":"YulAssignment","src":"11574:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11586:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11597:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11582:3:19"},"nodeType":"YulFunctionCall","src":"11582:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11574:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11655:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11668:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11679:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11664:3:19"},"nodeType":"YulFunctionCall","src":"11664:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11611:43:19"},"nodeType":"YulFunctionCall","src":"11611:71:19"},"nodeType":"YulExpressionStatement","src":"11611:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11736:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11749:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11760:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11745:3:19"},"nodeType":"YulFunctionCall","src":"11745:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11692:43:19"},"nodeType":"YulFunctionCall","src":"11692:72:19"},"nodeType":"YulExpressionStatement","src":"11692:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11818:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11831:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11842:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11827:3:19"},"nodeType":"YulFunctionCall","src":"11827:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11774:43:19"},"nodeType":"YulFunctionCall","src":"11774:72:19"},"nodeType":"YulExpressionStatement","src":"11774:72:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11867:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11878:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11863:3:19"},"nodeType":"YulFunctionCall","src":"11863:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11887:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"11893:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11883:3:19"},"nodeType":"YulFunctionCall","src":"11883:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11856:6:19"},"nodeType":"YulFunctionCall","src":"11856:48:19"},"nodeType":"YulExpressionStatement","src":"11856:48:19"},{"nodeType":"YulAssignment","src":"11913:84:19","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11983:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"11992:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11921:61:19"},"nodeType":"YulFunctionCall","src":"11921:76:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11913:4:19"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11512:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11524:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11532:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11540:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11548:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11559:4:19","type":""}],"src":"11364:640:19"},{"body":{"nodeType":"YulBlock","src":"12102:118:19","statements":[{"nodeType":"YulAssignment","src":"12112:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12124:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12135:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12120:3:19"},"nodeType":"YulFunctionCall","src":"12120:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12112:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12186:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12199:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12210:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12195:3:19"},"nodeType":"YulFunctionCall","src":"12195:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12148:37:19"},"nodeType":"YulFunctionCall","src":"12148:65:19"},"nodeType":"YulExpressionStatement","src":"12148:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12074:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12086:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12097:4:19","type":""}],"src":"12010:210:19"},{"body":{"nodeType":"YulBlock","src":"12344:195:19","statements":[{"nodeType":"YulAssignment","src":"12354:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12366:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12377:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12362:3:19"},"nodeType":"YulFunctionCall","src":"12362:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12354:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12401:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12412:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12397:3:19"},"nodeType":"YulFunctionCall","src":"12397:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12420:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"12426:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12416:3:19"},"nodeType":"YulFunctionCall","src":"12416:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12390:6:19"},"nodeType":"YulFunctionCall","src":"12390:47:19"},"nodeType":"YulExpressionStatement","src":"12390:47:19"},{"nodeType":"YulAssignment","src":"12446:86:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12518:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"12527:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12454:63:19"},"nodeType":"YulFunctionCall","src":"12454:78:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12446:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12316:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12328:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12339:4:19","type":""}],"src":"12226:313:19"},{"body":{"nodeType":"YulBlock","src":"12716:248:19","statements":[{"nodeType":"YulAssignment","src":"12726:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12738:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12749:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12734:3:19"},"nodeType":"YulFunctionCall","src":"12734:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12726:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12773:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12784:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12769:3:19"},"nodeType":"YulFunctionCall","src":"12769:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12792:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"12798:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12788:3:19"},"nodeType":"YulFunctionCall","src":"12788:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12762:6:19"},"nodeType":"YulFunctionCall","src":"12762:47:19"},"nodeType":"YulExpressionStatement","src":"12762:47:19"},{"nodeType":"YulAssignment","src":"12818:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12952:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12826:124:19"},"nodeType":"YulFunctionCall","src":"12826:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12818:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12696:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12711:4:19","type":""}],"src":"12545:419:19"},{"body":{"nodeType":"YulBlock","src":"13141:248:19","statements":[{"nodeType":"YulAssignment","src":"13151:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13163:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13174:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13159:3:19"},"nodeType":"YulFunctionCall","src":"13159:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13151:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13198:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13209:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13194:3:19"},"nodeType":"YulFunctionCall","src":"13194:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13217:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"13223:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13213:3:19"},"nodeType":"YulFunctionCall","src":"13213:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13187:6:19"},"nodeType":"YulFunctionCall","src":"13187:47:19"},"nodeType":"YulExpressionStatement","src":"13187:47:19"},{"nodeType":"YulAssignment","src":"13243:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13377:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13251:124:19"},"nodeType":"YulFunctionCall","src":"13251:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13243:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13121:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13136:4:19","type":""}],"src":"12970:419:19"},{"body":{"nodeType":"YulBlock","src":"13566:248:19","statements":[{"nodeType":"YulAssignment","src":"13576:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13588:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13599:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13584:3:19"},"nodeType":"YulFunctionCall","src":"13584:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13576:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13623:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13634:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13619:3:19"},"nodeType":"YulFunctionCall","src":"13619:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13642:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"13648:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13638:3:19"},"nodeType":"YulFunctionCall","src":"13638:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13612:6:19"},"nodeType":"YulFunctionCall","src":"13612:47:19"},"nodeType":"YulExpressionStatement","src":"13612:47:19"},{"nodeType":"YulAssignment","src":"13668:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13802:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13676:124:19"},"nodeType":"YulFunctionCall","src":"13676:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13668:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13546:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13561:4:19","type":""}],"src":"13395:419:19"},{"body":{"nodeType":"YulBlock","src":"13991:248:19","statements":[{"nodeType":"YulAssignment","src":"14001:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14013:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14024:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14009:3:19"},"nodeType":"YulFunctionCall","src":"14009:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14001:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14048:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14059:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14044:3:19"},"nodeType":"YulFunctionCall","src":"14044:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14067:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"14073:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14063:3:19"},"nodeType":"YulFunctionCall","src":"14063:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14037:6:19"},"nodeType":"YulFunctionCall","src":"14037:47:19"},"nodeType":"YulExpressionStatement","src":"14037:47:19"},{"nodeType":"YulAssignment","src":"14093:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14227:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14101:124:19"},"nodeType":"YulFunctionCall","src":"14101:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14093:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13971:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13986:4:19","type":""}],"src":"13820:419:19"},{"body":{"nodeType":"YulBlock","src":"14416:248:19","statements":[{"nodeType":"YulAssignment","src":"14426:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14438:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14449:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14434:3:19"},"nodeType":"YulFunctionCall","src":"14434:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14426:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14473:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14484:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14469:3:19"},"nodeType":"YulFunctionCall","src":"14469:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14492:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"14498:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14488:3:19"},"nodeType":"YulFunctionCall","src":"14488:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14462:6:19"},"nodeType":"YulFunctionCall","src":"14462:47:19"},"nodeType":"YulExpressionStatement","src":"14462:47:19"},{"nodeType":"YulAssignment","src":"14518:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14652:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14526:124:19"},"nodeType":"YulFunctionCall","src":"14526:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14518:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14396:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14411:4:19","type":""}],"src":"14245:419:19"},{"body":{"nodeType":"YulBlock","src":"14841:248:19","statements":[{"nodeType":"YulAssignment","src":"14851:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14863:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14874:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14859:3:19"},"nodeType":"YulFunctionCall","src":"14859:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14851:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14898:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14909:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14894:3:19"},"nodeType":"YulFunctionCall","src":"14894:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14917:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"14923:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14913:3:19"},"nodeType":"YulFunctionCall","src":"14913:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14887:6:19"},"nodeType":"YulFunctionCall","src":"14887:47:19"},"nodeType":"YulExpressionStatement","src":"14887:47:19"},{"nodeType":"YulAssignment","src":"14943:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15077:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14951:124:19"},"nodeType":"YulFunctionCall","src":"14951:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14943:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14821:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14836:4:19","type":""}],"src":"14670:419:19"},{"body":{"nodeType":"YulBlock","src":"15266:248:19","statements":[{"nodeType":"YulAssignment","src":"15276:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15288:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15299:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15284:3:19"},"nodeType":"YulFunctionCall","src":"15284:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15276:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15323:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15334:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15319:3:19"},"nodeType":"YulFunctionCall","src":"15319:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15342:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"15348:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15338:3:19"},"nodeType":"YulFunctionCall","src":"15338:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15312:6:19"},"nodeType":"YulFunctionCall","src":"15312:47:19"},"nodeType":"YulExpressionStatement","src":"15312:47:19"},{"nodeType":"YulAssignment","src":"15368:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15502:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15376:124:19"},"nodeType":"YulFunctionCall","src":"15376:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15368:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15246:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15261:4:19","type":""}],"src":"15095:419:19"},{"body":{"nodeType":"YulBlock","src":"15691:248:19","statements":[{"nodeType":"YulAssignment","src":"15701:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15713:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15724:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15709:3:19"},"nodeType":"YulFunctionCall","src":"15709:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15701:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15748:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15759:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15744:3:19"},"nodeType":"YulFunctionCall","src":"15744:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15767:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"15773:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15763:3:19"},"nodeType":"YulFunctionCall","src":"15763:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15737:6:19"},"nodeType":"YulFunctionCall","src":"15737:47:19"},"nodeType":"YulExpressionStatement","src":"15737:47:19"},{"nodeType":"YulAssignment","src":"15793:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15927:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15801:124:19"},"nodeType":"YulFunctionCall","src":"15801:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15793:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15671:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15686:4:19","type":""}],"src":"15520:419:19"},{"body":{"nodeType":"YulBlock","src":"16116:248:19","statements":[{"nodeType":"YulAssignment","src":"16126:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16138:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16149:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16134:3:19"},"nodeType":"YulFunctionCall","src":"16134:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16126:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16173:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16184:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16169:3:19"},"nodeType":"YulFunctionCall","src":"16169:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16192:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"16198:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16188:3:19"},"nodeType":"YulFunctionCall","src":"16188:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16162:6:19"},"nodeType":"YulFunctionCall","src":"16162:47:19"},"nodeType":"YulExpressionStatement","src":"16162:47:19"},{"nodeType":"YulAssignment","src":"16218:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16352:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16226:124:19"},"nodeType":"YulFunctionCall","src":"16226:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16218:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16096:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16111:4:19","type":""}],"src":"15945:419:19"},{"body":{"nodeType":"YulBlock","src":"16468:124:19","statements":[{"nodeType":"YulAssignment","src":"16478:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16490:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16501:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16486:3:19"},"nodeType":"YulFunctionCall","src":"16486:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16478:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16558:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16571:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16582:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16567:3:19"},"nodeType":"YulFunctionCall","src":"16567:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16514:43:19"},"nodeType":"YulFunctionCall","src":"16514:71:19"},"nodeType":"YulExpressionStatement","src":"16514:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16440:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16452:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16463:4:19","type":""}],"src":"16370:222:19"},{"body":{"nodeType":"YulBlock","src":"16639:88:19","statements":[{"nodeType":"YulAssignment","src":"16649:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"16659:18:19"},"nodeType":"YulFunctionCall","src":"16659:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16649:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16708:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"16716:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"16688:19:19"},"nodeType":"YulFunctionCall","src":"16688:33:19"},"nodeType":"YulExpressionStatement","src":"16688:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"16623:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16632:6:19","type":""}],"src":"16598:129:19"},{"body":{"nodeType":"YulBlock","src":"16773:35:19","statements":[{"nodeType":"YulAssignment","src":"16783:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16799:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16793:5:19"},"nodeType":"YulFunctionCall","src":"16793:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16783:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16766:6:19","type":""}],"src":"16733:75:19"},{"body":{"nodeType":"YulBlock","src":"16880:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"16985:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16987:16:19"},"nodeType":"YulFunctionCall","src":"16987:18:19"},"nodeType":"YulExpressionStatement","src":"16987:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16957:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"16965:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16954:2:19"},"nodeType":"YulFunctionCall","src":"16954:30:19"},"nodeType":"YulIf","src":"16951:56:19"},{"nodeType":"YulAssignment","src":"17017:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17047:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17025:21:19"},"nodeType":"YulFunctionCall","src":"17025:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17017:4:19"}]},{"nodeType":"YulAssignment","src":"17091:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"17103:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17099:3:19"},"nodeType":"YulFunctionCall","src":"17099:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17091:4:19"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16864:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16875:4:19","type":""}],"src":"16814:307:19"},{"body":{"nodeType":"YulBlock","src":"17185:40:19","statements":[{"nodeType":"YulAssignment","src":"17196:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17212:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17206:5:19"},"nodeType":"YulFunctionCall","src":"17206:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17196:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17168:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17178:6:19","type":""}],"src":"17127:98:19"},{"body":{"nodeType":"YulBlock","src":"17290:40:19","statements":[{"nodeType":"YulAssignment","src":"17301:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17317:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17311:5:19"},"nodeType":"YulFunctionCall","src":"17311:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17301:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17273:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17283:6:19","type":""}],"src":"17231:99:19"},{"body":{"nodeType":"YulBlock","src":"17431:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17448:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"17453:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17441:6:19"},"nodeType":"YulFunctionCall","src":"17441:19:19"},"nodeType":"YulExpressionStatement","src":"17441:19:19"},{"nodeType":"YulAssignment","src":"17469:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17488:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"17493:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17484:3:19"},"nodeType":"YulFunctionCall","src":"17484:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17469:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17403:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"17408:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17419:11:19","type":""}],"src":"17336:168:19"},{"body":{"nodeType":"YulBlock","src":"17606:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17623:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"17628:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17616:6:19"},"nodeType":"YulFunctionCall","src":"17616:19:19"},"nodeType":"YulExpressionStatement","src":"17616:19:19"},{"nodeType":"YulAssignment","src":"17644:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17663:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"17668:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17659:3:19"},"nodeType":"YulFunctionCall","src":"17659:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17644:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17578:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"17583:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17594:11:19","type":""}],"src":"17510:169:19"},{"body":{"nodeType":"YulBlock","src":"17799:34:19","statements":[{"nodeType":"YulAssignment","src":"17809:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"17824:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17809:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17771:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"17776:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17787:11:19","type":""}],"src":"17685:148:19"},{"body":{"nodeType":"YulBlock","src":"17884:51:19","statements":[{"nodeType":"YulAssignment","src":"17894:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17923:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17905:17:19"},"nodeType":"YulFunctionCall","src":"17905:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17894:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17866:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17876:7:19","type":""}],"src":"17839:96:19"},{"body":{"nodeType":"YulBlock","src":"17983:48:19","statements":[{"nodeType":"YulAssignment","src":"17993:32:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18018:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18011:6:19"},"nodeType":"YulFunctionCall","src":"18011:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18004:6:19"},"nodeType":"YulFunctionCall","src":"18004:21:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17993:7:19"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17965:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17975:7:19","type":""}],"src":"17941:90:19"},{"body":{"nodeType":"YulBlock","src":"18081:105:19","statements":[{"nodeType":"YulAssignment","src":"18091:89:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18106:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18113:66:19","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18102:3:19"},"nodeType":"YulFunctionCall","src":"18102:78:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18091:7:19"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18063:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18073:7:19","type":""}],"src":"18037:149:19"},{"body":{"nodeType":"YulBlock","src":"18237:81:19","statements":[{"nodeType":"YulAssignment","src":"18247:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18262:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18269:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18258:3:19"},"nodeType":"YulFunctionCall","src":"18258:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18247:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18219:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18229:7:19","type":""}],"src":"18192:126:19"},{"body":{"nodeType":"YulBlock","src":"18369:32:19","statements":[{"nodeType":"YulAssignment","src":"18379:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"18390:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18379:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18351:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18361:7:19","type":""}],"src":"18324:77:19"},{"body":{"nodeType":"YulBlock","src":"18458:103:19","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18481:3:19"},{"name":"src","nodeType":"YulIdentifier","src":"18486:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"18491:6:19"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18468:12:19"},"nodeType":"YulFunctionCall","src":"18468:30:19"},"nodeType":"YulExpressionStatement","src":"18468:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18539:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"18544:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18535:3:19"},"nodeType":"YulFunctionCall","src":"18535:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"18553:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18528:6:19"},"nodeType":"YulFunctionCall","src":"18528:27:19"},"nodeType":"YulExpressionStatement","src":"18528:27:19"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18440:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18445:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"18450:6:19","type":""}],"src":"18407:154:19"},{"body":{"nodeType":"YulBlock","src":"18616:258:19","statements":[{"nodeType":"YulVariableDeclaration","src":"18626:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"18635:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18630:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"18695:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18720:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"18725:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18716:3:19"},"nodeType":"YulFunctionCall","src":"18716:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18739:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"18744:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18735:3:19"},"nodeType":"YulFunctionCall","src":"18735:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18729:5:19"},"nodeType":"YulFunctionCall","src":"18729:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18709:6:19"},"nodeType":"YulFunctionCall","src":"18709:39:19"},"nodeType":"YulExpressionStatement","src":"18709:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18656:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"18659:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18653:2:19"},"nodeType":"YulFunctionCall","src":"18653:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18667:19:19","statements":[{"nodeType":"YulAssignment","src":"18669:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18678:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"18681:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18674:3:19"},"nodeType":"YulFunctionCall","src":"18674:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18669:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"18649:3:19","statements":[]},"src":"18645:113:19"},{"body":{"nodeType":"YulBlock","src":"18792:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18842:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"18847:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18838:3:19"},"nodeType":"YulFunctionCall","src":"18838:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"18856:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18831:6:19"},"nodeType":"YulFunctionCall","src":"18831:27:19"},"nodeType":"YulExpressionStatement","src":"18831:27:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18773:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"18776:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18770:2:19"},"nodeType":"YulFunctionCall","src":"18770:13:19"},"nodeType":"YulIf","src":"18767:101:19"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18598:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18603:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"18608:6:19","type":""}],"src":"18567:307:19"},{"body":{"nodeType":"YulBlock","src":"18931:269:19","statements":[{"nodeType":"YulAssignment","src":"18941:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18955:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"18961:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18951:3:19"},"nodeType":"YulFunctionCall","src":"18951:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18941:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"18972:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19002:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"19008:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18998:3:19"},"nodeType":"YulFunctionCall","src":"18998:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18976:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"19049:51:19","statements":[{"nodeType":"YulAssignment","src":"19063:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19077:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19085:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19073:3:19"},"nodeType":"YulFunctionCall","src":"19073:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19063:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19029:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19022:6:19"},"nodeType":"YulFunctionCall","src":"19022:26:19"},"nodeType":"YulIf","src":"19019:81:19"},{"body":{"nodeType":"YulBlock","src":"19152:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"19166:16:19"},"nodeType":"YulFunctionCall","src":"19166:18:19"},"nodeType":"YulExpressionStatement","src":"19166:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19116:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19139:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19147:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19136:2:19"},"nodeType":"YulFunctionCall","src":"19136:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19113:2:19"},"nodeType":"YulFunctionCall","src":"19113:38:19"},"nodeType":"YulIf","src":"19110:84:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18915:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18924:6:19","type":""}],"src":"18880:320:19"},{"body":{"nodeType":"YulBlock","src":"19249:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19259:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19281:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"19311:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"19289:21:19"},"nodeType":"YulFunctionCall","src":"19289:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19277:3:19"},"nodeType":"YulFunctionCall","src":"19277:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"19263:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"19428:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19430:16:19"},"nodeType":"YulFunctionCall","src":"19430:18:19"},"nodeType":"YulExpressionStatement","src":"19430:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19371:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"19383:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19368:2:19"},"nodeType":"YulFunctionCall","src":"19368:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19407:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"19419:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19404:2:19"},"nodeType":"YulFunctionCall","src":"19404:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19365:2:19"},"nodeType":"YulFunctionCall","src":"19365:62:19"},"nodeType":"YulIf","src":"19362:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19466:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19470:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19459:6:19"},"nodeType":"YulFunctionCall","src":"19459:22:19"},"nodeType":"YulExpressionStatement","src":"19459:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19235:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"19243:4:19","type":""}],"src":"19206:281:19"},{"body":{"nodeType":"YulBlock","src":"19521:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19538:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19541:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19531:6:19"},"nodeType":"YulFunctionCall","src":"19531:88:19"},"nodeType":"YulExpressionStatement","src":"19531:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19635:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19638:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19628:6:19"},"nodeType":"YulFunctionCall","src":"19628:15:19"},"nodeType":"YulExpressionStatement","src":"19628:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19659:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19662:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19652:6:19"},"nodeType":"YulFunctionCall","src":"19652:15:19"},"nodeType":"YulExpressionStatement","src":"19652:15:19"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"19493:180:19"},{"body":{"nodeType":"YulBlock","src":"19707:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19724:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19727:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19717:6:19"},"nodeType":"YulFunctionCall","src":"19717:88:19"},"nodeType":"YulExpressionStatement","src":"19717:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19821:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19824:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19814:6:19"},"nodeType":"YulFunctionCall","src":"19814:15:19"},"nodeType":"YulExpressionStatement","src":"19814:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19845:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19848:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19838:6:19"},"nodeType":"YulFunctionCall","src":"19838:15:19"},"nodeType":"YulExpressionStatement","src":"19838:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"19679:180:19"},{"body":{"nodeType":"YulBlock","src":"19893:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19910:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19913:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19903:6:19"},"nodeType":"YulFunctionCall","src":"19903:88:19"},"nodeType":"YulExpressionStatement","src":"19903:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20007:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20010:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20000:6:19"},"nodeType":"YulFunctionCall","src":"20000:15:19"},"nodeType":"YulExpressionStatement","src":"20000:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20031:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20034:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20024:6:19"},"nodeType":"YulFunctionCall","src":"20024:15:19"},"nodeType":"YulExpressionStatement","src":"20024:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"19865:180:19"},{"body":{"nodeType":"YulBlock","src":"20140:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20157:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20160:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20150:6:19"},"nodeType":"YulFunctionCall","src":"20150:12:19"},"nodeType":"YulExpressionStatement","src":"20150:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"20051:117:19"},{"body":{"nodeType":"YulBlock","src":"20263:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20280:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20283:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20273:6:19"},"nodeType":"YulFunctionCall","src":"20273:12:19"},"nodeType":"YulExpressionStatement","src":"20273:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"20174:117:19"},{"body":{"nodeType":"YulBlock","src":"20386:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20403:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20406:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20396:6:19"},"nodeType":"YulFunctionCall","src":"20396:12:19"},"nodeType":"YulExpressionStatement","src":"20396:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"20297:117:19"},{"body":{"nodeType":"YulBlock","src":"20509:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20526:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20529:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20519:6:19"},"nodeType":"YulFunctionCall","src":"20519:12:19"},"nodeType":"YulExpressionStatement","src":"20519:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"20420:117:19"},{"body":{"nodeType":"YulBlock","src":"20591:54:19","statements":[{"nodeType":"YulAssignment","src":"20601:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20619:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"20626:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20615:3:19"},"nodeType":"YulFunctionCall","src":"20615:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20635:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20631:3:19"},"nodeType":"YulFunctionCall","src":"20631:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20611:3:19"},"nodeType":"YulFunctionCall","src":"20611:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20601:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20574:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20584:6:19","type":""}],"src":"20543:102:19"},{"body":{"nodeType":"YulBlock","src":"20757:126:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20779:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"20787:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20775:3:19"},"nodeType":"YulFunctionCall","src":"20775:14:19"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"20791:34:19","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20768:6:19"},"nodeType":"YulFunctionCall","src":"20768:58:19"},"nodeType":"YulExpressionStatement","src":"20768:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20847:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"20855:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20843:3:19"},"nodeType":"YulFunctionCall","src":"20843:15:19"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"20860:15:19","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20836:6:19"},"nodeType":"YulFunctionCall","src":"20836:40:19"},"nodeType":"YulExpressionStatement","src":"20836:40:19"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20749:6:19","type":""}],"src":"20651:232:19"},{"body":{"nodeType":"YulBlock","src":"20995:131:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21017:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21025:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21013:3:19"},"nodeType":"YulFunctionCall","src":"21013:14:19"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"21029:34:19","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21006:6:19"},"nodeType":"YulFunctionCall","src":"21006:58:19"},"nodeType":"YulExpressionStatement","src":"21006:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21085:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21093:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21081:3:19"},"nodeType":"YulFunctionCall","src":"21081:15:19"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"21098:20:19","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21074:6:19"},"nodeType":"YulFunctionCall","src":"21074:45:19"},"nodeType":"YulExpressionStatement","src":"21074:45:19"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20987:6:19","type":""}],"src":"20889:237:19"},{"body":{"nodeType":"YulBlock","src":"21238:118:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21260:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21268:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21256:3:19"},"nodeType":"YulFunctionCall","src":"21256:14:19"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"21272:34:19","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21249:6:19"},"nodeType":"YulFunctionCall","src":"21249:58:19"},"nodeType":"YulExpressionStatement","src":"21249:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21328:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21336:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21324:3:19"},"nodeType":"YulFunctionCall","src":"21324:15:19"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"21341:7:19","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21317:6:19"},"nodeType":"YulFunctionCall","src":"21317:32:19"},"nodeType":"YulExpressionStatement","src":"21317:32:19"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21230:6:19","type":""}],"src":"21132:224:19"},{"body":{"nodeType":"YulBlock","src":"21468:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21490:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21498:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21486:3:19"},"nodeType":"YulFunctionCall","src":"21486:14:19"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"21502:34:19","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21479:6:19"},"nodeType":"YulFunctionCall","src":"21479:58:19"},"nodeType":"YulExpressionStatement","src":"21479:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21558:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21566:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21554:3:19"},"nodeType":"YulFunctionCall","src":"21554:15:19"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"21571:6:19","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21547:6:19"},"nodeType":"YulFunctionCall","src":"21547:31:19"},"nodeType":"YulExpressionStatement","src":"21547:31:19"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21460:6:19","type":""}],"src":"21362:223:19"},{"body":{"nodeType":"YulBlock","src":"21697:69:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21719:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21727:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21715:3:19"},"nodeType":"YulFunctionCall","src":"21715:14:19"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"21731:27:19","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21708:6:19"},"nodeType":"YulFunctionCall","src":"21708:51:19"},"nodeType":"YulExpressionStatement","src":"21708:51:19"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21689:6:19","type":""}],"src":"21591:175:19"},{"body":{"nodeType":"YulBlock","src":"21878:122:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21900:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21908:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21896:3:19"},"nodeType":"YulFunctionCall","src":"21896:14:19"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"21912:34:19","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21889:6:19"},"nodeType":"YulFunctionCall","src":"21889:58:19"},"nodeType":"YulExpressionStatement","src":"21889:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21968:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21976:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21964:3:19"},"nodeType":"YulFunctionCall","src":"21964:15:19"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"21981:11:19","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21957:6:19"},"nodeType":"YulFunctionCall","src":"21957:36:19"},"nodeType":"YulExpressionStatement","src":"21957:36:19"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21870:6:19","type":""}],"src":"21772:228:19"},{"body":{"nodeType":"YulBlock","src":"22112:68:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22134:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22142:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22130:3:19"},"nodeType":"YulFunctionCall","src":"22130:14:19"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"22146:26:19","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22123:6:19"},"nodeType":"YulFunctionCall","src":"22123:50:19"},"nodeType":"YulExpressionStatement","src":"22123:50:19"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22104:6:19","type":""}],"src":"22006:174:19"},{"body":{"nodeType":"YulBlock","src":"22292:114:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22314:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22322:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22310:3:19"},"nodeType":"YulFunctionCall","src":"22310:14:19"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"22326:34:19","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22303:6:19"},"nodeType":"YulFunctionCall","src":"22303:58:19"},"nodeType":"YulExpressionStatement","src":"22303:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22382:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22390:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22378:3:19"},"nodeType":"YulFunctionCall","src":"22378:15:19"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"22395:3:19","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22371:6:19"},"nodeType":"YulFunctionCall","src":"22371:28:19"},"nodeType":"YulExpressionStatement","src":"22371:28:19"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22284:6:19","type":""}],"src":"22186:220:19"},{"body":{"nodeType":"YulBlock","src":"22518:142:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22540:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22548:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22536:3:19"},"nodeType":"YulFunctionCall","src":"22536:14:19"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"22552:34:19","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22529:6:19"},"nodeType":"YulFunctionCall","src":"22529:58:19"},"nodeType":"YulExpressionStatement","src":"22529:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22608:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22616:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22604:3:19"},"nodeType":"YulFunctionCall","src":"22604:15:19"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"22621:31:19","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22597:6:19"},"nodeType":"YulFunctionCall","src":"22597:56:19"},"nodeType":"YulExpressionStatement","src":"22597:56:19"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22510:6:19","type":""}],"src":"22412:248:19"},{"body":{"nodeType":"YulBlock","src":"22709:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"22766:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22775:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22778:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22768:6:19"},"nodeType":"YulFunctionCall","src":"22768:12:19"},"nodeType":"YulExpressionStatement","src":"22768:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22732:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22757:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"22739:17:19"},"nodeType":"YulFunctionCall","src":"22739:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22729:2:19"},"nodeType":"YulFunctionCall","src":"22729:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22722:6:19"},"nodeType":"YulFunctionCall","src":"22722:43:19"},"nodeType":"YulIf","src":"22719:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22702:5:19","type":""}],"src":"22666:122:19"},{"body":{"nodeType":"YulBlock","src":"22834:76:19","statements":[{"body":{"nodeType":"YulBlock","src":"22888:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22897:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22900:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22890:6:19"},"nodeType":"YulFunctionCall","src":"22890:12:19"},"nodeType":"YulExpressionStatement","src":"22890:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22857:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22879:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"22864:14:19"},"nodeType":"YulFunctionCall","src":"22864:21:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22854:2:19"},"nodeType":"YulFunctionCall","src":"22854:32:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22847:6:19"},"nodeType":"YulFunctionCall","src":"22847:40:19"},"nodeType":"YulIf","src":"22844:60:19"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22827:5:19","type":""}],"src":"22794:116:19"},{"body":{"nodeType":"YulBlock","src":"22958:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"23014:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23023:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23026:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23016:6:19"},"nodeType":"YulFunctionCall","src":"23016:12:19"},"nodeType":"YulExpressionStatement","src":"23016:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22981:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23005:5:19"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"22988:16:19"},"nodeType":"YulFunctionCall","src":"22988:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22978:2:19"},"nodeType":"YulFunctionCall","src":"22978:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22971:6:19"},"nodeType":"YulFunctionCall","src":"22971:42:19"},"nodeType":"YulIf","src":"22968:62:19"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22951:5:19","type":""}],"src":"22916:120:19"},{"body":{"nodeType":"YulBlock","src":"23085:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"23142:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23151:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23154:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23144:6:19"},"nodeType":"YulFunctionCall","src":"23144:12:19"},"nodeType":"YulExpressionStatement","src":"23144:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23108:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23133:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23115:17:19"},"nodeType":"YulFunctionCall","src":"23115:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23105:2:19"},"nodeType":"YulFunctionCall","src":"23105:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23098:6:19"},"nodeType":"YulFunctionCall","src":"23098:43:19"},"nodeType":"YulIf","src":"23095:63:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23078:5:19","type":""}],"src":"23042:122:19"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611743565b6102bc565b6040516100fb9190611a60565b60405180910390f35b61010c61039e565b6040516101199190611a7b565b60405180910390f35b61013c6004803603810190610137919061179d565b610430565b60405161014991906119f9565b60405180910390f35b61016c60048036038101906101679190611703565b610476565b005b610188600480360381019061018391906115ed565b61058e565b005b6101a4600480360381019061019f91906115ed565b6105ee565b005b6101c060048036038101906101bb919061179d565b61060e565b6040516101cd91906119f9565b60405180910390f35b6101f060048036038101906101eb9190611580565b610695565b6040516101fd9190611bbd565b60405180910390f35b61020e61074d565b60405161021b9190611a7b565b60405180910390f35b61023e600480360381019061023991906116c3565b6107df565b005b61025a60048036038101906102559190611640565b6107f5565b005b6102766004803603810190610271919061179d565b610857565b6040516102839190611a7b565b60405180910390f35b6102a660048036038101906102a191906115ad565b6108bf565b6040516102b39190611a60565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611d27565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611d27565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611b7d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611b9d565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611a9d565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611b5d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611b3d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611d27565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611d27565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611a9d565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a79291906119d5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611b5d565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611add565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611afd565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611add565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e538383836001611194565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611b1d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff59190611a60565b60405180910390a3505050565b61100d848484610b5e565b6110198484848461119a565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611abd565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611331565b01905060008167ffffffffffffffff8111156110a3576110a2611de8565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b611d8a565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111bb8473ffffffffffffffffffffffffffffffffffffffff16611484565b15611324578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111e4610a08565b8786866040518563ffffffff1660e01b81526004016112069493929190611a14565b602060405180830381600087803b15801561122057600080fd5b505af192505050801561125157506040513d601f19601f8201168201806040525081019061124e9190611770565b60015b6112d4573d8060008114611281576040519150601f19603f3d011682016040523d82523d6000602084013e611286565b606091505b506000815114156112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c390611abd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611329565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061138f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161138557611384611d8a565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113cc576d04ee2d6d415b85acef810000000083816113c2576113c1611d8a565b5b0492506020810190505b662386f26fc1000083106113fb57662386f26fc1000083816113f1576113f0611d8a565b5b0492506010810190505b6305f5e1008310611424576305f5e100838161141a57611419611d8a565b5b0492506008810190505b612710831061144957612710838161143f5761143e611d8a565b5b0492506004810190505b6064831061146c576064838161146257611461611d8a565b5b0492506002810190505b600a831061147b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006114ba6114b584611bfd565b611bd8565b9050828152602081018484840111156114d6576114d5611e1c565b5b6114e1848285611ce5565b509392505050565b6000813590506114f8816120b7565b92915050565b60008135905061150d816120ce565b92915050565b600081359050611522816120e5565b92915050565b600081519050611537816120e5565b92915050565b600082601f83011261155257611551611e17565b5b81356115628482602086016114a7565b91505092915050565b60008135905061157a816120fc565b92915050565b60006020828403121561159657611595611e26565b5b60006115a4848285016114e9565b91505092915050565b600080604083850312156115c4576115c3611e26565b5b60006115d2858286016114e9565b92505060206115e3858286016114e9565b9150509250929050565b60008060006060848603121561160657611605611e26565b5b6000611614868287016114e9565b9350506020611625868287016114e9565b92505060406116368682870161156b565b9150509250925092565b6000806000806080858703121561165a57611659611e26565b5b6000611668878288016114e9565b9450506020611679878288016114e9565b935050604061168a8782880161156b565b925050606085013567ffffffffffffffff8111156116ab576116aa611e21565b5b6116b78782880161153d565b91505092959194509250565b600080604083850312156116da576116d9611e26565b5b60006116e8858286016114e9565b92505060206116f9858286016114fe565b9150509250929050565b6000806040838503121561171a57611719611e26565b5b6000611728858286016114e9565b92505060206117398582860161156b565b9150509250929050565b60006020828403121561175957611758611e26565b5b600061176784828501611513565b91505092915050565b60006020828403121561178657611785611e26565b5b600061179484828501611528565b91505092915050565b6000602082840312156117b3576117b2611e26565b5b60006117c18482850161156b565b91505092915050565b6117d381611c71565b82525050565b6117e281611c83565b82525050565b60006117f382611c2e565b6117fd8185611c44565b935061180d818560208601611cf4565b61181681611e2b565b840191505092915050565b600061182c82611c39565b6118368185611c55565b9350611846818560208601611cf4565b61184f81611e2b565b840191505092915050565b600061186582611c39565b61186f8185611c66565b935061187f818560208601611cf4565b80840191505092915050565b6000611898602d83611c55565b91506118a382611e3c565b604082019050919050565b60006118bb603283611c55565b91506118c682611e8b565b604082019050919050565b60006118de602583611c55565b91506118e982611eda565b604082019050919050565b6000611901602483611c55565b915061190c82611f29565b604082019050919050565b6000611924601983611c55565b915061192f82611f78565b602082019050919050565b6000611947602983611c55565b915061195282611fa1565b604082019050919050565b600061196a601883611c55565b915061197582611ff0565b602082019050919050565b600061198d602183611c55565b915061199882612019565b604082019050919050565b60006119b0603d83611c55565b91506119bb82612068565b604082019050919050565b6119cf81611cdb565b82525050565b60006119e1828561185a565b91506119ed828461185a565b91508190509392505050565b6000602082019050611a0e60008301846117ca565b92915050565b6000608082019050611a2960008301876117ca565b611a3660208301866117ca565b611a4360408301856119c6565b8181036060830152611a5581846117e8565b905095945050505050565b6000602082019050611a7560008301846117d9565b92915050565b60006020820190508181036000830152611a958184611821565b905092915050565b60006020820190508181036000830152611ab68161188b565b9050919050565b60006020820190508181036000830152611ad6816118ae565b9050919050565b60006020820190508181036000830152611af6816118d1565b9050919050565b60006020820190508181036000830152611b16816118f4565b9050919050565b60006020820190508181036000830152611b3681611917565b9050919050565b60006020820190508181036000830152611b568161193a565b9050919050565b60006020820190508181036000830152611b768161195d565b9050919050565b60006020820190508181036000830152611b9681611980565b9050919050565b60006020820190508181036000830152611bb6816119a3565b9050919050565b6000602082019050611bd260008301846119c6565b92915050565b6000611be2611bf3565b9050611bee8282611d59565b919050565b6000604051905090565b600067ffffffffffffffff821115611c1857611c17611de8565b5b611c2182611e2b565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611c7c82611cbb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611d12578082015181840152602081019050611cf7565b83811115611d21576000848401525b50505050565b60006002820490506001821680611d3f57607f821691505b60208210811415611d5357611d52611db9565b5b50919050565b611d6282611e2b565b810181811067ffffffffffffffff82111715611d8157611d80611de8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6120c081611c71565b81146120cb57600080fd5b50565b6120d781611c83565b81146120e257600080fd5b50565b6120ee81611c8f565b81146120f957600080fd5b50565b61210581611cdb565b811461211057600080fd5b5056fea26469706673582212207ea616c3cfcb7ae2793ccdc4e12c0bdfcb8d51636bec2dfb47d1b4570f7e529464736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1A9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1A9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1194 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1331 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1484 JUMP JUMPDEST ISZERO PUSH2 0x1324 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11E4 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1206 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1251 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12D4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C3 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x138F JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13CC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13C2 JUMPI PUSH2 0x13C1 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13FB JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1424 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1449 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x146C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1462 JUMPI PUSH2 0x1461 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x147B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BA PUSH2 0x14B5 DUP5 PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14D6 JUMPI PUSH2 0x14D5 PUSH2 0x1E1C JUMP JUMPDEST JUMPDEST PUSH2 0x14E1 DUP5 DUP3 DUP6 PUSH2 0x1CE5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F8 DUP2 PUSH2 0x20B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150D DUP2 PUSH2 0x20CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1522 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1537 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1552 JUMPI PUSH2 0x1551 PUSH2 0x1E17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1562 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x157A DUP2 PUSH2 0x20FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1596 JUMPI PUSH2 0x1595 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A4 DUP5 DUP3 DUP6 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15C3 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15D2 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15E3 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1605 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1614 DUP7 DUP3 DUP8 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1625 DUP7 DUP3 DUP8 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1636 DUP7 DUP3 DUP8 ADD PUSH2 0x156B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x165A JUMPI PUSH2 0x1659 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1668 DUP8 DUP3 DUP9 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1679 DUP8 DUP3 DUP9 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x168A DUP8 DUP3 DUP9 ADD PUSH2 0x156B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16AB JUMPI PUSH2 0x16AA PUSH2 0x1E21 JUMP JUMPDEST JUMPDEST PUSH2 0x16B7 DUP8 DUP3 DUP9 ADD PUSH2 0x153D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16E8 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16F9 DUP6 DUP3 DUP7 ADD PUSH2 0x14FE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171A JUMPI PUSH2 0x1719 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1728 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1739 DUP6 DUP3 DUP7 ADD PUSH2 0x156B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1759 JUMPI PUSH2 0x1758 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1767 DUP5 DUP3 DUP6 ADD PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1786 JUMPI PUSH2 0x1785 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1794 DUP5 DUP3 DUP6 ADD PUSH2 0x1528 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x17B2 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C1 DUP5 DUP3 DUP6 ADD PUSH2 0x156B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17D3 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x1C83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F3 DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x17FD DUP2 DUP6 PUSH2 0x1C44 JUMP JUMPDEST SWAP4 POP PUSH2 0x180D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x1816 DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP3 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x1836 DUP2 DUP6 PUSH2 0x1C55 JUMP JUMPDEST SWAP4 POP PUSH2 0x1846 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x184F DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1865 DUP3 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x186F DUP2 DUP6 PUSH2 0x1C66 JUMP JUMPDEST SWAP4 POP PUSH2 0x187F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1898 PUSH1 0x2D DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A3 DUP3 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BB PUSH1 0x32 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C6 DUP3 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DE PUSH1 0x25 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E9 DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1901 PUSH1 0x24 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x190C DUP3 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1924 PUSH1 0x19 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x192F DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1947 PUSH1 0x29 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1952 DUP3 PUSH2 0x1FA1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196A PUSH1 0x18 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1975 DUP3 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198D PUSH1 0x21 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1998 DUP3 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B0 PUSH1 0x3D DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BB DUP3 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CF DUP2 PUSH2 0x1CDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 DUP3 DUP6 PUSH2 0x185A JUMP JUMPDEST SWAP2 POP PUSH2 0x19ED DUP3 DUP5 PUSH2 0x185A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A29 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x1A36 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x1A43 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19C6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1A55 DUP2 DUP5 PUSH2 0x17E8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A95 DUP2 DUP5 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AB6 DUP2 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AD6 DUP2 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AF6 DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B16 DUP2 PUSH2 0x18F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B36 DUP2 PUSH2 0x1917 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B56 DUP2 PUSH2 0x193A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B76 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B96 DUP2 PUSH2 0x1980 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB6 DUP2 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE2 PUSH2 0x1BF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BEE DUP3 DUP3 PUSH2 0x1D59 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C18 JUMPI PUSH2 0x1C17 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST PUSH2 0x1C21 DUP3 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7C DUP3 PUSH2 0x1CBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D12 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CF7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D21 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D3F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1D53 JUMPI PUSH2 0x1D52 PUSH2 0x1DB9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D62 DUP3 PUSH2 0x1E2B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D81 JUMPI PUSH2 0x1D80 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x20C0 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP2 EQ PUSH2 0x20CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20D7 DUP2 PUSH2 0x1C83 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20EE DUP2 PUSH2 0x1C8F JUMP JUMPDEST DUP2 EQ PUSH2 0x20F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x1CDB JUMP JUMPDEST DUP2 EQ PUSH2 0x2110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xA616C3CFCB7AE2793CCDC4E12C0BDFCB8D51636BEC2DFB47D1B4570F7E5294 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"628:16679:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:13:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:5:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:11:-;693:7;719:10;712:17;;640:96;:::o;12768:171:5:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;415:696:12:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;7256:126:5:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:154::-;;;;;:::o;16558:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;9889:890:15:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:10:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:410:19:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;6840:377;;;;:::o;7223:366::-;7365:3;7386:67;7450:2;7445:3;7386:67;:::i;:::-;7379:74;;7462:93;7551:3;7462:93;:::i;:::-;7580:2;7575:3;7571:12;7564:19;;7223:366;;;:::o;7595:::-;7737:3;7758:67;7822:2;7817:3;7758:67;:::i;:::-;7751:74;;7834:93;7923:3;7834:93;:::i;:::-;7952:2;7947:3;7943:12;7936:19;;7595:366;;;:::o;7967:::-;8109:3;8130:67;8194:2;8189:3;8130:67;:::i;:::-;8123:74;;8206:93;8295:3;8206:93;:::i;:::-;8324:2;8319:3;8315:12;8308:19;;7967:366;;;:::o;8339:::-;8481:3;8502:67;8566:2;8561:3;8502:67;:::i;:::-;8495:74;;8578:93;8667:3;8578:93;:::i;:::-;8696:2;8691:3;8687:12;8680:19;;8339:366;;;:::o;8711:::-;8853:3;8874:67;8938:2;8933:3;8874:67;:::i;:::-;8867:74;;8950:93;9039:3;8950:93;:::i;:::-;9068:2;9063:3;9059:12;9052:19;;8711:366;;;:::o;9083:::-;9225:3;9246:67;9310:2;9305:3;9246:67;:::i;:::-;9239:74;;9322:93;9411:3;9322:93;:::i;:::-;9440:2;9435:3;9431:12;9424:19;;9083:366;;;:::o;9455:::-;9597:3;9618:67;9682:2;9677:3;9618:67;:::i;:::-;9611:74;;9694:93;9783:3;9694:93;:::i;:::-;9812:2;9807:3;9803:12;9796:19;;9455:366;;;:::o;9827:::-;9969:3;9990:67;10054:2;10049:3;9990:67;:::i;:::-;9983:74;;10066:93;10155:3;10066:93;:::i;:::-;10184:2;10179:3;10175:12;10168:19;;9827:366;;;:::o;10199:::-;10341:3;10362:67;10426:2;10421:3;10362:67;:::i;:::-;10355:74;;10438:93;10527:3;10438:93;:::i;:::-;10556:2;10551:3;10547:12;10540:19;;10199:366;;;:::o;10571:118::-;10658:24;10676:5;10658:24;:::i;:::-;10653:3;10646:37;10571:118;;:::o;10695:435::-;10875:3;10897:95;10988:3;10979:6;10897:95;:::i;:::-;10890:102;;11009:95;11100:3;11091:6;11009:95;:::i;:::-;11002:102;;11121:3;11114:10;;10695:435;;;;;:::o;11136:222::-;11229:4;11267:2;11256:9;11252:18;11244:26;;11280:71;11348:1;11337:9;11333:17;11324:6;11280:71;:::i;:::-;11136:222;;;;:::o;11364:640::-;11559:4;11597:3;11586:9;11582:19;11574:27;;11611:71;11679:1;11668:9;11664:17;11655:6;11611:71;:::i;:::-;11692:72;11760:2;11749:9;11745:18;11736:6;11692:72;:::i;:::-;11774;11842:2;11831:9;11827:18;11818:6;11774:72;:::i;:::-;11893:9;11887:4;11883:20;11878:2;11867:9;11863:18;11856:48;11921:76;11992:4;11983:6;11921:76;:::i;:::-;11913:84;;11364:640;;;;;;;:::o;12010:210::-;12097:4;12135:2;12124:9;12120:18;12112:26;;12148:65;12210:1;12199:9;12195:17;12186:6;12148:65;:::i;:::-;12010:210;;;;:::o;12226:313::-;12339:4;12377:2;12366:9;12362:18;12354:26;;12426:9;12420:4;12416:20;12412:1;12401:9;12397:17;12390:47;12454:78;12527:4;12518:6;12454:78;:::i;:::-;12446:86;;12226:313;;;;:::o;12545:419::-;12711:4;12749:2;12738:9;12734:18;12726:26;;12798:9;12792:4;12788:20;12784:1;12773:9;12769:17;12762:47;12826:131;12952:4;12826:131;:::i;:::-;12818:139;;12545:419;;;:::o;12970:::-;13136:4;13174:2;13163:9;13159:18;13151:26;;13223:9;13217:4;13213:20;13209:1;13198:9;13194:17;13187:47;13251:131;13377:4;13251:131;:::i;:::-;13243:139;;12970:419;;;:::o;13395:::-;13561:4;13599:2;13588:9;13584:18;13576:26;;13648:9;13642:4;13638:20;13634:1;13623:9;13619:17;13612:47;13676:131;13802:4;13676:131;:::i;:::-;13668:139;;13395:419;;;:::o;13820:::-;13986:4;14024:2;14013:9;14009:18;14001:26;;14073:9;14067:4;14063:20;14059:1;14048:9;14044:17;14037:47;14101:131;14227:4;14101:131;:::i;:::-;14093:139;;13820:419;;;:::o;14245:::-;14411:4;14449:2;14438:9;14434:18;14426:26;;14498:9;14492:4;14488:20;14484:1;14473:9;14469:17;14462:47;14526:131;14652:4;14526:131;:::i;:::-;14518:139;;14245:419;;;:::o;14670:::-;14836:4;14874:2;14863:9;14859:18;14851:26;;14923:9;14917:4;14913:20;14909:1;14898:9;14894:17;14887:47;14951:131;15077:4;14951:131;:::i;:::-;14943:139;;14670:419;;;:::o;15095:::-;15261:4;15299:2;15288:9;15284:18;15276:26;;15348:9;15342:4;15338:20;15334:1;15323:9;15319:17;15312:47;15376:131;15502:4;15376:131;:::i;:::-;15368:139;;15095:419;;;:::o;15520:::-;15686:4;15724:2;15713:9;15709:18;15701:26;;15773:9;15767:4;15763:20;15759:1;15748:9;15744:17;15737:47;15801:131;15927:4;15801:131;:::i;:::-;15793:139;;15520:419;;;:::o;15945:::-;16111:4;16149:2;16138:9;16134:18;16126:26;;16198:9;16192:4;16188:20;16184:1;16173:9;16169:17;16162:47;16226:131;16352:4;16226:131;:::i;:::-;16218:139;;15945:419;;;:::o;16370:222::-;16463:4;16501:2;16490:9;16486:18;16478:26;;16514:71;16582:1;16571:9;16567:17;16558:6;16514:71;:::i;:::-;16370:222;;;;:::o;16598:129::-;16632:6;16659:20;;:::i;:::-;16649:30;;16688:33;16716:4;16708:6;16688:33;:::i;:::-;16598:129;;;:::o;16733:75::-;16766:6;16799:2;16793:9;16783:19;;16733:75;:::o;16814:307::-;16875:4;16965:18;16957:6;16954:30;16951:56;;;16987:18;;:::i;:::-;16951:56;17025:29;17047:6;17025:29;:::i;:::-;17017:37;;17109:4;17103;17099:15;17091:23;;16814:307;;;:::o;17127:98::-;17178:6;17212:5;17206:12;17196:22;;17127:98;;;:::o;17231:99::-;17283:6;17317:5;17311:12;17301:22;;17231:99;;;:::o;17336:168::-;17419:11;17453:6;17448:3;17441:19;17493:4;17488:3;17484:14;17469:29;;17336:168;;;;:::o;17510:169::-;17594:11;17628:6;17623:3;17616:19;17668:4;17663:3;17659:14;17644:29;;17510:169;;;;:::o;17685:148::-;17787:11;17824:3;17809:18;;17685:148;;;;:::o;17839:96::-;17876:7;17905:24;17923:5;17905:24;:::i;:::-;17894:35;;17839:96;;;:::o;17941:90::-;17975:7;18018:5;18011:13;18004:21;17993:32;;17941:90;;;:::o;18037:149::-;18073:7;18113:66;18106:5;18102:78;18091:89;;18037:149;;;:::o;18192:126::-;18229:7;18269:42;18262:5;18258:54;18247:65;;18192:126;;;:::o;18324:77::-;18361:7;18390:5;18379:16;;18324:77;;;:::o;18407:154::-;18491:6;18486:3;18481;18468:30;18553:1;18544:6;18539:3;18535:16;18528:27;18407:154;;;:::o;18567:307::-;18635:1;18645:113;18659:6;18656:1;18653:13;18645:113;;;18744:1;18739:3;18735:11;18729:18;18725:1;18720:3;18716:11;18709:39;18681:2;18678:1;18674:10;18669:15;;18645:113;;;18776:6;18773:1;18770:13;18767:101;;;18856:1;18847:6;18842:3;18838:16;18831:27;18767:101;18616:258;18567:307;;;:::o;18880:320::-;18924:6;18961:1;18955:4;18951:12;18941:22;;19008:1;19002:4;18998:12;19029:18;19019:81;;19085:4;19077:6;19073:17;19063:27;;19019:81;19147:2;19139:6;19136:14;19116:18;19113:38;19110:84;;;19166:18;;:::i;:::-;19110:84;18931:269;18880:320;;;:::o;19206:281::-;19289:27;19311:4;19289:27;:::i;:::-;19281:6;19277:40;19419:6;19407:10;19404:22;19383:18;19371:10;19368:34;19365:62;19362:88;;;19430:18;;:::i;:::-;19362:88;19470:10;19466:2;19459:22;19249:238;19206:281;;:::o;19493:180::-;19541:77;19538:1;19531:88;19638:4;19635:1;19628:15;19662:4;19659:1;19652:15;19679:180;19727:77;19724:1;19717:88;19824:4;19821:1;19814:15;19848:4;19845:1;19838:15;19865:180;19913:77;19910:1;19903:88;20010:4;20007:1;20000:15;20034:4;20031:1;20024:15;20051:117;20160:1;20157;20150:12;20174:117;20283:1;20280;20273:12;20297:117;20406:1;20403;20396:12;20420:117;20529:1;20526;20519:12;20543:102;20584:6;20635:2;20631:7;20626:2;20619:5;20615:14;20611:28;20601:38;;20543:102;;;:::o;20651:232::-;20791:34;20787:1;20779:6;20775:14;20768:58;20860:15;20855:2;20847:6;20843:15;20836:40;20651:232;:::o;20889:237::-;21029:34;21025:1;21017:6;21013:14;21006:58;21098:20;21093:2;21085:6;21081:15;21074:45;20889:237;:::o;21132:224::-;21272:34;21268:1;21260:6;21256:14;21249:58;21341:7;21336:2;21328:6;21324:15;21317:32;21132:224;:::o;21362:223::-;21502:34;21498:1;21490:6;21486:14;21479:58;21571:6;21566:2;21558:6;21554:15;21547:31;21362:223;:::o;21591:175::-;21731:27;21727:1;21719:6;21715:14;21708:51;21591:175;:::o;21772:228::-;21912:34;21908:1;21900:6;21896:14;21889:58;21981:11;21976:2;21968:6;21964:15;21957:36;21772:228;:::o;22006:174::-;22146:26;22142:1;22134:6;22130:14;22123:50;22006:174;:::o;22186:220::-;22326:34;22322:1;22314:6;22310:14;22303:58;22395:3;22390:2;22382:6;22378:15;22371:28;22186:220;:::o;22412:248::-;22552:34;22548:1;22540:6;22536:14;22529:58;22621:31;22616:2;22608:6;22604:15;22597:56;22412:248;:::o;22666:122::-;22739:24;22757:5;22739:24;:::i;:::-;22732:5;22729:35;22719:63;;22778:1;22775;22768:12;22719:63;22666:122;:::o;22794:116::-;22864:21;22879:5;22864:21;:::i;:::-;22857:5;22854:32;22844:60;;22900:1;22897;22890:12;22844:60;22794:116;:::o;22916:120::-;22988:23;23005:5;22988:23;:::i;:::-;22981:5;22978:34;22968:62;;23026:1;23023;23016:12;22968:62;22916:120;:::o;23042:122::-;23115:24;23133:5;23115:24;:::i;:::-;23108:5;23105:35;23095:63;;23154:1;23151;23144:12;23095:63;23042:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1704200","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2924","getApproved(uint256)":"5277","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3025","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3467","transferFrom(address,address,uint256)":"infinite"},"internal":{"__unsafe_increaseBalance(address,uint256)":"infinite","_afterTokenTransfer(address,address,uint256,uint256)":"17","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256,uint256)":"17","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2312","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_ownerOf(uint256)":"2248","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":959,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":961,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":965,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":969,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":973,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":979,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":959,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":961,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":965,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":969,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":973,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":979,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2007,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080fee02d62f18fb661f56930df7c1f126654f6b3a78ce5cc32cdcb32151203fd64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 INVALID 0xE0 0x2D PUSH3 0xF18FB6 PUSH2 0xF569 ADDRESS 0xDF PUSH29 0x1F126654F6B3A78CE5CC32CDCB32151203FD64736F6C63430008070033 ","sourceMap":"194:8964:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080fee02d62f18fb661f56930df7c1f126654f6b3a78ce5cc32cdcb32151203fd64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 INVALID 0xE0 0x2D PUSH3 0xF18FB6 PUSH2 0xF569 ADDRESS 0xDF PUSH29 0x1F126654F6B3A78CE5CC32CDCB32151203FD64736F6C63430008070033 ","sourceMap":"194:8964:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e54bbe508058abc16ba9ab18b15d60304dcfbec11b06791a21ce393f6c77ed564736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SLOAD 0xBB 0xE5 ADDMOD SDIV DUP11 0xBC AND 0xBA SWAP11 0xB1 DUP12 ISZERO 0xD6 SUB DIV 0xDC 0xFB 0xEC GT 0xB0 PUSH8 0x91A21CE393F6C77E 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"188:2065:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e54bbe508058abc16ba9ab18b15d60304dcfbec11b06791a21ce393f6c77ed564736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SLOAD 0xBB 0xE5 ADDMOD SDIV DUP11 0xBC AND 0xBA SWAP11 0xB1 DUP12 ISZERO 0xD6 SUB DIV 0xDC 0xFB 0xEC GT 0xB0 PUSH8 0x91A21CE393F6C77E 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"188:2065:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220adc8bca8ac6496ed9b3beb6b4c3a022305dad7b59bb328b83de1bdab7925719c64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC8 0xBC 0xA8 0xAC PUSH5 0x96ED9B3BEB PUSH12 0x4C3A022305DAD7B59BB328B8 RETURNDATASIZE 0xE1 0xBD 0xAB PUSH26 0x25719C64736F6C63430008070033000000000000000000000000 ","sourceMap":"202:12302:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220adc8bca8ac6496ed9b3beb6b4c3a022305dad7b59bb328b83de1bdab7925719c64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC8 0xBC 0xA8 0xAC PUSH5 0x96ED9B3BEB PUSH12 0x4C3A022305DAD7B59BB328B8 RETURNDATASIZE 0xE1 0xBD 0xAB PUSH26 0x25719C64736F6C63430008070033000000000000000000000000 ","sourceMap":"202:12302:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BasicNft.sol":{"BasicNft":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"TOKEN_URI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintNft","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3596":{"entryPoint":null,"id":3596,"parameterSlots":0,"returnSlots":0},"@_996":{"entryPoint":null,"id":996,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":368,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":422,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:19","statements":[{"body":{"nodeType":"YulBlock","src":"58:269:19","statements":[{"nodeType":"YulAssignment","src":"68:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"82:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"88:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"78:3:19"},"nodeType":"YulFunctionCall","src":"78:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"68:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"99:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"129:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"125:3:19"},"nodeType":"YulFunctionCall","src":"125:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"103:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"176:51:19","statements":[{"nodeType":"YulAssignment","src":"190:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"204:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"212:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"200:3:19"},"nodeType":"YulFunctionCall","src":"200:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"190:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"156:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"149:6:19"},"nodeType":"YulFunctionCall","src":"149:26:19"},"nodeType":"YulIf","src":"146:81:19"},{"body":{"nodeType":"YulBlock","src":"279:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"293:16:19"},"nodeType":"YulFunctionCall","src":"293:18:19"},"nodeType":"YulExpressionStatement","src":"293:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"243:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"266:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"274:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"263:2:19"},"nodeType":"YulFunctionCall","src":"263:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"240:2:19"},"nodeType":"YulFunctionCall","src":"240:38:19"},"nodeType":"YulIf","src":"237:84:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"51:6:19","type":""}],"src":"7:320:19"},{"body":{"nodeType":"YulBlock","src":"361:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"378:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"381:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"371:6:19"},"nodeType":"YulFunctionCall","src":"371:88:19"},"nodeType":"YulExpressionStatement","src":"371:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"475:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"478:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"468:6:19"},"nodeType":"YulFunctionCall","src":"468:15:19"},"nodeType":"YulExpressionStatement","src":"468:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"499:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"492:6:19"},"nodeType":"YulFunctionCall","src":"492:15:19"},"nodeType":"YulExpressionStatement","src":"492:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"333:180:19"}]},"contents":"{\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600581526020017f446f6769650000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f444f470000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620000c0565b508060019080519060200190620000af929190620000c0565b5050506000600681905550620001d5565b828054620000ce9062000170565b90600052602060002090601f016020900481019282620000f257600085556200013e565b82601f106200010d57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013d57825182559160200191906001019062000120565b5b5090506200014d919062000151565b5090565b5b808211156200016c57600081600090555060010162000152565b5090565b600060028204905060018216806200018957607f821691505b60208210811415620001a0576200019f620001a6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61235980620001e56000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102e7578063e985e9c51461031757610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a919061182e565b610347565b60405161012c9190611b3c565b60405180910390f35b61013d610429565b60405161014a9190611b57565b60405180910390f35b61016d60048036038101906101689190611888565b6104bb565b60405161017a9190611ad5565b60405180910390f35b61019d600480360381019061019891906117ee565b610501565b005b6101b960048036038101906101b491906116d8565b610619565b005b6101d560048036038101906101d091906116d8565b610679565b005b6101f160048036038101906101ec9190611888565b610699565b6040516101fe9190611ad5565b60405180910390f35b61020f610720565b60405161021c9190611cd9565b60405180910390f35b61023f600480360381019061023a919061166b565b61072a565b60405161024c9190611cd9565b60405180910390f35b61025d6107e2565b60405161026a9190611b57565b60405180910390f35b61027b6107fe565b6040516102889190611b57565b60405180910390f35b6102ab60048036038101906102a691906117ae565b610890565b005b6102c760048036038101906102c2919061172b565b6108a6565b005b6102d1610908565b6040516102de9190611cd9565b60405180910390f35b61030160048036038101906102fc9190611888565b610933565b60405161030e9190611b57565b60405180910390f35b610331600480360381019061032c9190611698565b610955565b60405161033e9190611b3c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061041257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104225750610421826109e9565b5b9050919050565b60606000805461043890611e8e565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611e8e565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b5050505050905090565b60006104c682610a53565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061050c82610699565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490611c99565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661059c610a9e565b73ffffffffffffffffffffffffffffffffffffffff1614806105cb57506105ca816105c5610a9e565b610955565b5b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190611cb9565b60405180910390fd5b6106148383610aa6565b505050565b61062a610624610a9e565b82610b5f565b610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090611b79565b60405180910390fd5b610674838383610bf4565b505050565b610694838383604051806020016040528060008152506108a6565b505050565b6000806106a583610eee565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e90611c79565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290611c39565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060800160405280605781526020016122cd6057913981565b60606001805461080d90611e8e565b80601f016020809104026020016040519081016040528092919081815260200182805461083990611e8e565b80156108865780601f1061085b57610100808354040283529160200191610886565b820191906000526020600020905b81548152906001019060200180831161086957829003601f168201915b5050505050905090565b6108a261089b610a9e565b8383610f2b565b5050565b6108b76108b1610a9e565b83610b5f565b6108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611b79565b60405180910390fd5b61090284848484611098565b50505050565b6000610916336006546110f4565b60016006546109259190611d82565b600681905550600654905090565b60606040518060800160405280605781526020016122cd605791399050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a5c81611112565b610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9290611c79565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b1983610699565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b6b83610699565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bad5750610bac8185610955565b5b80610beb57508373ffffffffffffffffffffffffffffffffffffffff16610bd3846104bb565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c1482610699565b73ffffffffffffffffffffffffffffffffffffffff1614610c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6190611bb9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd190611bf9565b60405180910390fd5b610ce78383836001611153565b8273ffffffffffffffffffffffffffffffffffffffff16610d0782610699565b73ffffffffffffffffffffffffffffffffffffffff1614610d5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5490611bb9565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610ee98383836001611159565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9190611c19565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161108b9190611b3c565b60405180910390a3505050565b6110a3848484610bf4565b6110af8484848461115f565b6110ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e590611b99565b60405180910390fd5b50505050565b61110e8282604051806020016040528060008152506112f6565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff1661113483610eee565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111808473ffffffffffffffffffffffffffffffffffffffff16611351565b156112e9578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111a9610a9e565b8786866040518563ffffffff1660e01b81526004016111cb9493929190611af0565b602060405180830381600087803b1580156111e557600080fd5b505af192505050801561121657506040513d601f19601f82011682018060405250810190611213919061185b565b60015b611299573d8060008114611246576040519150601f19603f3d011682016040523d82523d6000602084013e61124b565b606091505b50600081511415611291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128890611b99565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506112ee565b600190505b949350505050565b6113008383611374565b61130d600084848461115f565b61134c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134390611b99565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113db90611c59565b60405180910390fd5b6113ed81611112565b1561142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142490611bd9565b60405180910390fd5b61143b600083836001611153565b61144481611112565b15611484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147b90611bd9565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461158e600083836001611159565b5050565b60006115a56115a084611d19565b611cf4565b9050828152602081018484840111156115c1576115c0611f83565b5b6115cc848285611e4c565b509392505050565b6000813590506115e381612270565b92915050565b6000813590506115f881612287565b92915050565b60008135905061160d8161229e565b92915050565b6000815190506116228161229e565b92915050565b600082601f83011261163d5761163c611f7e565b5b813561164d848260208601611592565b91505092915050565b600081359050611665816122b5565b92915050565b60006020828403121561168157611680611f8d565b5b600061168f848285016115d4565b91505092915050565b600080604083850312156116af576116ae611f8d565b5b60006116bd858286016115d4565b92505060206116ce858286016115d4565b9150509250929050565b6000806000606084860312156116f1576116f0611f8d565b5b60006116ff868287016115d4565b9350506020611710868287016115d4565b925050604061172186828701611656565b9150509250925092565b6000806000806080858703121561174557611744611f8d565b5b6000611753878288016115d4565b9450506020611764878288016115d4565b935050604061177587828801611656565b925050606085013567ffffffffffffffff81111561179657611795611f88565b5b6117a287828801611628565b91505092959194509250565b600080604083850312156117c5576117c4611f8d565b5b60006117d3858286016115d4565b92505060206117e4858286016115e9565b9150509250929050565b6000806040838503121561180557611804611f8d565b5b6000611813858286016115d4565b925050602061182485828601611656565b9150509250929050565b60006020828403121561184457611843611f8d565b5b6000611852848285016115fe565b91505092915050565b60006020828403121561187157611870611f8d565b5b600061187f84828501611613565b91505092915050565b60006020828403121561189e5761189d611f8d565b5b60006118ac84828501611656565b91505092915050565b6118be81611dd8565b82525050565b6118cd81611dea565b82525050565b60006118de82611d4a565b6118e88185611d60565b93506118f8818560208601611e5b565b61190181611f92565b840191505092915050565b600061191782611d55565b6119218185611d71565b9350611931818560208601611e5b565b61193a81611f92565b840191505092915050565b6000611952602d83611d71565b915061195d82611fa3565b604082019050919050565b6000611975603283611d71565b915061198082611ff2565b604082019050919050565b6000611998602583611d71565b91506119a382612041565b604082019050919050565b60006119bb601c83611d71565b91506119c682612090565b602082019050919050565b60006119de602483611d71565b91506119e9826120b9565b604082019050919050565b6000611a01601983611d71565b9150611a0c82612108565b602082019050919050565b6000611a24602983611d71565b9150611a2f82612131565b604082019050919050565b6000611a47602083611d71565b9150611a5282612180565b602082019050919050565b6000611a6a601883611d71565b9150611a75826121a9565b602082019050919050565b6000611a8d602183611d71565b9150611a98826121d2565b604082019050919050565b6000611ab0603d83611d71565b9150611abb82612221565b604082019050919050565b611acf81611e42565b82525050565b6000602082019050611aea60008301846118b5565b92915050565b6000608082019050611b0560008301876118b5565b611b1260208301866118b5565b611b1f6040830185611ac6565b8181036060830152611b3181846118d3565b905095945050505050565b6000602082019050611b5160008301846118c4565b92915050565b60006020820190508181036000830152611b71818461190c565b905092915050565b60006020820190508181036000830152611b9281611945565b9050919050565b60006020820190508181036000830152611bb281611968565b9050919050565b60006020820190508181036000830152611bd28161198b565b9050919050565b60006020820190508181036000830152611bf2816119ae565b9050919050565b60006020820190508181036000830152611c12816119d1565b9050919050565b60006020820190508181036000830152611c32816119f4565b9050919050565b60006020820190508181036000830152611c5281611a17565b9050919050565b60006020820190508181036000830152611c7281611a3a565b9050919050565b60006020820190508181036000830152611c9281611a5d565b9050919050565b60006020820190508181036000830152611cb281611a80565b9050919050565b60006020820190508181036000830152611cd281611aa3565b9050919050565b6000602082019050611cee6000830184611ac6565b92915050565b6000611cfe611d0f565b9050611d0a8282611ec0565b919050565b6000604051905090565b600067ffffffffffffffff821115611d3457611d33611f4f565b5b611d3d82611f92565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611d8d82611e42565b9150611d9883611e42565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611dcd57611dcc611ef1565b5b828201905092915050565b6000611de382611e22565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611e79578082015181840152602081019050611e5e565b83811115611e88576000848401525b50505050565b60006002820490506001821680611ea657607f821691505b60208210811415611eba57611eb9611f20565b5b50919050565b611ec982611f92565b810181811067ffffffffffffffff82111715611ee857611ee7611f4f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61227981611dd8565b811461228457600080fd5b50565b61229081611dea565b811461229b57600080fd5b50565b6122a781611df6565b81146122b257600080fd5b50565b6122be81611e42565b81146122c957600080fd5b5056fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea2646970667358221220abafd534818d929fe37cbe3d97e39e3948b86e11b5ae6f82778c4802183dec2e64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446F676965000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x444F470000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x1D5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xCE SWAP1 PUSH3 0x170 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x10D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x13E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x13D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x120 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x14D SWAP2 SWAP1 PUSH3 0x151 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x16C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x152 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x189 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x19F PUSH3 0x1A6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2359 DUP1 PUSH3 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xC2229FEA EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x317 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x78CE9035 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x412 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x422 JUMPI POP PUSH2 0x421 DUP3 PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x438 SWAP1 PUSH2 0x1E8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x464 SWAP1 PUSH2 0x1E8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x486 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x494 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50C DUP3 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x574 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x59C PUSH2 0xA9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5CB JUMPI POP PUSH2 0x5CA DUP2 PUSH2 0x5C5 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST JUMPDEST PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x601 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x614 DUP4 DUP4 PUSH2 0xAA6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x62A PUSH2 0x624 PUSH2 0xA9E JUMP JUMPDEST DUP3 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x660 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x674 DUP4 DUP4 DUP4 PUSH2 0xBF4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x694 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8A6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6A5 DUP4 PUSH2 0xEEE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22CD PUSH1 0x57 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x80D SWAP1 PUSH2 0x1E8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x839 SWAP1 PUSH2 0x1E8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x886 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x886 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x869 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8A2 PUSH2 0x89B PUSH2 0xA9E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8B7 PUSH2 0x8B1 PUSH2 0xA9E JUMP JUMPDEST DUP4 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x902 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1098 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x916 CALLER PUSH1 0x6 SLOAD PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22CD PUSH1 0x57 SWAP2 CODECOPY SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5C DUP2 PUSH2 0x1112 JUMP JUMPDEST PUSH2 0xA9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA92 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB19 DUP4 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB6B DUP4 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xBAD JUMPI POP PUSH2 0xBAC DUP2 DUP6 PUSH2 0x955 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xBEB JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBD3 DUP5 PUSH2 0x4BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC14 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC61 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD1 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1153 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD07 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD54 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xEE9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF91 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x108B SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10A3 DUP5 DUP5 DUP5 PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x10AF DUP5 DUP5 DUP5 DUP5 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E5 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x110E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x12F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1134 DUP4 PUSH2 0xEEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1180 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1351 JUMP JUMPDEST ISZERO PUSH2 0x12E9 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11A9 PUSH2 0xA9E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1216 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1299 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1246 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x124B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1291 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1288 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1300 DUP4 DUP4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x130D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1343 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DB SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13ED DUP2 PUSH2 0x1112 JUMP JUMPDEST ISZERO PUSH2 0x142D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1424 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x143B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x1444 DUP2 PUSH2 0x1112 JUMP JUMPDEST ISZERO PUSH2 0x1484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147B SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x158E PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A5 PUSH2 0x15A0 DUP5 PUSH2 0x1D19 JUMP JUMPDEST PUSH2 0x1CF4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15C1 JUMPI PUSH2 0x15C0 PUSH2 0x1F83 JUMP JUMPDEST JUMPDEST PUSH2 0x15CC DUP5 DUP3 DUP6 PUSH2 0x1E4C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E3 DUP2 PUSH2 0x2270 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F8 DUP2 PUSH2 0x2287 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x160D DUP2 PUSH2 0x229E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1622 DUP2 PUSH2 0x229E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x163D JUMPI PUSH2 0x163C PUSH2 0x1F7E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x164D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1665 DUP2 PUSH2 0x22B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1681 JUMPI PUSH2 0x1680 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168F DUP5 DUP3 DUP6 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AF JUMPI PUSH2 0x16AE PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16BD DUP6 DUP3 DUP7 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16CE DUP6 DUP3 DUP7 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16F1 JUMPI PUSH2 0x16F0 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16FF DUP7 DUP3 DUP8 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1710 DUP7 DUP3 DUP8 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1721 DUP7 DUP3 DUP8 ADD PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1745 JUMPI PUSH2 0x1744 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1753 DUP8 DUP3 DUP9 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1764 DUP8 DUP3 DUP9 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1775 DUP8 DUP3 DUP9 ADD PUSH2 0x1656 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1796 JUMPI PUSH2 0x1795 PUSH2 0x1F88 JUMP JUMPDEST JUMPDEST PUSH2 0x17A2 DUP8 DUP3 DUP9 ADD PUSH2 0x1628 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP6 DUP3 DUP7 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17E4 DUP6 DUP3 DUP7 ADD PUSH2 0x15E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1805 JUMPI PUSH2 0x1804 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1813 DUP6 DUP3 DUP7 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1824 DUP6 DUP3 DUP7 ADD PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1844 JUMPI PUSH2 0x1843 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1852 DUP5 DUP3 DUP6 ADD PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1871 JUMPI PUSH2 0x1870 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x187F DUP5 DUP3 DUP6 ADD PUSH2 0x1613 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189E JUMPI PUSH2 0x189D PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18AC DUP5 DUP3 DUP6 ADD PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18BE DUP2 PUSH2 0x1DD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18CD DUP2 PUSH2 0x1DEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DE DUP3 PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x18E8 DUP2 DUP6 PUSH2 0x1D60 JUMP JUMPDEST SWAP4 POP PUSH2 0x18F8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x1901 DUP2 PUSH2 0x1F92 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1917 DUP3 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x1921 DUP2 DUP6 PUSH2 0x1D71 JUMP JUMPDEST SWAP4 POP PUSH2 0x1931 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x193A DUP2 PUSH2 0x1F92 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1952 PUSH1 0x2D DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x195D DUP3 PUSH2 0x1FA3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1975 PUSH1 0x32 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1980 DUP3 PUSH2 0x1FF2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1998 PUSH1 0x25 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A3 DUP3 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BB PUSH1 0x1C DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C6 DUP3 PUSH2 0x2090 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DE PUSH1 0x24 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E9 DUP3 PUSH2 0x20B9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A01 PUSH1 0x19 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0C DUP3 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A24 PUSH1 0x29 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2F DUP3 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A47 PUSH1 0x20 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A52 DUP3 PUSH2 0x2180 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6A PUSH1 0x18 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A75 DUP3 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8D PUSH1 0x21 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A98 DUP3 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB0 PUSH1 0x3D DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABB DUP3 PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACF DUP2 PUSH2 0x1E42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B05 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x1B12 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x1B1F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AC6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B31 DUP2 DUP5 PUSH2 0x18D3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B71 DUP2 DUP5 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B92 DUP2 PUSH2 0x1945 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB2 DUP2 PUSH2 0x1968 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD2 DUP2 PUSH2 0x198B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF2 DUP2 PUSH2 0x19AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C12 DUP2 PUSH2 0x19D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 PUSH2 0x19F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C52 DUP2 PUSH2 0x1A17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C72 DUP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C92 DUP2 PUSH2 0x1A5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB2 DUP2 PUSH2 0x1A80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD2 DUP2 PUSH2 0x1AA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CFE PUSH2 0x1D0F JUMP JUMPDEST SWAP1 POP PUSH2 0x1D0A DUP3 DUP3 PUSH2 0x1EC0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D34 JUMPI PUSH2 0x1D33 PUSH2 0x1F4F JUMP JUMPDEST JUMPDEST PUSH2 0x1D3D DUP3 PUSH2 0x1F92 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8D DUP3 PUSH2 0x1E42 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D98 DUP4 PUSH2 0x1E42 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1DCD JUMPI PUSH2 0x1DCC PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE3 DUP3 PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E79 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E5E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E88 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EA6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1EBA JUMPI PUSH2 0x1EB9 PUSH2 0x1F20 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC9 DUP3 PUSH2 0x1F92 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EE8 JUMPI PUSH2 0x1EE7 PUSH2 0x1F4F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2279 DUP2 PUSH2 0x1DD8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2290 DUP2 PUSH2 0x1DEA JUMP JUMPDEST DUP2 EQ PUSH2 0x229B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22A7 DUP2 PUSH2 0x1DF6 JUMP JUMPDEST DUP2 EQ PUSH2 0x22B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22BE DUP2 PUSH2 0x1E42 JUMP JUMPDEST DUP2 EQ PUSH2 0x22C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH10 0x7066733A2F2F62616679 PUSH3 0x656967 CALLER CALLDATACOPY PUSH10 0x6F6972373673376D6735 PUSH16 0x6F6265746E636F6A636D336333687861 PUSH20 0x79643472766964346A71687934676B6168656734 0x2F EXTCODEHASH PUSH7 0x696C656E616D65 RETURNDATASIZE ADDRESS 0x2D POP SSTORE SELFBALANCE 0x2E PUSH11 0x736F6EA264697066735822 SLT KECCAK256 0xAB 0xAF 0xD5 CALLVALUE DUP2 DUP14 SWAP3 SWAP16 0xE3 PUSH29 0xBE3D97E39E3948B86E11B5AE6F82778C4802183DEC2E64736F6C634300 ADDMOD SMOD STOP CALLER ","sourceMap":"134:698:16:-:0;;;343:72;;;;;;;;;;1390:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;407:1:16::1;390:14;:18;;;;134:698:::0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:19:-;51:6;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:81;;212:4;204:6;200:17;190:27;;146:81;274:2;266:6;263:14;243:18;240:38;237:84;;;293:18;;:::i;:::-;237:84;58:269;7:320;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;134:698:16;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@TOKEN_URI_3582":{"entryPoint":2018,"id":3582,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_1844":{"entryPoint":4441,"id":1844,"parameterSlots":4,"returnSlots":0},"@_approve_1710":{"entryPoint":2726,"id":1710,"parameterSlots":2,"returnSlots":0},"@_beforeTokenTransfer_1831":{"entryPoint":4435,"id":1831,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_1818":{"entryPoint":4447,"id":1818,"parameterSlots":4,"returnSlots":1},"@_exists_1379":{"entryPoint":4370,"id":1379,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1413":{"entryPoint":2911,"id":1413,"parameterSlots":2,"returnSlots":1},"@_mint_1534":{"entryPoint":4980,"id":1534,"parameterSlots":2,"returnSlots":0},"@_msgSender_2488":{"entryPoint":2718,"id":2488,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1361":{"entryPoint":3822,"id":1361,"parameterSlots":1,"returnSlots":1},"@_requireMinted_1756":{"entryPoint":2643,"id":1756,"parameterSlots":1,"returnSlots":0},"@_safeMint_1428":{"entryPoint":4340,"id":1428,"parameterSlots":2,"returnSlots":0},"@_safeMint_1457":{"entryPoint":4854,"id":1457,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1348":{"entryPoint":4248,"id":1348,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1742":{"entryPoint":3883,"id":1742,"parameterSlots":3,"returnSlots":0},"@_transfer_1686":{"entryPoint":3060,"id":1686,"parameterSlots":3,"returnSlots":0},"@approve_1190":{"entryPoint":1281,"id":1190,"parameterSlots":2,"returnSlots":0},"@balanceOf_1051":{"entryPoint":1834,"id":1051,"parameterSlots":1,"returnSlots":1},"@getApproved_1208":{"entryPoint":1211,"id":1208,"parameterSlots":1,"returnSlots":1},"@getTokenCounter_3635":{"entryPoint":1824,"id":3635,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_1243":{"entryPoint":2389,"id":1243,"parameterSlots":2,"returnSlots":1},"@isContract_2164":{"entryPoint":4945,"id":2164,"parameterSlots":1,"returnSlots":1},"@mintNft_3616":{"entryPoint":2312,"id":3616,"parameterSlots":0,"returnSlots":1},"@name_1089":{"entryPoint":1065,"id":1089,"parameterSlots":0,"returnSlots":1},"@ownerOf_1079":{"entryPoint":1689,"id":1079,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1289":{"entryPoint":1657,"id":1289,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1319":{"entryPoint":2214,"id":1319,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1225":{"entryPoint":2192,"id":1225,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1027":{"entryPoint":839,"id":1027,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2696":{"entryPoint":2537,"id":2696,"parameterSlots":1,"returnSlots":1},"@symbol_1099":{"entryPoint":2046,"id":1099,"parameterSlots":0,"returnSlots":1},"@tokenURI_3627":{"entryPoint":2355,"id":3627,"parameterSlots":1,"returnSlots":1},"@transferFrom_1270":{"entryPoint":1561,"id":1270,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5522,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5609,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5630,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":5651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":5672,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5718,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5739,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5784,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5848,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5931,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6062,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6126,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6325,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6340,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6355,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6412,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":6469,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":6504,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":6539,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":6574,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":6609,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":6644,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":6679,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":6714,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":6749,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6784,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":6819,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6854,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6896,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6972,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7033,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7065,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7097,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7129,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7161,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7193,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7225,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7257,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7289,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7321,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7353,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7385,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7412,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7439,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7449,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7498,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7509,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":7520,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7537,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7554,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7658,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7670,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7714,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7746,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":7756,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":7771,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7822,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7872,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":7921,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7968,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8015,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8062,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8067,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8072,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8077,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8082,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":8099,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8178,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":8257,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":8336,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8377,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8456,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":8497,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":8576,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":8617,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":8658,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":8737,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8816,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8839,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":8862,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8885,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24466:19","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:19","statements":[{"nodeType":"YulAssignment","src":"100:74:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:19"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:19"},"nodeType":"YulFunctionCall","src":"125:48:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:19"},"nodeType":"YulFunctionCall","src":"109:65:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:19"},"nodeType":"YulFunctionCall","src":"183:21:19"},"nodeType":"YulExpressionStatement","src":"183:21:19"},{"nodeType":"YulVariableDeclaration","src":"213:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:19"},"nodeType":"YulFunctionCall","src":"224:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:19"},"nodeType":"YulFunctionCall","src":"280:79:19"},"nodeType":"YulExpressionStatement","src":"280:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:19"},"nodeType":"YulFunctionCall","src":"255:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:19"},"nodeType":"YulFunctionCall","src":"252:25:19"},"nodeType":"YulIf","src":"249:112:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:19"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:19"},"nodeType":"YulFunctionCall","src":"370:41:19"},"nodeType":"YulExpressionStatement","src":"370:41:19"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:19","type":""}],"src":"7:410:19"},{"body":{"nodeType":"YulBlock","src":"475:87:19","statements":[{"nodeType":"YulAssignment","src":"485:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:19"},"nodeType":"YulFunctionCall","src":"494:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:19"},"nodeType":"YulFunctionCall","src":"523:33:19"},"nodeType":"YulExpressionStatement","src":"523:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:19","type":""}],"src":"423:139:19"},{"body":{"nodeType":"YulBlock","src":"617:84:19","statements":[{"nodeType":"YulAssignment","src":"627:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"649:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"636:12:19"},"nodeType":"YulFunctionCall","src":"636:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"627:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"689:5:19"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"665:23:19"},"nodeType":"YulFunctionCall","src":"665:30:19"},"nodeType":"YulExpressionStatement","src":"665:30:19"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"603:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"611:5:19","type":""}],"src":"568:133:19"},{"body":{"nodeType":"YulBlock","src":"758:86:19","statements":[{"nodeType":"YulAssignment","src":"768:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"790:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"777:12:19"},"nodeType":"YulFunctionCall","src":"777:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"768:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"832:5:19"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"806:25:19"},"nodeType":"YulFunctionCall","src":"806:32:19"},"nodeType":"YulExpressionStatement","src":"806:32:19"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"736:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"744:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"752:5:19","type":""}],"src":"707:137:19"},{"body":{"nodeType":"YulBlock","src":"912:79:19","statements":[{"nodeType":"YulAssignment","src":"922:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"937:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"931:5:19"},"nodeType":"YulFunctionCall","src":"931:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:19"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"953:25:19"},"nodeType":"YulFunctionCall","src":"953:32:19"},"nodeType":"YulExpressionStatement","src":"953:32:19"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"890:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"898:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"906:5:19","type":""}],"src":"850:141:19"},{"body":{"nodeType":"YulBlock","src":"1071:277:19","statements":[{"body":{"nodeType":"YulBlock","src":"1120:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1122:77:19"},"nodeType":"YulFunctionCall","src":"1122:79:19"},"nodeType":"YulExpressionStatement","src":"1122:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1099:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:19"},"nodeType":"YulFunctionCall","src":"1095:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"1114:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:19"},"nodeType":"YulFunctionCall","src":"1091:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1084:6:19"},"nodeType":"YulFunctionCall","src":"1084:35:19"},"nodeType":"YulIf","src":"1081:122:19"},{"nodeType":"YulVariableDeclaration","src":"1212:34:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1239:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1226:12:19"},"nodeType":"YulFunctionCall","src":"1226:20:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1216:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1255:87:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1315:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1323:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:19"},"nodeType":"YulFunctionCall","src":"1311:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"1330:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"1338:3:19"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1264:46:19"},"nodeType":"YulFunctionCall","src":"1264:78:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1255:5:19"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1049:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1057:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1065:5:19","type":""}],"src":"1010:338:19"},{"body":{"nodeType":"YulBlock","src":"1406:87:19","statements":[{"nodeType":"YulAssignment","src":"1416:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1438:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1425:12:19"},"nodeType":"YulFunctionCall","src":"1425:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1416:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1481:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1454:26:19"},"nodeType":"YulFunctionCall","src":"1454:33:19"},"nodeType":"YulExpressionStatement","src":"1454:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1384:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1392:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:19","type":""}],"src":"1354:139:19"},{"body":{"nodeType":"YulBlock","src":"1565:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"1611:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1613:77:19"},"nodeType":"YulFunctionCall","src":"1613:79:19"},"nodeType":"YulExpressionStatement","src":"1613:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1586:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1582:3:19"},"nodeType":"YulFunctionCall","src":"1582:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1607:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1578:3:19"},"nodeType":"YulFunctionCall","src":"1578:32:19"},"nodeType":"YulIf","src":"1575:119:19"},{"nodeType":"YulBlock","src":"1704:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1719:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1733:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1723:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1748:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1794:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:19"},"nodeType":"YulFunctionCall","src":"1779:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1803:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1758:20:19"},"nodeType":"YulFunctionCall","src":"1758:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1748:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1535:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1546:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1558:6:19","type":""}],"src":"1499:329:19"},{"body":{"nodeType":"YulBlock","src":"1917:391:19","statements":[{"body":{"nodeType":"YulBlock","src":"1963:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1965:77:19"},"nodeType":"YulFunctionCall","src":"1965:79:19"},"nodeType":"YulExpressionStatement","src":"1965:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1938:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1934:3:19"},"nodeType":"YulFunctionCall","src":"1934:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1959:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1930:3:19"},"nodeType":"YulFunctionCall","src":"1930:32:19"},"nodeType":"YulIf","src":"1927:119:19"},{"nodeType":"YulBlock","src":"2056:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2071:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2085:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2075:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2100:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2146:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2131:3:19"},"nodeType":"YulFunctionCall","src":"2131:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2155:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2110:20:19"},"nodeType":"YulFunctionCall","src":"2110:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2100:6:19"}]}]},{"nodeType":"YulBlock","src":"2183:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2198:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2212:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2202:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2228:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2274:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:19"},"nodeType":"YulFunctionCall","src":"2259:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2283:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2238:20:19"},"nodeType":"YulFunctionCall","src":"2238:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2228:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1879:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1890:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1902:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1910:6:19","type":""}],"src":"1834:474:19"},{"body":{"nodeType":"YulBlock","src":"2414:519:19","statements":[{"body":{"nodeType":"YulBlock","src":"2460:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2462:77:19"},"nodeType":"YulFunctionCall","src":"2462:79:19"},"nodeType":"YulExpressionStatement","src":"2462:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2435:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2444:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2431:3:19"},"nodeType":"YulFunctionCall","src":"2431:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2456:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2427:3:19"},"nodeType":"YulFunctionCall","src":"2427:32:19"},"nodeType":"YulIf","src":"2424:119:19"},{"nodeType":"YulBlock","src":"2553:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2568:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2582:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2572:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2597:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2632:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2643:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2628:3:19"},"nodeType":"YulFunctionCall","src":"2628:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2652:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2607:20:19"},"nodeType":"YulFunctionCall","src":"2607:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:19"}]}]},{"nodeType":"YulBlock","src":"2680:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2709:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2725:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2771:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2756:3:19"},"nodeType":"YulFunctionCall","src":"2756:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2780:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2735:20:19"},"nodeType":"YulFunctionCall","src":"2735:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2725:6:19"}]}]},{"nodeType":"YulBlock","src":"2808:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2823:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2837:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2827:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:19"},"nodeType":"YulFunctionCall","src":"2884:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2863:20:19"},"nodeType":"YulFunctionCall","src":"2863:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2853:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2368:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2379:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2391:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2399:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2407:6:19","type":""}],"src":"2314:619:19"},{"body":{"nodeType":"YulBlock","src":"3065:817:19","statements":[{"body":{"nodeType":"YulBlock","src":"3112:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3114:77:19"},"nodeType":"YulFunctionCall","src":"3114:79:19"},"nodeType":"YulExpressionStatement","src":"3114:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3086:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3095:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3082:3:19"},"nodeType":"YulFunctionCall","src":"3082:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3107:3:19","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3078:3:19"},"nodeType":"YulFunctionCall","src":"3078:33:19"},"nodeType":"YulIf","src":"3075:120:19"},{"nodeType":"YulBlock","src":"3205:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3220:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3234:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3224:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3249:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3295:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:19"},"nodeType":"YulFunctionCall","src":"3280:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3304:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3259:20:19"},"nodeType":"YulFunctionCall","src":"3259:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3249:6:19"}]}]},{"nodeType":"YulBlock","src":"3332:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3361:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:19"},"nodeType":"YulFunctionCall","src":"3408:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3387:20:19"},"nodeType":"YulFunctionCall","src":"3387:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3377:6:19"}]}]},{"nodeType":"YulBlock","src":"3460:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3475:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3479:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3505:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3551:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:19"},"nodeType":"YulFunctionCall","src":"3536:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3560:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3515:20:19"},"nodeType":"YulFunctionCall","src":"3515:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3505:6:19"}]}]},{"nodeType":"YulBlock","src":"3588:287:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3603:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3634:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3645:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3630:3:19"},"nodeType":"YulFunctionCall","src":"3630:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3617:12:19"},"nodeType":"YulFunctionCall","src":"3617:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3607:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"3696:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3698:77:19"},"nodeType":"YulFunctionCall","src":"3698:79:19"},"nodeType":"YulExpressionStatement","src":"3698:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3668:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3676:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3665:2:19"},"nodeType":"YulFunctionCall","src":"3665:30:19"},"nodeType":"YulIf","src":"3662:117:19"},{"nodeType":"YulAssignment","src":"3793:72:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:19"},"nodeType":"YulFunctionCall","src":"3833:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3857:7:19"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3803:29:19"},"nodeType":"YulFunctionCall","src":"3803:62:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3793:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3011:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3022:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3034:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3042:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3050:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3058:6:19","type":""}],"src":"2939:943:19"},{"body":{"nodeType":"YulBlock","src":"3968:388:19","statements":[{"body":{"nodeType":"YulBlock","src":"4014:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4016:77:19"},"nodeType":"YulFunctionCall","src":"4016:79:19"},"nodeType":"YulExpressionStatement","src":"4016:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3989:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3985:3:19"},"nodeType":"YulFunctionCall","src":"3985:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4010:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3981:3:19"},"nodeType":"YulFunctionCall","src":"3981:32:19"},"nodeType":"YulIf","src":"3978:119:19"},{"nodeType":"YulBlock","src":"4107:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4122:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4136:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4126:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4151:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4186:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4197:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4182:3:19"},"nodeType":"YulFunctionCall","src":"4182:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4206:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4161:20:19"},"nodeType":"YulFunctionCall","src":"4161:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4151:6:19"}]}]},{"nodeType":"YulBlock","src":"4234:115:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4249:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4263:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4253:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4279:60:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4322:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:19"},"nodeType":"YulFunctionCall","src":"4307:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4331:7:19"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4289:17:19"},"nodeType":"YulFunctionCall","src":"4289:50:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4279:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3941:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3953:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3961:6:19","type":""}],"src":"3888:468:19"},{"body":{"nodeType":"YulBlock","src":"4445:391:19","statements":[{"body":{"nodeType":"YulBlock","src":"4491:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4493:77:19"},"nodeType":"YulFunctionCall","src":"4493:79:19"},"nodeType":"YulExpressionStatement","src":"4493:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4466:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4462:3:19"},"nodeType":"YulFunctionCall","src":"4462:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4487:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4458:3:19"},"nodeType":"YulFunctionCall","src":"4458:32:19"},"nodeType":"YulIf","src":"4455:119:19"},{"nodeType":"YulBlock","src":"4584:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4599:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4613:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4603:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4628:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4663:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4674:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:19"},"nodeType":"YulFunctionCall","src":"4659:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4683:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4638:20:19"},"nodeType":"YulFunctionCall","src":"4638:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4628:6:19"}]}]},{"nodeType":"YulBlock","src":"4711:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4726:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4740:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4730:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4756:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4802:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:19"},"nodeType":"YulFunctionCall","src":"4787:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4811:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4766:20:19"},"nodeType":"YulFunctionCall","src":"4766:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4756:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4438:6:19","type":""}],"src":"4362:474:19"},{"body":{"nodeType":"YulBlock","src":"4907:262:19","statements":[{"body":{"nodeType":"YulBlock","src":"4953:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4955:77:19"},"nodeType":"YulFunctionCall","src":"4955:79:19"},"nodeType":"YulExpressionStatement","src":"4955:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4928:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4937:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4924:3:19"},"nodeType":"YulFunctionCall","src":"4924:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4920:3:19"},"nodeType":"YulFunctionCall","src":"4920:32:19"},"nodeType":"YulIf","src":"4917:119:19"},{"nodeType":"YulBlock","src":"5046:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5061:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5075:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5065:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5090:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5135:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:19"},"nodeType":"YulFunctionCall","src":"5120:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5144:7:19"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5100:19:19"},"nodeType":"YulFunctionCall","src":"5100:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5090:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4877:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4888:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4900:6:19","type":""}],"src":"4842:327:19"},{"body":{"nodeType":"YulBlock","src":"5251:273:19","statements":[{"body":{"nodeType":"YulBlock","src":"5297:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5299:77:19"},"nodeType":"YulFunctionCall","src":"5299:79:19"},"nodeType":"YulExpressionStatement","src":"5299:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5272:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5268:3:19"},"nodeType":"YulFunctionCall","src":"5268:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5264:3:19"},"nodeType":"YulFunctionCall","src":"5264:32:19"},"nodeType":"YulIf","src":"5261:119:19"},{"nodeType":"YulBlock","src":"5390:127:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5405:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5419:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5409:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5434:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5479:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5490:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5475:3:19"},"nodeType":"YulFunctionCall","src":"5475:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5499:7:19"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"5444:30:19"},"nodeType":"YulFunctionCall","src":"5444:63:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5434:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5221:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5232:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5244:6:19","type":""}],"src":"5175:349:19"},{"body":{"nodeType":"YulBlock","src":"5596:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"5642:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5644:77:19"},"nodeType":"YulFunctionCall","src":"5644:79:19"},"nodeType":"YulExpressionStatement","src":"5644:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5617:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5613:3:19"},"nodeType":"YulFunctionCall","src":"5613:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5609:3:19"},"nodeType":"YulFunctionCall","src":"5609:32:19"},"nodeType":"YulIf","src":"5606:119:19"},{"nodeType":"YulBlock","src":"5735:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5750:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5764:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5754:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5779:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5814:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5825:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5810:3:19"},"nodeType":"YulFunctionCall","src":"5810:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5834:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5789:20:19"},"nodeType":"YulFunctionCall","src":"5789:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5779:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5566:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5577:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5589:6:19","type":""}],"src":"5530:329:19"},{"body":{"nodeType":"YulBlock","src":"5930:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5947:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5970:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5952:17:19"},"nodeType":"YulFunctionCall","src":"5952:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5940:6:19"},"nodeType":"YulFunctionCall","src":"5940:37:19"},"nodeType":"YulExpressionStatement","src":"5940:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5918:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5925:3:19","type":""}],"src":"5865:118:19"},{"body":{"nodeType":"YulBlock","src":"6048:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6065:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6085:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6070:14:19"},"nodeType":"YulFunctionCall","src":"6070:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:19"},"nodeType":"YulFunctionCall","src":"6058:34:19"},"nodeType":"YulExpressionStatement","src":"6058:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6036:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6043:3:19","type":""}],"src":"5989:109:19"},{"body":{"nodeType":"YulBlock","src":"6194:270:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6204:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6250:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6218:31:19"},"nodeType":"YulFunctionCall","src":"6218:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6208:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6265:77:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6330:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6335:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6272:57:19"},"nodeType":"YulFunctionCall","src":"6272:70:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6265:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6377:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6384:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:19"},"nodeType":"YulFunctionCall","src":"6373:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"6391:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6396:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6351:21:19"},"nodeType":"YulFunctionCall","src":"6351:52:19"},"nodeType":"YulExpressionStatement","src":"6351:52:19"},{"nodeType":"YulAssignment","src":"6412:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6423:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6450:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6428:21:19"},"nodeType":"YulFunctionCall","src":"6428:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:19"},"nodeType":"YulFunctionCall","src":"6419:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6412:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6182:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6190:3:19","type":""}],"src":"6104:360:19"},{"body":{"nodeType":"YulBlock","src":"6562:272:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6572:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6619:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6586:32:19"},"nodeType":"YulFunctionCall","src":"6586:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6576:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6634:78:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6700:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6705:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6641:58:19"},"nodeType":"YulFunctionCall","src":"6641:71:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6634:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6747:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6754:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:19"},"nodeType":"YulFunctionCall","src":"6743:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"6761:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6766:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6721:21:19"},"nodeType":"YulFunctionCall","src":"6721:52:19"},"nodeType":"YulExpressionStatement","src":"6721:52:19"},{"nodeType":"YulAssignment","src":"6782:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6793:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6820:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6798:21:19"},"nodeType":"YulFunctionCall","src":"6798:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6789:3:19"},"nodeType":"YulFunctionCall","src":"6789:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6782:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6543:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6550:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6558:3:19","type":""}],"src":"6470:364:19"},{"body":{"nodeType":"YulBlock","src":"6986:220:19","statements":[{"nodeType":"YulAssignment","src":"6996:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7062:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7067:2:19","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7003:58:19"},"nodeType":"YulFunctionCall","src":"7003:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6996:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7168:3:19"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"7079:88:19"},"nodeType":"YulFunctionCall","src":"7079:93:19"},"nodeType":"YulExpressionStatement","src":"7079:93:19"},{"nodeType":"YulAssignment","src":"7181:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7192:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7197:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7188:3:19"},"nodeType":"YulFunctionCall","src":"7188:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7181:3:19"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6974:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6982:3:19","type":""}],"src":"6840:366:19"},{"body":{"nodeType":"YulBlock","src":"7358:220:19","statements":[{"nodeType":"YulAssignment","src":"7368:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7434:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7439:2:19","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7375:58:19"},"nodeType":"YulFunctionCall","src":"7375:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7368:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7540:3:19"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"7451:88:19"},"nodeType":"YulFunctionCall","src":"7451:93:19"},"nodeType":"YulExpressionStatement","src":"7451:93:19"},{"nodeType":"YulAssignment","src":"7553:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7564:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7569:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7560:3:19"},"nodeType":"YulFunctionCall","src":"7560:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7553:3:19"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7346:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7354:3:19","type":""}],"src":"7212:366:19"},{"body":{"nodeType":"YulBlock","src":"7730:220:19","statements":[{"nodeType":"YulAssignment","src":"7740:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7806:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7811:2:19","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7747:58:19"},"nodeType":"YulFunctionCall","src":"7747:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7740:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7912:3:19"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"7823:88:19"},"nodeType":"YulFunctionCall","src":"7823:93:19"},"nodeType":"YulExpressionStatement","src":"7823:93:19"},{"nodeType":"YulAssignment","src":"7925:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7936:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7941:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7932:3:19"},"nodeType":"YulFunctionCall","src":"7932:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7925:3:19"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7718:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7726:3:19","type":""}],"src":"7584:366:19"},{"body":{"nodeType":"YulBlock","src":"8102:220:19","statements":[{"nodeType":"YulAssignment","src":"8112:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8178:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8183:2:19","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8119:58:19"},"nodeType":"YulFunctionCall","src":"8119:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8112:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8284:3:19"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"8195:88:19"},"nodeType":"YulFunctionCall","src":"8195:93:19"},"nodeType":"YulExpressionStatement","src":"8195:93:19"},{"nodeType":"YulAssignment","src":"8297:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8308:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8313:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8304:3:19"},"nodeType":"YulFunctionCall","src":"8304:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8297:3:19"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8090:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8098:3:19","type":""}],"src":"7956:366:19"},{"body":{"nodeType":"YulBlock","src":"8474:220:19","statements":[{"nodeType":"YulAssignment","src":"8484:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8550:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8555:2:19","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8491:58:19"},"nodeType":"YulFunctionCall","src":"8491:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8484:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8656:3:19"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"8567:88:19"},"nodeType":"YulFunctionCall","src":"8567:93:19"},"nodeType":"YulExpressionStatement","src":"8567:93:19"},{"nodeType":"YulAssignment","src":"8669:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8680:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8685:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8676:3:19"},"nodeType":"YulFunctionCall","src":"8676:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8669:3:19"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8462:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8470:3:19","type":""}],"src":"8328:366:19"},{"body":{"nodeType":"YulBlock","src":"8846:220:19","statements":[{"nodeType":"YulAssignment","src":"8856:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8922:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8927:2:19","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8863:58:19"},"nodeType":"YulFunctionCall","src":"8863:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8856:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9028:3:19"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"8939:88:19"},"nodeType":"YulFunctionCall","src":"8939:93:19"},"nodeType":"YulExpressionStatement","src":"8939:93:19"},{"nodeType":"YulAssignment","src":"9041:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9052:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9057:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9048:3:19"},"nodeType":"YulFunctionCall","src":"9048:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9041:3:19"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8834:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8842:3:19","type":""}],"src":"8700:366:19"},{"body":{"nodeType":"YulBlock","src":"9218:220:19","statements":[{"nodeType":"YulAssignment","src":"9228:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9294:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9299:2:19","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9235:58:19"},"nodeType":"YulFunctionCall","src":"9235:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9228:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9400:3:19"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"9311:88:19"},"nodeType":"YulFunctionCall","src":"9311:93:19"},"nodeType":"YulExpressionStatement","src":"9311:93:19"},{"nodeType":"YulAssignment","src":"9413:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9424:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9429:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9420:3:19"},"nodeType":"YulFunctionCall","src":"9420:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9413:3:19"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9206:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9214:3:19","type":""}],"src":"9072:366:19"},{"body":{"nodeType":"YulBlock","src":"9590:220:19","statements":[{"nodeType":"YulAssignment","src":"9600:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9666:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9671:2:19","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9607:58:19"},"nodeType":"YulFunctionCall","src":"9607:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9600:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9772:3:19"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"9683:88:19"},"nodeType":"YulFunctionCall","src":"9683:93:19"},"nodeType":"YulExpressionStatement","src":"9683:93:19"},{"nodeType":"YulAssignment","src":"9785:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9796:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9801:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9792:3:19"},"nodeType":"YulFunctionCall","src":"9792:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9785:3:19"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9578:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9586:3:19","type":""}],"src":"9444:366:19"},{"body":{"nodeType":"YulBlock","src":"9962:220:19","statements":[{"nodeType":"YulAssignment","src":"9972:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10038:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10043:2:19","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9979:58:19"},"nodeType":"YulFunctionCall","src":"9979:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9972:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10144:3:19"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"10055:88:19"},"nodeType":"YulFunctionCall","src":"10055:93:19"},"nodeType":"YulExpressionStatement","src":"10055:93:19"},{"nodeType":"YulAssignment","src":"10157:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10168:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10173:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10164:3:19"},"nodeType":"YulFunctionCall","src":"10164:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10157:3:19"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9950:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9958:3:19","type":""}],"src":"9816:366:19"},{"body":{"nodeType":"YulBlock","src":"10334:220:19","statements":[{"nodeType":"YulAssignment","src":"10344:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10410:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10415:2:19","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10351:58:19"},"nodeType":"YulFunctionCall","src":"10351:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10344:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10516:3:19"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"10427:88:19"},"nodeType":"YulFunctionCall","src":"10427:93:19"},"nodeType":"YulExpressionStatement","src":"10427:93:19"},{"nodeType":"YulAssignment","src":"10529:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10540:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10545:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10536:3:19"},"nodeType":"YulFunctionCall","src":"10536:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10529:3:19"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10322:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10330:3:19","type":""}],"src":"10188:366:19"},{"body":{"nodeType":"YulBlock","src":"10706:220:19","statements":[{"nodeType":"YulAssignment","src":"10716:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10782:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10787:2:19","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10723:58:19"},"nodeType":"YulFunctionCall","src":"10723:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10716:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10888:3:19"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"10799:88:19"},"nodeType":"YulFunctionCall","src":"10799:93:19"},"nodeType":"YulExpressionStatement","src":"10799:93:19"},{"nodeType":"YulAssignment","src":"10901:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10912:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10917:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:19"},"nodeType":"YulFunctionCall","src":"10908:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10901:3:19"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10694:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10702:3:19","type":""}],"src":"10560:366:19"},{"body":{"nodeType":"YulBlock","src":"10997:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11014:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11037:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11019:17:19"},"nodeType":"YulFunctionCall","src":"11019:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11007:6:19"},"nodeType":"YulFunctionCall","src":"11007:37:19"},"nodeType":"YulExpressionStatement","src":"11007:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10985:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10992:3:19","type":""}],"src":"10932:118:19"},{"body":{"nodeType":"YulBlock","src":"11154:124:19","statements":[{"nodeType":"YulAssignment","src":"11164:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11176:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11187:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11172:3:19"},"nodeType":"YulFunctionCall","src":"11172:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11164:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11244:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11257:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11268:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11253:3:19"},"nodeType":"YulFunctionCall","src":"11253:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11200:43:19"},"nodeType":"YulFunctionCall","src":"11200:71:19"},"nodeType":"YulExpressionStatement","src":"11200:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11126:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11138:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11149:4:19","type":""}],"src":"11056:222:19"},{"body":{"nodeType":"YulBlock","src":"11484:440:19","statements":[{"nodeType":"YulAssignment","src":"11494:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11506:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11517:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11502:3:19"},"nodeType":"YulFunctionCall","src":"11502:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11494:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11575:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11588:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11599:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11584:3:19"},"nodeType":"YulFunctionCall","src":"11584:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11531:43:19"},"nodeType":"YulFunctionCall","src":"11531:71:19"},"nodeType":"YulExpressionStatement","src":"11531:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11656:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11669:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11680:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11665:3:19"},"nodeType":"YulFunctionCall","src":"11665:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11612:43:19"},"nodeType":"YulFunctionCall","src":"11612:72:19"},"nodeType":"YulExpressionStatement","src":"11612:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11738:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11751:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11762:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11747:3:19"},"nodeType":"YulFunctionCall","src":"11747:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11694:43:19"},"nodeType":"YulFunctionCall","src":"11694:72:19"},"nodeType":"YulExpressionStatement","src":"11694:72:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11787:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11798:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11783:3:19"},"nodeType":"YulFunctionCall","src":"11783:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11807:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"11813:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11803:3:19"},"nodeType":"YulFunctionCall","src":"11803:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11776:6:19"},"nodeType":"YulFunctionCall","src":"11776:48:19"},"nodeType":"YulExpressionStatement","src":"11776:48:19"},{"nodeType":"YulAssignment","src":"11833:84:19","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11903:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"11912:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11841:61:19"},"nodeType":"YulFunctionCall","src":"11841:76:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11833:4:19"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11432:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11444:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11452:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11460:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11468:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11479:4:19","type":""}],"src":"11284:640:19"},{"body":{"nodeType":"YulBlock","src":"12022:118:19","statements":[{"nodeType":"YulAssignment","src":"12032:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12044:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12055:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12040:3:19"},"nodeType":"YulFunctionCall","src":"12040:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12032:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12106:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12119:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12130:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12115:3:19"},"nodeType":"YulFunctionCall","src":"12115:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12068:37:19"},"nodeType":"YulFunctionCall","src":"12068:65:19"},"nodeType":"YulExpressionStatement","src":"12068:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11994:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12006:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12017:4:19","type":""}],"src":"11930:210:19"},{"body":{"nodeType":"YulBlock","src":"12264:195:19","statements":[{"nodeType":"YulAssignment","src":"12274:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12286:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12297:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12282:3:19"},"nodeType":"YulFunctionCall","src":"12282:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12274:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12321:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12332:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12317:3:19"},"nodeType":"YulFunctionCall","src":"12317:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12340:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"12346:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12336:3:19"},"nodeType":"YulFunctionCall","src":"12336:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12310:6:19"},"nodeType":"YulFunctionCall","src":"12310:47:19"},"nodeType":"YulExpressionStatement","src":"12310:47:19"},{"nodeType":"YulAssignment","src":"12366:86:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12438:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"12447:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12374:63:19"},"nodeType":"YulFunctionCall","src":"12374:78:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12366:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12236:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12248:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12259:4:19","type":""}],"src":"12146:313:19"},{"body":{"nodeType":"YulBlock","src":"12636:248:19","statements":[{"nodeType":"YulAssignment","src":"12646:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12658:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12669:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12654:3:19"},"nodeType":"YulFunctionCall","src":"12654:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12646:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12693:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12704:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12689:3:19"},"nodeType":"YulFunctionCall","src":"12689:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12712:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"12718:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12708:3:19"},"nodeType":"YulFunctionCall","src":"12708:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12682:6:19"},"nodeType":"YulFunctionCall","src":"12682:47:19"},"nodeType":"YulExpressionStatement","src":"12682:47:19"},{"nodeType":"YulAssignment","src":"12738:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12872:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12746:124:19"},"nodeType":"YulFunctionCall","src":"12746:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12738:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12616:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12631:4:19","type":""}],"src":"12465:419:19"},{"body":{"nodeType":"YulBlock","src":"13061:248:19","statements":[{"nodeType":"YulAssignment","src":"13071:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13083:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13094:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13079:3:19"},"nodeType":"YulFunctionCall","src":"13079:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13071:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13118:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13129:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13114:3:19"},"nodeType":"YulFunctionCall","src":"13114:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13137:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"13143:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13133:3:19"},"nodeType":"YulFunctionCall","src":"13133:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13107:6:19"},"nodeType":"YulFunctionCall","src":"13107:47:19"},"nodeType":"YulExpressionStatement","src":"13107:47:19"},{"nodeType":"YulAssignment","src":"13163:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13297:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13171:124:19"},"nodeType":"YulFunctionCall","src":"13171:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13163:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13041:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13056:4:19","type":""}],"src":"12890:419:19"},{"body":{"nodeType":"YulBlock","src":"13486:248:19","statements":[{"nodeType":"YulAssignment","src":"13496:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13508:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13519:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13504:3:19"},"nodeType":"YulFunctionCall","src":"13504:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13496:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13543:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13554:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13539:3:19"},"nodeType":"YulFunctionCall","src":"13539:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13562:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"13568:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13558:3:19"},"nodeType":"YulFunctionCall","src":"13558:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13532:6:19"},"nodeType":"YulFunctionCall","src":"13532:47:19"},"nodeType":"YulExpressionStatement","src":"13532:47:19"},{"nodeType":"YulAssignment","src":"13588:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13722:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13596:124:19"},"nodeType":"YulFunctionCall","src":"13596:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13588:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13466:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13481:4:19","type":""}],"src":"13315:419:19"},{"body":{"nodeType":"YulBlock","src":"13911:248:19","statements":[{"nodeType":"YulAssignment","src":"13921:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13933:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13944:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13929:3:19"},"nodeType":"YulFunctionCall","src":"13929:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13921:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13968:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13979:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13964:3:19"},"nodeType":"YulFunctionCall","src":"13964:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13987:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"13993:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13983:3:19"},"nodeType":"YulFunctionCall","src":"13983:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13957:6:19"},"nodeType":"YulFunctionCall","src":"13957:47:19"},"nodeType":"YulExpressionStatement","src":"13957:47:19"},{"nodeType":"YulAssignment","src":"14013:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14147:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14021:124:19"},"nodeType":"YulFunctionCall","src":"14021:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14013:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13891:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13906:4:19","type":""}],"src":"13740:419:19"},{"body":{"nodeType":"YulBlock","src":"14336:248:19","statements":[{"nodeType":"YulAssignment","src":"14346:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14358:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14369:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14354:3:19"},"nodeType":"YulFunctionCall","src":"14354:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14346:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14393:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14404:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14389:3:19"},"nodeType":"YulFunctionCall","src":"14389:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14412:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"14418:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14408:3:19"},"nodeType":"YulFunctionCall","src":"14408:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14382:6:19"},"nodeType":"YulFunctionCall","src":"14382:47:19"},"nodeType":"YulExpressionStatement","src":"14382:47:19"},{"nodeType":"YulAssignment","src":"14438:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14572:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14446:124:19"},"nodeType":"YulFunctionCall","src":"14446:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14438:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14316:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14331:4:19","type":""}],"src":"14165:419:19"},{"body":{"nodeType":"YulBlock","src":"14761:248:19","statements":[{"nodeType":"YulAssignment","src":"14771:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14783:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14794:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14779:3:19"},"nodeType":"YulFunctionCall","src":"14779:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14771:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14818:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14829:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14814:3:19"},"nodeType":"YulFunctionCall","src":"14814:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14837:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"14843:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14833:3:19"},"nodeType":"YulFunctionCall","src":"14833:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14807:6:19"},"nodeType":"YulFunctionCall","src":"14807:47:19"},"nodeType":"YulExpressionStatement","src":"14807:47:19"},{"nodeType":"YulAssignment","src":"14863:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14997:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14871:124:19"},"nodeType":"YulFunctionCall","src":"14871:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14863:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14741:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14756:4:19","type":""}],"src":"14590:419:19"},{"body":{"nodeType":"YulBlock","src":"15186:248:19","statements":[{"nodeType":"YulAssignment","src":"15196:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15208:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15219:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15204:3:19"},"nodeType":"YulFunctionCall","src":"15204:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15196:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15243:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15254:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15239:3:19"},"nodeType":"YulFunctionCall","src":"15239:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15262:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"15268:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15258:3:19"},"nodeType":"YulFunctionCall","src":"15258:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15232:6:19"},"nodeType":"YulFunctionCall","src":"15232:47:19"},"nodeType":"YulExpressionStatement","src":"15232:47:19"},{"nodeType":"YulAssignment","src":"15288:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15422:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15296:124:19"},"nodeType":"YulFunctionCall","src":"15296:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15288:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15166:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15181:4:19","type":""}],"src":"15015:419:19"},{"body":{"nodeType":"YulBlock","src":"15611:248:19","statements":[{"nodeType":"YulAssignment","src":"15621:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15633:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15644:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15629:3:19"},"nodeType":"YulFunctionCall","src":"15629:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15621:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15668:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15679:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15664:3:19"},"nodeType":"YulFunctionCall","src":"15664:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15687:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"15693:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15683:3:19"},"nodeType":"YulFunctionCall","src":"15683:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15657:6:19"},"nodeType":"YulFunctionCall","src":"15657:47:19"},"nodeType":"YulExpressionStatement","src":"15657:47:19"},{"nodeType":"YulAssignment","src":"15713:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15847:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15721:124:19"},"nodeType":"YulFunctionCall","src":"15721:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15713:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15591:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15606:4:19","type":""}],"src":"15440:419:19"},{"body":{"nodeType":"YulBlock","src":"16036:248:19","statements":[{"nodeType":"YulAssignment","src":"16046:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16058:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16069:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16054:3:19"},"nodeType":"YulFunctionCall","src":"16054:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16046:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16093:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16104:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16089:3:19"},"nodeType":"YulFunctionCall","src":"16089:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16112:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"16118:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16108:3:19"},"nodeType":"YulFunctionCall","src":"16108:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16082:6:19"},"nodeType":"YulFunctionCall","src":"16082:47:19"},"nodeType":"YulExpressionStatement","src":"16082:47:19"},{"nodeType":"YulAssignment","src":"16138:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16272:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16146:124:19"},"nodeType":"YulFunctionCall","src":"16146:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16138:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16016:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16031:4:19","type":""}],"src":"15865:419:19"},{"body":{"nodeType":"YulBlock","src":"16461:248:19","statements":[{"nodeType":"YulAssignment","src":"16471:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16483:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16494:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16479:3:19"},"nodeType":"YulFunctionCall","src":"16479:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16471:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16518:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16529:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16514:3:19"},"nodeType":"YulFunctionCall","src":"16514:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16537:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"16543:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16533:3:19"},"nodeType":"YulFunctionCall","src":"16533:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16507:6:19"},"nodeType":"YulFunctionCall","src":"16507:47:19"},"nodeType":"YulExpressionStatement","src":"16507:47:19"},{"nodeType":"YulAssignment","src":"16563:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16697:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16571:124:19"},"nodeType":"YulFunctionCall","src":"16571:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16563:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16441:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16456:4:19","type":""}],"src":"16290:419:19"},{"body":{"nodeType":"YulBlock","src":"16886:248:19","statements":[{"nodeType":"YulAssignment","src":"16896:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16908:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16919:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16904:3:19"},"nodeType":"YulFunctionCall","src":"16904:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16896:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16943:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16954:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16939:3:19"},"nodeType":"YulFunctionCall","src":"16939:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16962:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"16968:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16958:3:19"},"nodeType":"YulFunctionCall","src":"16958:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16932:6:19"},"nodeType":"YulFunctionCall","src":"16932:47:19"},"nodeType":"YulExpressionStatement","src":"16932:47:19"},{"nodeType":"YulAssignment","src":"16988:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17122:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16996:124:19"},"nodeType":"YulFunctionCall","src":"16996:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16988:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16866:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16881:4:19","type":""}],"src":"16715:419:19"},{"body":{"nodeType":"YulBlock","src":"17238:124:19","statements":[{"nodeType":"YulAssignment","src":"17248:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17260:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"17271:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17256:3:19"},"nodeType":"YulFunctionCall","src":"17256:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17248:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17328:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17341:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"17352:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17337:3:19"},"nodeType":"YulFunctionCall","src":"17337:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17284:43:19"},"nodeType":"YulFunctionCall","src":"17284:71:19"},"nodeType":"YulExpressionStatement","src":"17284:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17210:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17222:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17233:4:19","type":""}],"src":"17140:222:19"},{"body":{"nodeType":"YulBlock","src":"17409:88:19","statements":[{"nodeType":"YulAssignment","src":"17419:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"17429:18:19"},"nodeType":"YulFunctionCall","src":"17429:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17419:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17478:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"17486:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"17458:19:19"},"nodeType":"YulFunctionCall","src":"17458:33:19"},"nodeType":"YulExpressionStatement","src":"17458:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"17393:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"17402:6:19","type":""}],"src":"17368:129:19"},{"body":{"nodeType":"YulBlock","src":"17543:35:19","statements":[{"nodeType":"YulAssignment","src":"17553:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17569:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17563:5:19"},"nodeType":"YulFunctionCall","src":"17563:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17553:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"17536:6:19","type":""}],"src":"17503:75:19"},{"body":{"nodeType":"YulBlock","src":"17650:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"17755:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"17757:16:19"},"nodeType":"YulFunctionCall","src":"17757:18:19"},"nodeType":"YulExpressionStatement","src":"17757:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17727:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"17735:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17724:2:19"},"nodeType":"YulFunctionCall","src":"17724:30:19"},"nodeType":"YulIf","src":"17721:56:19"},{"nodeType":"YulAssignment","src":"17787:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17817:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17795:21:19"},"nodeType":"YulFunctionCall","src":"17795:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17787:4:19"}]},{"nodeType":"YulAssignment","src":"17861:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"17873:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"17879:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17869:3:19"},"nodeType":"YulFunctionCall","src":"17869:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17861:4:19"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"17634:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"17645:4:19","type":""}],"src":"17584:307:19"},{"body":{"nodeType":"YulBlock","src":"17955:40:19","statements":[{"nodeType":"YulAssignment","src":"17966:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17982:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17976:5:19"},"nodeType":"YulFunctionCall","src":"17976:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17966:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17938:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17948:6:19","type":""}],"src":"17897:98:19"},{"body":{"nodeType":"YulBlock","src":"18060:40:19","statements":[{"nodeType":"YulAssignment","src":"18071:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18087:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18081:5:19"},"nodeType":"YulFunctionCall","src":"18081:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18071:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18043:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18053:6:19","type":""}],"src":"18001:99:19"},{"body":{"nodeType":"YulBlock","src":"18201:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18218:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"18223:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18211:6:19"},"nodeType":"YulFunctionCall","src":"18211:19:19"},"nodeType":"YulExpressionStatement","src":"18211:19:19"},{"nodeType":"YulAssignment","src":"18239:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18258:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18263:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18254:3:19"},"nodeType":"YulFunctionCall","src":"18254:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18239:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18173:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"18178:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18189:11:19","type":""}],"src":"18106:168:19"},{"body":{"nodeType":"YulBlock","src":"18376:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18393:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"18398:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18386:6:19"},"nodeType":"YulFunctionCall","src":"18386:19:19"},"nodeType":"YulExpressionStatement","src":"18386:19:19"},{"nodeType":"YulAssignment","src":"18414:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18433:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18438:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18429:3:19"},"nodeType":"YulFunctionCall","src":"18429:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18414:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18348:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"18353:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18364:11:19","type":""}],"src":"18280:169:19"},{"body":{"nodeType":"YulBlock","src":"18499:261:19","statements":[{"nodeType":"YulAssignment","src":"18509:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18532:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18514:17:19"},"nodeType":"YulFunctionCall","src":"18514:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18509:1:19"}]},{"nodeType":"YulAssignment","src":"18543:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18566:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18548:17:19"},"nodeType":"YulFunctionCall","src":"18548:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18543:1:19"}]},{"body":{"nodeType":"YulBlock","src":"18706:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18708:16:19"},"nodeType":"YulFunctionCall","src":"18708:18:19"},"nodeType":"YulExpressionStatement","src":"18708:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18627:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18634:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"18702:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18630:3:19"},"nodeType":"YulFunctionCall","src":"18630:74:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18624:2:19"},"nodeType":"YulFunctionCall","src":"18624:81:19"},"nodeType":"YulIf","src":"18621:107:19"},{"nodeType":"YulAssignment","src":"18738:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18749:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"18752:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18745:3:19"},"nodeType":"YulFunctionCall","src":"18745:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18738:3:19"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18486:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"18489:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18495:3:19","type":""}],"src":"18455:305:19"},{"body":{"nodeType":"YulBlock","src":"18811:51:19","statements":[{"nodeType":"YulAssignment","src":"18821:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18850:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"18832:17:19"},"nodeType":"YulFunctionCall","src":"18832:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18821:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18793:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18803:7:19","type":""}],"src":"18766:96:19"},{"body":{"nodeType":"YulBlock","src":"18910:48:19","statements":[{"nodeType":"YulAssignment","src":"18920:32:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18945:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18938:6:19"},"nodeType":"YulFunctionCall","src":"18938:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18931:6:19"},"nodeType":"YulFunctionCall","src":"18931:21:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18920:7:19"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18892:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18902:7:19","type":""}],"src":"18868:90:19"},{"body":{"nodeType":"YulBlock","src":"19008:105:19","statements":[{"nodeType":"YulAssignment","src":"19018:89:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19033:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"19040:66:19","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19029:3:19"},"nodeType":"YulFunctionCall","src":"19029:78:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19018:7:19"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18990:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19000:7:19","type":""}],"src":"18964:149:19"},{"body":{"nodeType":"YulBlock","src":"19164:81:19","statements":[{"nodeType":"YulAssignment","src":"19174:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19189:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"19196:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19185:3:19"},"nodeType":"YulFunctionCall","src":"19185:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19174:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19146:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19156:7:19","type":""}],"src":"19119:126:19"},{"body":{"nodeType":"YulBlock","src":"19296:32:19","statements":[{"nodeType":"YulAssignment","src":"19306:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"19317:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19306:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19278:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19288:7:19","type":""}],"src":"19251:77:19"},{"body":{"nodeType":"YulBlock","src":"19385:103:19","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19408:3:19"},{"name":"src","nodeType":"YulIdentifier","src":"19413:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"19418:6:19"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"19395:12:19"},"nodeType":"YulFunctionCall","src":"19395:30:19"},"nodeType":"YulExpressionStatement","src":"19395:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19466:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"19471:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19462:3:19"},"nodeType":"YulFunctionCall","src":"19462:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"19480:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19455:6:19"},"nodeType":"YulFunctionCall","src":"19455:27:19"},"nodeType":"YulExpressionStatement","src":"19455:27:19"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"19367:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"19372:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"19377:6:19","type":""}],"src":"19334:154:19"},{"body":{"nodeType":"YulBlock","src":"19543:258:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19553:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"19562:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19557:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"19622:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19647:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"19652:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19643:3:19"},"nodeType":"YulFunctionCall","src":"19643:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19666:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"19671:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19662:3:19"},"nodeType":"YulFunctionCall","src":"19662:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19656:5:19"},"nodeType":"YulFunctionCall","src":"19656:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19636:6:19"},"nodeType":"YulFunctionCall","src":"19636:39:19"},"nodeType":"YulExpressionStatement","src":"19636:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19583:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"19586:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19580:2:19"},"nodeType":"YulFunctionCall","src":"19580:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19594:19:19","statements":[{"nodeType":"YulAssignment","src":"19596:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19605:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"19608:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19601:3:19"},"nodeType":"YulFunctionCall","src":"19601:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19596:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"19576:3:19","statements":[]},"src":"19572:113:19"},{"body":{"nodeType":"YulBlock","src":"19719:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19769:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"19774:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19765:3:19"},"nodeType":"YulFunctionCall","src":"19765:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"19783:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19758:6:19"},"nodeType":"YulFunctionCall","src":"19758:27:19"},"nodeType":"YulExpressionStatement","src":"19758:27:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19700:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"19703:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19697:2:19"},"nodeType":"YulFunctionCall","src":"19697:13:19"},"nodeType":"YulIf","src":"19694:101:19"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"19525:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"19530:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"19535:6:19","type":""}],"src":"19494:307:19"},{"body":{"nodeType":"YulBlock","src":"19858:269:19","statements":[{"nodeType":"YulAssignment","src":"19868:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19882:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"19888:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19878:3:19"},"nodeType":"YulFunctionCall","src":"19878:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19868:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"19899:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19929:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"19935:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19925:3:19"},"nodeType":"YulFunctionCall","src":"19925:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"19903:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"19976:51:19","statements":[{"nodeType":"YulAssignment","src":"19990:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20004:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"20012:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20000:3:19"},"nodeType":"YulFunctionCall","src":"20000:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19990:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19956:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19949:6:19"},"nodeType":"YulFunctionCall","src":"19949:26:19"},"nodeType":"YulIf","src":"19946:81:19"},{"body":{"nodeType":"YulBlock","src":"20079:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"20093:16:19"},"nodeType":"YulFunctionCall","src":"20093:18:19"},"nodeType":"YulExpressionStatement","src":"20093:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20043:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20066:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"20074:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20063:2:19"},"nodeType":"YulFunctionCall","src":"20063:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20040:2:19"},"nodeType":"YulFunctionCall","src":"20040:38:19"},"nodeType":"YulIf","src":"20037:84:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19842:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"19851:6:19","type":""}],"src":"19807:320:19"},{"body":{"nodeType":"YulBlock","src":"20176:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"20186:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20208:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"20238:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"20216:21:19"},"nodeType":"YulFunctionCall","src":"20216:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20204:3:19"},"nodeType":"YulFunctionCall","src":"20204:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"20190:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"20355:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"20357:16:19"},"nodeType":"YulFunctionCall","src":"20357:18:19"},"nodeType":"YulExpressionStatement","src":"20357:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"20298:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"20310:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20295:2:19"},"nodeType":"YulFunctionCall","src":"20295:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"20334:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"20346:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20331:2:19"},"nodeType":"YulFunctionCall","src":"20331:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"20292:2:19"},"nodeType":"YulFunctionCall","src":"20292:62:19"},"nodeType":"YulIf","src":"20289:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20393:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"20397:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20386:6:19"},"nodeType":"YulFunctionCall","src":"20386:22:19"},"nodeType":"YulExpressionStatement","src":"20386:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20162:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"20170:4:19","type":""}],"src":"20133:281:19"},{"body":{"nodeType":"YulBlock","src":"20448:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20465:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20468:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20458:6:19"},"nodeType":"YulFunctionCall","src":"20458:88:19"},"nodeType":"YulExpressionStatement","src":"20458:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20562:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20565:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20555:6:19"},"nodeType":"YulFunctionCall","src":"20555:15:19"},"nodeType":"YulExpressionStatement","src":"20555:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20586:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20589:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20579:6:19"},"nodeType":"YulFunctionCall","src":"20579:15:19"},"nodeType":"YulExpressionStatement","src":"20579:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20420:180:19"},{"body":{"nodeType":"YulBlock","src":"20634:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20651:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20654:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20644:6:19"},"nodeType":"YulFunctionCall","src":"20644:88:19"},"nodeType":"YulExpressionStatement","src":"20644:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20748:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20751:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20741:6:19"},"nodeType":"YulFunctionCall","src":"20741:15:19"},"nodeType":"YulExpressionStatement","src":"20741:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20772:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20775:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20765:6:19"},"nodeType":"YulFunctionCall","src":"20765:15:19"},"nodeType":"YulExpressionStatement","src":"20765:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20606:180:19"},{"body":{"nodeType":"YulBlock","src":"20820:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20837:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20840:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20830:6:19"},"nodeType":"YulFunctionCall","src":"20830:88:19"},"nodeType":"YulExpressionStatement","src":"20830:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20934:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20937:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20927:6:19"},"nodeType":"YulFunctionCall","src":"20927:15:19"},"nodeType":"YulExpressionStatement","src":"20927:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20958:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20961:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20951:6:19"},"nodeType":"YulFunctionCall","src":"20951:15:19"},"nodeType":"YulExpressionStatement","src":"20951:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"20792:180:19"},{"body":{"nodeType":"YulBlock","src":"21067:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21084:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21087:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21077:6:19"},"nodeType":"YulFunctionCall","src":"21077:12:19"},"nodeType":"YulExpressionStatement","src":"21077:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"20978:117:19"},{"body":{"nodeType":"YulBlock","src":"21190:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21207:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21210:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21200:6:19"},"nodeType":"YulFunctionCall","src":"21200:12:19"},"nodeType":"YulExpressionStatement","src":"21200:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"21101:117:19"},{"body":{"nodeType":"YulBlock","src":"21313:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21330:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21333:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21323:6:19"},"nodeType":"YulFunctionCall","src":"21323:12:19"},"nodeType":"YulExpressionStatement","src":"21323:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"21224:117:19"},{"body":{"nodeType":"YulBlock","src":"21436:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21453:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21456:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21446:6:19"},"nodeType":"YulFunctionCall","src":"21446:12:19"},"nodeType":"YulExpressionStatement","src":"21446:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"21347:117:19"},{"body":{"nodeType":"YulBlock","src":"21518:54:19","statements":[{"nodeType":"YulAssignment","src":"21528:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21546:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"21553:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21542:3:19"},"nodeType":"YulFunctionCall","src":"21542:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21562:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21558:3:19"},"nodeType":"YulFunctionCall","src":"21558:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21538:3:19"},"nodeType":"YulFunctionCall","src":"21538:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"21528:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21501:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"21511:6:19","type":""}],"src":"21470:102:19"},{"body":{"nodeType":"YulBlock","src":"21684:126:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21706:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21714:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21702:3:19"},"nodeType":"YulFunctionCall","src":"21702:14:19"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"21718:34:19","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21695:6:19"},"nodeType":"YulFunctionCall","src":"21695:58:19"},"nodeType":"YulExpressionStatement","src":"21695:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21774:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21782:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21770:3:19"},"nodeType":"YulFunctionCall","src":"21770:15:19"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"21787:15:19","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21763:6:19"},"nodeType":"YulFunctionCall","src":"21763:40:19"},"nodeType":"YulExpressionStatement","src":"21763:40:19"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21676:6:19","type":""}],"src":"21578:232:19"},{"body":{"nodeType":"YulBlock","src":"21922:131:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21944:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21952:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21940:3:19"},"nodeType":"YulFunctionCall","src":"21940:14:19"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"21956:34:19","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21933:6:19"},"nodeType":"YulFunctionCall","src":"21933:58:19"},"nodeType":"YulExpressionStatement","src":"21933:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22012:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22020:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22008:3:19"},"nodeType":"YulFunctionCall","src":"22008:15:19"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"22025:20:19","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22001:6:19"},"nodeType":"YulFunctionCall","src":"22001:45:19"},"nodeType":"YulExpressionStatement","src":"22001:45:19"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21914:6:19","type":""}],"src":"21816:237:19"},{"body":{"nodeType":"YulBlock","src":"22165:118:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22187:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22195:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22183:3:19"},"nodeType":"YulFunctionCall","src":"22183:14:19"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"22199:34:19","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22176:6:19"},"nodeType":"YulFunctionCall","src":"22176:58:19"},"nodeType":"YulExpressionStatement","src":"22176:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22255:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22263:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22251:3:19"},"nodeType":"YulFunctionCall","src":"22251:15:19"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"22268:7:19","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22244:6:19"},"nodeType":"YulFunctionCall","src":"22244:32:19"},"nodeType":"YulExpressionStatement","src":"22244:32:19"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22157:6:19","type":""}],"src":"22059:224:19"},{"body":{"nodeType":"YulBlock","src":"22395:72:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22417:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22425:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22413:3:19"},"nodeType":"YulFunctionCall","src":"22413:14:19"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"22429:30:19","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22406:6:19"},"nodeType":"YulFunctionCall","src":"22406:54:19"},"nodeType":"YulExpressionStatement","src":"22406:54:19"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22387:6:19","type":""}],"src":"22289:178:19"},{"body":{"nodeType":"YulBlock","src":"22579:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22601:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22609:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22597:3:19"},"nodeType":"YulFunctionCall","src":"22597:14:19"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"22613:34:19","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22590:6:19"},"nodeType":"YulFunctionCall","src":"22590:58:19"},"nodeType":"YulExpressionStatement","src":"22590:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22669:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22677:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22665:3:19"},"nodeType":"YulFunctionCall","src":"22665:15:19"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"22682:6:19","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22658:6:19"},"nodeType":"YulFunctionCall","src":"22658:31:19"},"nodeType":"YulExpressionStatement","src":"22658:31:19"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22571:6:19","type":""}],"src":"22473:223:19"},{"body":{"nodeType":"YulBlock","src":"22808:69:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22830:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22838:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22826:3:19"},"nodeType":"YulFunctionCall","src":"22826:14:19"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"22842:27:19","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22819:6:19"},"nodeType":"YulFunctionCall","src":"22819:51:19"},"nodeType":"YulExpressionStatement","src":"22819:51:19"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22800:6:19","type":""}],"src":"22702:175:19"},{"body":{"nodeType":"YulBlock","src":"22989:122:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23011:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"23019:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23007:3:19"},"nodeType":"YulFunctionCall","src":"23007:14:19"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"23023:34:19","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23000:6:19"},"nodeType":"YulFunctionCall","src":"23000:58:19"},"nodeType":"YulExpressionStatement","src":"23000:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23079:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"23087:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23075:3:19"},"nodeType":"YulFunctionCall","src":"23075:15:19"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"23092:11:19","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23068:6:19"},"nodeType":"YulFunctionCall","src":"23068:36:19"},"nodeType":"YulExpressionStatement","src":"23068:36:19"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22981:6:19","type":""}],"src":"22883:228:19"},{"body":{"nodeType":"YulBlock","src":"23223:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23245:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"23253:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23241:3:19"},"nodeType":"YulFunctionCall","src":"23241:14:19"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"23257:34:19","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23234:6:19"},"nodeType":"YulFunctionCall","src":"23234:58:19"},"nodeType":"YulExpressionStatement","src":"23234:58:19"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23215:6:19","type":""}],"src":"23117:182:19"},{"body":{"nodeType":"YulBlock","src":"23411:68:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23433:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"23441:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23429:3:19"},"nodeType":"YulFunctionCall","src":"23429:14:19"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"23445:26:19","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23422:6:19"},"nodeType":"YulFunctionCall","src":"23422:50:19"},"nodeType":"YulExpressionStatement","src":"23422:50:19"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23403:6:19","type":""}],"src":"23305:174:19"},{"body":{"nodeType":"YulBlock","src":"23591:114:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23613:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"23621:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23609:3:19"},"nodeType":"YulFunctionCall","src":"23609:14:19"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"23625:34:19","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23602:6:19"},"nodeType":"YulFunctionCall","src":"23602:58:19"},"nodeType":"YulExpressionStatement","src":"23602:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23681:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"23689:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23677:3:19"},"nodeType":"YulFunctionCall","src":"23677:15:19"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"23694:3:19","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23670:6:19"},"nodeType":"YulFunctionCall","src":"23670:28:19"},"nodeType":"YulExpressionStatement","src":"23670:28:19"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23583:6:19","type":""}],"src":"23485:220:19"},{"body":{"nodeType":"YulBlock","src":"23817:142:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23839:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"23847:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23835:3:19"},"nodeType":"YulFunctionCall","src":"23835:14:19"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"23851:34:19","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23828:6:19"},"nodeType":"YulFunctionCall","src":"23828:58:19"},"nodeType":"YulExpressionStatement","src":"23828:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23907:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"23915:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23903:3:19"},"nodeType":"YulFunctionCall","src":"23903:15:19"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"23920:31:19","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23896:6:19"},"nodeType":"YulFunctionCall","src":"23896:56:19"},"nodeType":"YulExpressionStatement","src":"23896:56:19"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23809:6:19","type":""}],"src":"23711:248:19"},{"body":{"nodeType":"YulBlock","src":"24008:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"24065:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24074:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24077:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24067:6:19"},"nodeType":"YulFunctionCall","src":"24067:12:19"},"nodeType":"YulExpressionStatement","src":"24067:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24031:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24056:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"24038:17:19"},"nodeType":"YulFunctionCall","src":"24038:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24028:2:19"},"nodeType":"YulFunctionCall","src":"24028:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24021:6:19"},"nodeType":"YulFunctionCall","src":"24021:43:19"},"nodeType":"YulIf","src":"24018:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24001:5:19","type":""}],"src":"23965:122:19"},{"body":{"nodeType":"YulBlock","src":"24133:76:19","statements":[{"body":{"nodeType":"YulBlock","src":"24187:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24196:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24199:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24189:6:19"},"nodeType":"YulFunctionCall","src":"24189:12:19"},"nodeType":"YulExpressionStatement","src":"24189:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24156:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24178:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"24163:14:19"},"nodeType":"YulFunctionCall","src":"24163:21:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24153:2:19"},"nodeType":"YulFunctionCall","src":"24153:32:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24146:6:19"},"nodeType":"YulFunctionCall","src":"24146:40:19"},"nodeType":"YulIf","src":"24143:60:19"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24126:5:19","type":""}],"src":"24093:116:19"},{"body":{"nodeType":"YulBlock","src":"24257:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"24313:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24322:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24325:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24315:6:19"},"nodeType":"YulFunctionCall","src":"24315:12:19"},"nodeType":"YulExpressionStatement","src":"24315:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24280:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24304:5:19"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"24287:16:19"},"nodeType":"YulFunctionCall","src":"24287:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24277:2:19"},"nodeType":"YulFunctionCall","src":"24277:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24270:6:19"},"nodeType":"YulFunctionCall","src":"24270:42:19"},"nodeType":"YulIf","src":"24267:62:19"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24250:5:19","type":""}],"src":"24215:120:19"},{"body":{"nodeType":"YulBlock","src":"24384:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"24441:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24450:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24453:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24443:6:19"},"nodeType":"YulFunctionCall","src":"24443:12:19"},"nodeType":"YulExpressionStatement","src":"24443:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24407:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24432:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24414:17:19"},"nodeType":"YulFunctionCall","src":"24414:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24404:2:19"},"nodeType":"YulFunctionCall","src":"24404:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24397:6:19"},"nodeType":"YulFunctionCall","src":"24397:43:19"},"nodeType":"YulIf","src":"24394:63:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24377:5:19","type":""}],"src":"24341:122:19"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102e7578063e985e9c51461031757610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a919061182e565b610347565b60405161012c9190611b3c565b60405180910390f35b61013d610429565b60405161014a9190611b57565b60405180910390f35b61016d60048036038101906101689190611888565b6104bb565b60405161017a9190611ad5565b60405180910390f35b61019d600480360381019061019891906117ee565b610501565b005b6101b960048036038101906101b491906116d8565b610619565b005b6101d560048036038101906101d091906116d8565b610679565b005b6101f160048036038101906101ec9190611888565b610699565b6040516101fe9190611ad5565b60405180910390f35b61020f610720565b60405161021c9190611cd9565b60405180910390f35b61023f600480360381019061023a919061166b565b61072a565b60405161024c9190611cd9565b60405180910390f35b61025d6107e2565b60405161026a9190611b57565b60405180910390f35b61027b6107fe565b6040516102889190611b57565b60405180910390f35b6102ab60048036038101906102a691906117ae565b610890565b005b6102c760048036038101906102c2919061172b565b6108a6565b005b6102d1610908565b6040516102de9190611cd9565b60405180910390f35b61030160048036038101906102fc9190611888565b610933565b60405161030e9190611b57565b60405180910390f35b610331600480360381019061032c9190611698565b610955565b60405161033e9190611b3c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061041257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104225750610421826109e9565b5b9050919050565b60606000805461043890611e8e565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611e8e565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b5050505050905090565b60006104c682610a53565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061050c82610699565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490611c99565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661059c610a9e565b73ffffffffffffffffffffffffffffffffffffffff1614806105cb57506105ca816105c5610a9e565b610955565b5b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190611cb9565b60405180910390fd5b6106148383610aa6565b505050565b61062a610624610a9e565b82610b5f565b610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090611b79565b60405180910390fd5b610674838383610bf4565b505050565b610694838383604051806020016040528060008152506108a6565b505050565b6000806106a583610eee565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e90611c79565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290611c39565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060800160405280605781526020016122cd6057913981565b60606001805461080d90611e8e565b80601f016020809104026020016040519081016040528092919081815260200182805461083990611e8e565b80156108865780601f1061085b57610100808354040283529160200191610886565b820191906000526020600020905b81548152906001019060200180831161086957829003601f168201915b5050505050905090565b6108a261089b610a9e565b8383610f2b565b5050565b6108b76108b1610a9e565b83610b5f565b6108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611b79565b60405180910390fd5b61090284848484611098565b50505050565b6000610916336006546110f4565b60016006546109259190611d82565b600681905550600654905090565b60606040518060800160405280605781526020016122cd605791399050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a5c81611112565b610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9290611c79565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b1983610699565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b6b83610699565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bad5750610bac8185610955565b5b80610beb57508373ffffffffffffffffffffffffffffffffffffffff16610bd3846104bb565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c1482610699565b73ffffffffffffffffffffffffffffffffffffffff1614610c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6190611bb9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd190611bf9565b60405180910390fd5b610ce78383836001611153565b8273ffffffffffffffffffffffffffffffffffffffff16610d0782610699565b73ffffffffffffffffffffffffffffffffffffffff1614610d5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5490611bb9565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610ee98383836001611159565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9190611c19565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161108b9190611b3c565b60405180910390a3505050565b6110a3848484610bf4565b6110af8484848461115f565b6110ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e590611b99565b60405180910390fd5b50505050565b61110e8282604051806020016040528060008152506112f6565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff1661113483610eee565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111808473ffffffffffffffffffffffffffffffffffffffff16611351565b156112e9578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111a9610a9e565b8786866040518563ffffffff1660e01b81526004016111cb9493929190611af0565b602060405180830381600087803b1580156111e557600080fd5b505af192505050801561121657506040513d601f19601f82011682018060405250810190611213919061185b565b60015b611299573d8060008114611246576040519150601f19603f3d011682016040523d82523d6000602084013e61124b565b606091505b50600081511415611291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128890611b99565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506112ee565b600190505b949350505050565b6113008383611374565b61130d600084848461115f565b61134c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134390611b99565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113db90611c59565b60405180910390fd5b6113ed81611112565b1561142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142490611bd9565b60405180910390fd5b61143b600083836001611153565b61144481611112565b15611484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147b90611bd9565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461158e600083836001611159565b5050565b60006115a56115a084611d19565b611cf4565b9050828152602081018484840111156115c1576115c0611f83565b5b6115cc848285611e4c565b509392505050565b6000813590506115e381612270565b92915050565b6000813590506115f881612287565b92915050565b60008135905061160d8161229e565b92915050565b6000815190506116228161229e565b92915050565b600082601f83011261163d5761163c611f7e565b5b813561164d848260208601611592565b91505092915050565b600081359050611665816122b5565b92915050565b60006020828403121561168157611680611f8d565b5b600061168f848285016115d4565b91505092915050565b600080604083850312156116af576116ae611f8d565b5b60006116bd858286016115d4565b92505060206116ce858286016115d4565b9150509250929050565b6000806000606084860312156116f1576116f0611f8d565b5b60006116ff868287016115d4565b9350506020611710868287016115d4565b925050604061172186828701611656565b9150509250925092565b6000806000806080858703121561174557611744611f8d565b5b6000611753878288016115d4565b9450506020611764878288016115d4565b935050604061177587828801611656565b925050606085013567ffffffffffffffff81111561179657611795611f88565b5b6117a287828801611628565b91505092959194509250565b600080604083850312156117c5576117c4611f8d565b5b60006117d3858286016115d4565b92505060206117e4858286016115e9565b9150509250929050565b6000806040838503121561180557611804611f8d565b5b6000611813858286016115d4565b925050602061182485828601611656565b9150509250929050565b60006020828403121561184457611843611f8d565b5b6000611852848285016115fe565b91505092915050565b60006020828403121561187157611870611f8d565b5b600061187f84828501611613565b91505092915050565b60006020828403121561189e5761189d611f8d565b5b60006118ac84828501611656565b91505092915050565b6118be81611dd8565b82525050565b6118cd81611dea565b82525050565b60006118de82611d4a565b6118e88185611d60565b93506118f8818560208601611e5b565b61190181611f92565b840191505092915050565b600061191782611d55565b6119218185611d71565b9350611931818560208601611e5b565b61193a81611f92565b840191505092915050565b6000611952602d83611d71565b915061195d82611fa3565b604082019050919050565b6000611975603283611d71565b915061198082611ff2565b604082019050919050565b6000611998602583611d71565b91506119a382612041565b604082019050919050565b60006119bb601c83611d71565b91506119c682612090565b602082019050919050565b60006119de602483611d71565b91506119e9826120b9565b604082019050919050565b6000611a01601983611d71565b9150611a0c82612108565b602082019050919050565b6000611a24602983611d71565b9150611a2f82612131565b604082019050919050565b6000611a47602083611d71565b9150611a5282612180565b602082019050919050565b6000611a6a601883611d71565b9150611a75826121a9565b602082019050919050565b6000611a8d602183611d71565b9150611a98826121d2565b604082019050919050565b6000611ab0603d83611d71565b9150611abb82612221565b604082019050919050565b611acf81611e42565b82525050565b6000602082019050611aea60008301846118b5565b92915050565b6000608082019050611b0560008301876118b5565b611b1260208301866118b5565b611b1f6040830185611ac6565b8181036060830152611b3181846118d3565b905095945050505050565b6000602082019050611b5160008301846118c4565b92915050565b60006020820190508181036000830152611b71818461190c565b905092915050565b60006020820190508181036000830152611b9281611945565b9050919050565b60006020820190508181036000830152611bb281611968565b9050919050565b60006020820190508181036000830152611bd28161198b565b9050919050565b60006020820190508181036000830152611bf2816119ae565b9050919050565b60006020820190508181036000830152611c12816119d1565b9050919050565b60006020820190508181036000830152611c32816119f4565b9050919050565b60006020820190508181036000830152611c5281611a17565b9050919050565b60006020820190508181036000830152611c7281611a3a565b9050919050565b60006020820190508181036000830152611c9281611a5d565b9050919050565b60006020820190508181036000830152611cb281611a80565b9050919050565b60006020820190508181036000830152611cd281611aa3565b9050919050565b6000602082019050611cee6000830184611ac6565b92915050565b6000611cfe611d0f565b9050611d0a8282611ec0565b919050565b6000604051905090565b600067ffffffffffffffff821115611d3457611d33611f4f565b5b611d3d82611f92565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611d8d82611e42565b9150611d9883611e42565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611dcd57611dcc611ef1565b5b828201905092915050565b6000611de382611e22565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611e79578082015181840152602081019050611e5e565b83811115611e88576000848401525b50505050565b60006002820490506001821680611ea657607f821691505b60208210811415611eba57611eb9611f20565b5b50919050565b611ec982611f92565b810181811067ffffffffffffffff82111715611ee857611ee7611f4f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61227981611dd8565b811461228457600080fd5b50565b61229081611dea565b811461229b57600080fd5b50565b6122a781611df6565b81146122b257600080fd5b50565b6122be81611e42565b81146122c957600080fd5b5056fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea2646970667358221220abafd534818d929fe37cbe3d97e39e3948b86e11b5ae6f82778c4802183dec2e64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xC2229FEA EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x317 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x78CE9035 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x412 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x422 JUMPI POP PUSH2 0x421 DUP3 PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x438 SWAP1 PUSH2 0x1E8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x464 SWAP1 PUSH2 0x1E8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x486 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x494 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50C DUP3 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x574 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x59C PUSH2 0xA9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5CB JUMPI POP PUSH2 0x5CA DUP2 PUSH2 0x5C5 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST JUMPDEST PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x601 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x614 DUP4 DUP4 PUSH2 0xAA6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x62A PUSH2 0x624 PUSH2 0xA9E JUMP JUMPDEST DUP3 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x660 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x674 DUP4 DUP4 DUP4 PUSH2 0xBF4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x694 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8A6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6A5 DUP4 PUSH2 0xEEE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22CD PUSH1 0x57 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x80D SWAP1 PUSH2 0x1E8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x839 SWAP1 PUSH2 0x1E8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x886 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x886 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x869 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8A2 PUSH2 0x89B PUSH2 0xA9E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8B7 PUSH2 0x8B1 PUSH2 0xA9E JUMP JUMPDEST DUP4 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x902 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1098 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x916 CALLER PUSH1 0x6 SLOAD PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22CD PUSH1 0x57 SWAP2 CODECOPY SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5C DUP2 PUSH2 0x1112 JUMP JUMPDEST PUSH2 0xA9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA92 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB19 DUP4 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB6B DUP4 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xBAD JUMPI POP PUSH2 0xBAC DUP2 DUP6 PUSH2 0x955 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xBEB JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBD3 DUP5 PUSH2 0x4BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC14 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC61 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD1 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1153 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD07 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD54 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xEE9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF91 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x108B SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10A3 DUP5 DUP5 DUP5 PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x10AF DUP5 DUP5 DUP5 DUP5 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E5 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x110E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x12F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1134 DUP4 PUSH2 0xEEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1180 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1351 JUMP JUMPDEST ISZERO PUSH2 0x12E9 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11A9 PUSH2 0xA9E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1216 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1299 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1246 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x124B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1291 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1288 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1300 DUP4 DUP4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x130D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1343 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DB SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13ED DUP2 PUSH2 0x1112 JUMP JUMPDEST ISZERO PUSH2 0x142D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1424 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x143B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x1444 DUP2 PUSH2 0x1112 JUMP JUMPDEST ISZERO PUSH2 0x1484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147B SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x158E PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A5 PUSH2 0x15A0 DUP5 PUSH2 0x1D19 JUMP JUMPDEST PUSH2 0x1CF4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15C1 JUMPI PUSH2 0x15C0 PUSH2 0x1F83 JUMP JUMPDEST JUMPDEST PUSH2 0x15CC DUP5 DUP3 DUP6 PUSH2 0x1E4C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E3 DUP2 PUSH2 0x2270 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F8 DUP2 PUSH2 0x2287 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x160D DUP2 PUSH2 0x229E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1622 DUP2 PUSH2 0x229E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x163D JUMPI PUSH2 0x163C PUSH2 0x1F7E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x164D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1665 DUP2 PUSH2 0x22B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1681 JUMPI PUSH2 0x1680 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168F DUP5 DUP3 DUP6 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AF JUMPI PUSH2 0x16AE PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16BD DUP6 DUP3 DUP7 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16CE DUP6 DUP3 DUP7 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16F1 JUMPI PUSH2 0x16F0 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16FF DUP7 DUP3 DUP8 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1710 DUP7 DUP3 DUP8 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1721 DUP7 DUP3 DUP8 ADD PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1745 JUMPI PUSH2 0x1744 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1753 DUP8 DUP3 DUP9 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1764 DUP8 DUP3 DUP9 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1775 DUP8 DUP3 DUP9 ADD PUSH2 0x1656 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1796 JUMPI PUSH2 0x1795 PUSH2 0x1F88 JUMP JUMPDEST JUMPDEST PUSH2 0x17A2 DUP8 DUP3 DUP9 ADD PUSH2 0x1628 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP6 DUP3 DUP7 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17E4 DUP6 DUP3 DUP7 ADD PUSH2 0x15E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1805 JUMPI PUSH2 0x1804 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1813 DUP6 DUP3 DUP7 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1824 DUP6 DUP3 DUP7 ADD PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1844 JUMPI PUSH2 0x1843 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1852 DUP5 DUP3 DUP6 ADD PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1871 JUMPI PUSH2 0x1870 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x187F DUP5 DUP3 DUP6 ADD PUSH2 0x1613 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189E JUMPI PUSH2 0x189D PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18AC DUP5 DUP3 DUP6 ADD PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18BE DUP2 PUSH2 0x1DD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18CD DUP2 PUSH2 0x1DEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DE DUP3 PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x18E8 DUP2 DUP6 PUSH2 0x1D60 JUMP JUMPDEST SWAP4 POP PUSH2 0x18F8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x1901 DUP2 PUSH2 0x1F92 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1917 DUP3 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x1921 DUP2 DUP6 PUSH2 0x1D71 JUMP JUMPDEST SWAP4 POP PUSH2 0x1931 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x193A DUP2 PUSH2 0x1F92 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1952 PUSH1 0x2D DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x195D DUP3 PUSH2 0x1FA3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1975 PUSH1 0x32 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1980 DUP3 PUSH2 0x1FF2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1998 PUSH1 0x25 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A3 DUP3 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BB PUSH1 0x1C DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C6 DUP3 PUSH2 0x2090 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DE PUSH1 0x24 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E9 DUP3 PUSH2 0x20B9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A01 PUSH1 0x19 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0C DUP3 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A24 PUSH1 0x29 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2F DUP3 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A47 PUSH1 0x20 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A52 DUP3 PUSH2 0x2180 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6A PUSH1 0x18 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A75 DUP3 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8D PUSH1 0x21 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A98 DUP3 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB0 PUSH1 0x3D DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABB DUP3 PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACF DUP2 PUSH2 0x1E42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B05 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x1B12 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x1B1F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AC6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B31 DUP2 DUP5 PUSH2 0x18D3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B71 DUP2 DUP5 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B92 DUP2 PUSH2 0x1945 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB2 DUP2 PUSH2 0x1968 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD2 DUP2 PUSH2 0x198B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF2 DUP2 PUSH2 0x19AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C12 DUP2 PUSH2 0x19D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 PUSH2 0x19F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C52 DUP2 PUSH2 0x1A17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C72 DUP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C92 DUP2 PUSH2 0x1A5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB2 DUP2 PUSH2 0x1A80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD2 DUP2 PUSH2 0x1AA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CFE PUSH2 0x1D0F JUMP JUMPDEST SWAP1 POP PUSH2 0x1D0A DUP3 DUP3 PUSH2 0x1EC0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D34 JUMPI PUSH2 0x1D33 PUSH2 0x1F4F JUMP JUMPDEST JUMPDEST PUSH2 0x1D3D DUP3 PUSH2 0x1F92 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8D DUP3 PUSH2 0x1E42 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D98 DUP4 PUSH2 0x1E42 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1DCD JUMPI PUSH2 0x1DCC PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE3 DUP3 PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E79 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E5E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E88 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EA6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1EBA JUMPI PUSH2 0x1EB9 PUSH2 0x1F20 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC9 DUP3 PUSH2 0x1F92 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EE8 JUMPI PUSH2 0x1EE7 PUSH2 0x1F4F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2279 DUP2 PUSH2 0x1DD8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2290 DUP2 PUSH2 0x1DEA JUMP JUMPDEST DUP2 EQ PUSH2 0x229B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22A7 DUP2 PUSH2 0x1DF6 JUMP JUMPDEST DUP2 EQ PUSH2 0x22B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22BE DUP2 PUSH2 0x1E42 JUMP JUMPDEST DUP2 EQ PUSH2 0x22C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH10 0x7066733A2F2F62616679 PUSH3 0x656967 CALLER CALLDATACOPY PUSH10 0x6F6972373673376D6735 PUSH16 0x6F6265746E636F6A636D336333687861 PUSH20 0x79643472766964346A71687934676B6168656734 0x2F EXTCODEHASH PUSH7 0x696C656E616D65 RETURNDATASIZE ADDRESS 0x2D POP SSTORE SELFBALANCE 0x2E PUSH11 0x736F6EA264697066735822 SLT KECCAK256 0xAB 0xAF 0xD5 CALLVALUE DUP2 DUP14 SWAP3 SWAP16 0xE3 PUSH29 0xBE3D97E39E3948B86E11B5AE6F82778C4802183DEC2E64736F6C634300 ADDMOD SMOD STOP CALLER ","sourceMap":"134:698:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;735:95:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;168:132:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;421:174:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;601:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;735:95:16:-;783:7;809:14;;802:21;;735:95;:::o;1929:204:5:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;168:132:16:-;;;;;;;;;;;;;;;;;;;:::o;2633:102:5:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;421:174:16:-;456:7;475:37;485:10;497:14;;475:9;:37::i;:::-;556:1;539:14;;:18;;;;:::i;:::-;522:14;:35;;;;574:14;;567:21;;421:174;:::o;601:128::-;670:13;713:9;;;;;;;;;;;;;;;;;706:16;;601:128;;;:::o;4388:162:5:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:13:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:5:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:11:-;693:7;719:10;712:17;;640:96;:::o;12768:171:5:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;7256:126::-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:154::-;;;;;:::o;16558:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;8460:309::-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;1175:320:10:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;9091:920:5:-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;7:410:19:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:366::-;6982:3;7003:67;7067:2;7062:3;7003:67;:::i;:::-;6996:74;;7079:93;7168:3;7079:93;:::i;:::-;7197:2;7192:3;7188:12;7181:19;;6840:366;;;:::o;7212:::-;7354:3;7375:67;7439:2;7434:3;7375:67;:::i;:::-;7368:74;;7451:93;7540:3;7451:93;:::i;:::-;7569:2;7564:3;7560:12;7553:19;;7212:366;;;:::o;7584:::-;7726:3;7747:67;7811:2;7806:3;7747:67;:::i;:::-;7740:74;;7823:93;7912:3;7823:93;:::i;:::-;7941:2;7936:3;7932:12;7925:19;;7584:366;;;:::o;7956:::-;8098:3;8119:67;8183:2;8178:3;8119:67;:::i;:::-;8112:74;;8195:93;8284:3;8195:93;:::i;:::-;8313:2;8308:3;8304:12;8297:19;;7956:366;;;:::o;8328:::-;8470:3;8491:67;8555:2;8550:3;8491:67;:::i;:::-;8484:74;;8567:93;8656:3;8567:93;:::i;:::-;8685:2;8680:3;8676:12;8669:19;;8328:366;;;:::o;8700:::-;8842:3;8863:67;8927:2;8922:3;8863:67;:::i;:::-;8856:74;;8939:93;9028:3;8939:93;:::i;:::-;9057:2;9052:3;9048:12;9041:19;;8700:366;;;:::o;9072:::-;9214:3;9235:67;9299:2;9294:3;9235:67;:::i;:::-;9228:74;;9311:93;9400:3;9311:93;:::i;:::-;9429:2;9424:3;9420:12;9413:19;;9072:366;;;:::o;9444:::-;9586:3;9607:67;9671:2;9666:3;9607:67;:::i;:::-;9600:74;;9683:93;9772:3;9683:93;:::i;:::-;9801:2;9796:3;9792:12;9785:19;;9444:366;;;:::o;9816:::-;9958:3;9979:67;10043:2;10038:3;9979:67;:::i;:::-;9972:74;;10055:93;10144:3;10055:93;:::i;:::-;10173:2;10168:3;10164:12;10157:19;;9816:366;;;:::o;10188:::-;10330:3;10351:67;10415:2;10410:3;10351:67;:::i;:::-;10344:74;;10427:93;10516:3;10427:93;:::i;:::-;10545:2;10540:3;10536:12;10529:19;;10188:366;;;:::o;10560:::-;10702:3;10723:67;10787:2;10782:3;10723:67;:::i;:::-;10716:74;;10799:93;10888:3;10799:93;:::i;:::-;10917:2;10912:3;10908:12;10901:19;;10560:366;;;:::o;10932:118::-;11019:24;11037:5;11019:24;:::i;:::-;11014:3;11007:37;10932:118;;:::o;11056:222::-;11149:4;11187:2;11176:9;11172:18;11164:26;;11200:71;11268:1;11257:9;11253:17;11244:6;11200:71;:::i;:::-;11056:222;;;;:::o;11284:640::-;11479:4;11517:3;11506:9;11502:19;11494:27;;11531:71;11599:1;11588:9;11584:17;11575:6;11531:71;:::i;:::-;11612:72;11680:2;11669:9;11665:18;11656:6;11612:72;:::i;:::-;11694;11762:2;11751:9;11747:18;11738:6;11694:72;:::i;:::-;11813:9;11807:4;11803:20;11798:2;11787:9;11783:18;11776:48;11841:76;11912:4;11903:6;11841:76;:::i;:::-;11833:84;;11284:640;;;;;;;:::o;11930:210::-;12017:4;12055:2;12044:9;12040:18;12032:26;;12068:65;12130:1;12119:9;12115:17;12106:6;12068:65;:::i;:::-;11930:210;;;;:::o;12146:313::-;12259:4;12297:2;12286:9;12282:18;12274:26;;12346:9;12340:4;12336:20;12332:1;12321:9;12317:17;12310:47;12374:78;12447:4;12438:6;12374:78;:::i;:::-;12366:86;;12146:313;;;;:::o;12465:419::-;12631:4;12669:2;12658:9;12654:18;12646:26;;12718:9;12712:4;12708:20;12704:1;12693:9;12689:17;12682:47;12746:131;12872:4;12746:131;:::i;:::-;12738:139;;12465:419;;;:::o;12890:::-;13056:4;13094:2;13083:9;13079:18;13071:26;;13143:9;13137:4;13133:20;13129:1;13118:9;13114:17;13107:47;13171:131;13297:4;13171:131;:::i;:::-;13163:139;;12890:419;;;:::o;13315:::-;13481:4;13519:2;13508:9;13504:18;13496:26;;13568:9;13562:4;13558:20;13554:1;13543:9;13539:17;13532:47;13596:131;13722:4;13596:131;:::i;:::-;13588:139;;13315:419;;;:::o;13740:::-;13906:4;13944:2;13933:9;13929:18;13921:26;;13993:9;13987:4;13983:20;13979:1;13968:9;13964:17;13957:47;14021:131;14147:4;14021:131;:::i;:::-;14013:139;;13740:419;;;:::o;14165:::-;14331:4;14369:2;14358:9;14354:18;14346:26;;14418:9;14412:4;14408:20;14404:1;14393:9;14389:17;14382:47;14446:131;14572:4;14446:131;:::i;:::-;14438:139;;14165:419;;;:::o;14590:::-;14756:4;14794:2;14783:9;14779:18;14771:26;;14843:9;14837:4;14833:20;14829:1;14818:9;14814:17;14807:47;14871:131;14997:4;14871:131;:::i;:::-;14863:139;;14590:419;;;:::o;15015:::-;15181:4;15219:2;15208:9;15204:18;15196:26;;15268:9;15262:4;15258:20;15254:1;15243:9;15239:17;15232:47;15296:131;15422:4;15296:131;:::i;:::-;15288:139;;15015:419;;;:::o;15440:::-;15606:4;15644:2;15633:9;15629:18;15621:26;;15693:9;15687:4;15683:20;15679:1;15668:9;15664:17;15657:47;15721:131;15847:4;15721:131;:::i;:::-;15713:139;;15440:419;;;:::o;15865:::-;16031:4;16069:2;16058:9;16054:18;16046:26;;16118:9;16112:4;16108:20;16104:1;16093:9;16089:17;16082:47;16146:131;16272:4;16146:131;:::i;:::-;16138:139;;15865:419;;;:::o;16290:::-;16456:4;16494:2;16483:9;16479:18;16471:26;;16543:9;16537:4;16533:20;16529:1;16518:9;16514:17;16507:47;16571:131;16697:4;16571:131;:::i;:::-;16563:139;;16290:419;;;:::o;16715:::-;16881:4;16919:2;16908:9;16904:18;16896:26;;16968:9;16962:4;16958:20;16954:1;16943:9;16939:17;16932:47;16996:131;17122:4;16996:131;:::i;:::-;16988:139;;16715:419;;;:::o;17140:222::-;17233:4;17271:2;17260:9;17256:18;17248:26;;17284:71;17352:1;17341:9;17337:17;17328:6;17284:71;:::i;:::-;17140:222;;;;:::o;17368:129::-;17402:6;17429:20;;:::i;:::-;17419:30;;17458:33;17486:4;17478:6;17458:33;:::i;:::-;17368:129;;;:::o;17503:75::-;17536:6;17569:2;17563:9;17553:19;;17503:75;:::o;17584:307::-;17645:4;17735:18;17727:6;17724:30;17721:56;;;17757:18;;:::i;:::-;17721:56;17795:29;17817:6;17795:29;:::i;:::-;17787:37;;17879:4;17873;17869:15;17861:23;;17584:307;;;:::o;17897:98::-;17948:6;17982:5;17976:12;17966:22;;17897:98;;;:::o;18001:99::-;18053:6;18087:5;18081:12;18071:22;;18001:99;;;:::o;18106:168::-;18189:11;18223:6;18218:3;18211:19;18263:4;18258:3;18254:14;18239:29;;18106:168;;;;:::o;18280:169::-;18364:11;18398:6;18393:3;18386:19;18438:4;18433:3;18429:14;18414:29;;18280:169;;;;:::o;18455:305::-;18495:3;18514:20;18532:1;18514:20;:::i;:::-;18509:25;;18548:20;18566:1;18548:20;:::i;:::-;18543:25;;18702:1;18634:66;18630:74;18627:1;18624:81;18621:107;;;18708:18;;:::i;:::-;18621:107;18752:1;18749;18745:9;18738:16;;18455:305;;;;:::o;18766:96::-;18803:7;18832:24;18850:5;18832:24;:::i;:::-;18821:35;;18766:96;;;:::o;18868:90::-;18902:7;18945:5;18938:13;18931:21;18920:32;;18868:90;;;:::o;18964:149::-;19000:7;19040:66;19033:5;19029:78;19018:89;;18964:149;;;:::o;19119:126::-;19156:7;19196:42;19189:5;19185:54;19174:65;;19119:126;;;:::o;19251:77::-;19288:7;19317:5;19306:16;;19251:77;;;:::o;19334:154::-;19418:6;19413:3;19408;19395:30;19480:1;19471:6;19466:3;19462:16;19455:27;19334:154;;;:::o;19494:307::-;19562:1;19572:113;19586:6;19583:1;19580:13;19572:113;;;19671:1;19666:3;19662:11;19656:18;19652:1;19647:3;19643:11;19636:39;19608:2;19605:1;19601:10;19596:15;;19572:113;;;19703:6;19700:1;19697:13;19694:101;;;19783:1;19774:6;19769:3;19765:16;19758:27;19694:101;19543:258;19494:307;;;:::o;19807:320::-;19851:6;19888:1;19882:4;19878:12;19868:22;;19935:1;19929:4;19925:12;19956:18;19946:81;;20012:4;20004:6;20000:17;19990:27;;19946:81;20074:2;20066:6;20063:14;20043:18;20040:38;20037:84;;;20093:18;;:::i;:::-;20037:84;19858:269;19807:320;;;:::o;20133:281::-;20216:27;20238:4;20216:27;:::i;:::-;20208:6;20204:40;20346:6;20334:10;20331:22;20310:18;20298:10;20295:34;20292:62;20289:88;;;20357:18;;:::i;:::-;20289:88;20397:10;20393:2;20386:22;20176:238;20133:281;;:::o;20420:180::-;20468:77;20465:1;20458:88;20565:4;20562:1;20555:15;20589:4;20586:1;20579:15;20606:180;20654:77;20651:1;20644:88;20751:4;20748:1;20741:15;20775:4;20772:1;20765:15;20792:180;20840:77;20837:1;20830:88;20937:4;20934:1;20927:15;20961:4;20958:1;20951:15;20978:117;21087:1;21084;21077:12;21101:117;21210:1;21207;21200:12;21224:117;21333:1;21330;21323:12;21347:117;21456:1;21453;21446:12;21470:102;21511:6;21562:2;21558:7;21553:2;21546:5;21542:14;21538:28;21528:38;;21470:102;;;:::o;21578:232::-;21718:34;21714:1;21706:6;21702:14;21695:58;21787:15;21782:2;21774:6;21770:15;21763:40;21578:232;:::o;21816:237::-;21956:34;21952:1;21944:6;21940:14;21933:58;22025:20;22020:2;22012:6;22008:15;22001:45;21816:237;:::o;22059:224::-;22199:34;22195:1;22187:6;22183:14;22176:58;22268:7;22263:2;22255:6;22251:15;22244:32;22059:224;:::o;22289:178::-;22429:30;22425:1;22417:6;22413:14;22406:54;22289:178;:::o;22473:223::-;22613:34;22609:1;22601:6;22597:14;22590:58;22682:6;22677:2;22669:6;22665:15;22658:31;22473:223;:::o;22702:175::-;22842:27;22838:1;22830:6;22826:14;22819:51;22702:175;:::o;22883:228::-;23023:34;23019:1;23011:6;23007:14;23000:58;23092:11;23087:2;23079:6;23075:15;23068:36;22883:228;:::o;23117:182::-;23257:34;23253:1;23245:6;23241:14;23234:58;23117:182;:::o;23305:174::-;23445:26;23441:1;23433:6;23429:14;23422:50;23305:174;:::o;23485:220::-;23625:34;23621:1;23613:6;23609:14;23602:58;23694:3;23689:2;23681:6;23677:15;23670:28;23485:220;:::o;23711:248::-;23851:34;23847:1;23839:6;23835:14;23828:58;23920:31;23915:2;23907:6;23903:15;23896:56;23711:248;:::o;23965:122::-;24038:24;24056:5;24038:24;:::i;:::-;24031:5;24028:35;24018:63;;24077:1;24074;24067:12;24018:63;23965:122;:::o;24093:116::-;24163:21;24178:5;24163:21;:::i;:::-;24156:5;24153:32;24143:60;;24199:1;24196;24189:12;24143:60;24093:116;:::o;24215:120::-;24287:23;24304:5;24287:23;:::i;:::-;24280:5;24277:34;24267:62;;24325:1;24322;24315:12;24267:62;24215:120;:::o;24341:122::-;24414:24;24432:5;24414:24;:::i;:::-;24407:5;24404:35;24394:63;;24453:1;24450;24443:12;24394:63;24341:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1809800","executionCost":"infinite","totalCost":"infinite"},"external":{"TOKEN_URI()":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2902","getApproved(uint256)":"5300","getTokenCounter()":"2526","isApprovedForAll(address,address)":"infinite","mintNft()":"infinite","name()":"infinite","ownerOf(uint256)":"3069","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"TOKEN_URI()":"78ce9035","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","mintNft()":"c2229fea","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BasicNft.sol\":\"BasicNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/BasicNft.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\npragma solidity ^0.8.7;\\n\\ncontract BasicNft is ERC721 {\\n    string public constant TOKEN_URI =\\n        \\\"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\\\";\\n    uint256 private s_tokenCounter;\\n\\n    constructor() ERC721(\\\"Dogie\\\", \\\"DOG\\\") {\\n        s_tokenCounter = 0;\\n    }\\n\\n    function mintNft() public returns (uint256) {\\n        _safeMint(msg.sender, s_tokenCounter);\\n        s_tokenCounter = s_tokenCounter + 1;\\n        return s_tokenCounter;\\n    }\\n\\n    function tokenURI(uint256 /*tokenId*/) public pure override returns (string memory) {\\n        //\\n        return TOKEN_URI;\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n}\\n\",\"keccak256\":\"0x637f2b795b06281822142945a4167e4995df5a8c6d9737d78d52e3b830b7c0b7\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}","storageLayout":{"storage":[{"astId":959,"contract":"contracts/BasicNft.sol:BasicNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":961,"contract":"contracts/BasicNft.sol:BasicNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":965,"contract":"contracts/BasicNft.sol:BasicNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":969,"contract":"contracts/BasicNft.sol:BasicNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":973,"contract":"contracts/BasicNft.sol:BasicNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":979,"contract":"contracts/BasicNft.sol:BasicNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3584,"contract":"contracts/BasicNft.sol:BasicNft","label":"s_tokenCounter","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RandomIpfsNft.sol":{"RandomIpfsNft":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint256","name":"mintFee","type":"uint256"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"string[3]","name":"dogTokenURIs","type":"string[3]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"RandomIpfsNft__NeedMoreETHSent","type":"error"},{"inputs":[],"name":"RandomIpfsNft__RangeOutOfBounds","type":"error"},{"inputs":[],"name":"RandomIpfsNft__TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum RandomIpfsNft.Breed","name":"dogBreed","type":"uint8"},{"indexed":false,"internalType":"address","name":"minter","type":"address"}],"name":"NftMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"address","name":"requester","type":"address"}],"name":"NftRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"moddedRng","type":"uint256"}],"name":"getBreedFromModdedRng","outputs":[{"internalType":"enum RandomIpfsNft.Breed","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getChanceArray","outputs":[{"internalType":"uint256[3]","name":"","type":"uint256[3]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDogTokenURIs","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMintFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestNft","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_requestIdToSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_21":{"entryPoint":null,"id":21,"parameterSlots":1,"returnSlots":0},"@_3751":{"entryPoint":null,"id":3751,"parameterSlots":6,"returnSlots":0},"@_844":{"entryPoint":null,"id":844,"parameterSlots":0,"returnSlots":0},"@_996":{"entryPoint":null,"id":996,"parameterSlots":2,"returnSlots":0},"@_msgSender_2488":{"entryPoint":464,"id":2488,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_932":{"entryPoint":472,"id":932,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1059,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1206,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1281,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1352,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1375,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1426,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1449,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":1472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint256t_uint32t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1495,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_memory":{"entryPoint":1682,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1713,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr":{"entryPoint":1723,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1764,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":1818,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1838,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1848,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1880,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1890,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":1906,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1926,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1980,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2034,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":2088,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2135,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2182,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2187,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2192,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2197,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2202,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2207,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2224,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2250,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2276,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":2302,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":2328,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8292:19","statements":[{"body":{"nodeType":"YulBlock","src":"145:784:19","statements":[{"nodeType":"YulAssignment","src":"155:98:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"245:6:19"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulIdentifier","src":"180:64:19"},"nodeType":"YulFunctionCall","src":"180:72:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"164:15:19"},"nodeType":"YulFunctionCall","src":"164:89:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"155:5:19"}]},{"nodeType":"YulVariableDeclaration","src":"262:16:19","value":{"name":"array","nodeType":"YulIdentifier","src":"273:5:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"266:3:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"288:17:19","value":{"name":"offset","nodeType":"YulIdentifier","src":"299:6:19"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"292:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"354:103:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"368:77:19"},"nodeType":"YulFunctionCall","src":"368:79:19"},"nodeType":"YulExpressionStatement","src":"368:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"324:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"333:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"341:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"329:3:19"},"nodeType":"YulFunctionCall","src":"329:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"320:3:19"},"nodeType":"YulFunctionCall","src":"320:27:19"},{"name":"end","nodeType":"YulIdentifier","src":"349:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"317:2:19"},"nodeType":"YulFunctionCall","src":"317:36:19"},"nodeType":"YulIf","src":"314:143:19"},{"body":{"nodeType":"YulBlock","src":"526:397:19","statements":[{"nodeType":"YulVariableDeclaration","src":"541:29:19","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"566:3:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"560:5:19"},"nodeType":"YulFunctionCall","src":"560:10:19"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"545:11:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"622:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"624:77:19"},"nodeType":"YulFunctionCall","src":"624:79:19"},"nodeType":"YulExpressionStatement","src":"624:79:19"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"589:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"602:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"586:2:19"},"nodeType":"YulFunctionCall","src":"586:35:19"},"nodeType":"YulIf","src":"583:122:19"},{"nodeType":"YulVariableDeclaration","src":"718:42:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"740:6:19"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"748:11:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"736:3:19"},"nodeType":"YulFunctionCall","src":"736:24:19"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"722:10:19","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"781:3:19"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"828:10:19"},{"name":"end","nodeType":"YulIdentifier","src":"840:3:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"786:41:19"},"nodeType":"YulFunctionCall","src":"786:58:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"774:6:19"},"nodeType":"YulFunctionCall","src":"774:71:19"},"nodeType":"YulExpressionStatement","src":"774:71:19"},{"nodeType":"YulAssignment","src":"858:21:19","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"869:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"874:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"865:3:19"},"nodeType":"YulFunctionCall","src":"865:14:19"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"858:3:19"}]},{"nodeType":"YulAssignment","src":"892:21:19","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"903:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"908:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"899:3:19"},"nodeType":"YulFunctionCall","src":"899:14:19"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"892:3:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"488:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"491:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"485:2:19"},"nodeType":"YulFunctionCall","src":"485:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"499:18:19","statements":[{"nodeType":"YulAssignment","src":"501:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"510:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"513:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:19"},"nodeType":"YulFunctionCall","src":"506:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"501:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"470:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"472:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"481:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"476:1:19","type":""}]}]},"src":"466:457:19"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"115:6:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"123:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"131:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"139:5:19","type":""}],"src":"24:905:19"},{"body":{"nodeType":"YulBlock","src":"1030:326:19","statements":[{"nodeType":"YulAssignment","src":"1040:75:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1107:6:19"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1065:41:19"},"nodeType":"YulFunctionCall","src":"1065:49:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1049:15:19"},"nodeType":"YulFunctionCall","src":"1049:66:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1040:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1131:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"1138:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1124:6:19"},"nodeType":"YulFunctionCall","src":"1124:21:19"},"nodeType":"YulExpressionStatement","src":"1124:21:19"},{"nodeType":"YulVariableDeclaration","src":"1154:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1169:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"1176:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1165:3:19"},"nodeType":"YulFunctionCall","src":"1165:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1158:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1219:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"1221:77:19"},"nodeType":"YulFunctionCall","src":"1221:79:19"},"nodeType":"YulExpressionStatement","src":"1221:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1200:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"1205:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1196:3:19"},"nodeType":"YulFunctionCall","src":"1196:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"1214:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1193:2:19"},"nodeType":"YulFunctionCall","src":"1193:25:19"},"nodeType":"YulIf","src":"1190:112:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1333:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"1338:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"1343:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1311:21:19"},"nodeType":"YulFunctionCall","src":"1311:39:19"},"nodeType":"YulExpressionStatement","src":"1311:39:19"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1003:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"1008:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1016:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1024:5:19","type":""}],"src":"935:421:19"},{"body":{"nodeType":"YulBlock","src":"1425:80:19","statements":[{"nodeType":"YulAssignment","src":"1435:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1450:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1444:5:19"},"nodeType":"YulFunctionCall","src":"1444:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1435:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1493:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1466:26:19"},"nodeType":"YulFunctionCall","src":"1466:33:19"},"nodeType":"YulExpressionStatement","src":"1466:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1403:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1411:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1419:5:19","type":""}],"src":"1362:143:19"},{"body":{"nodeType":"YulBlock","src":"1624:285:19","statements":[{"body":{"nodeType":"YulBlock","src":"1673:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1675:77:19"},"nodeType":"YulFunctionCall","src":"1675:79:19"},"nodeType":"YulExpressionStatement","src":"1675:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1652:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1660:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1648:3:19"},"nodeType":"YulFunctionCall","src":"1648:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"1667:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1644:3:19"},"nodeType":"YulFunctionCall","src":"1644:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1637:6:19"},"nodeType":"YulFunctionCall","src":"1637:35:19"},"nodeType":"YulIf","src":"1634:122:19"},{"nodeType":"YulVariableDeclaration","src":"1765:18:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1779:4:19","type":"","value":"0x03"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1769:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1792:111:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1883:6:19"},{"name":"length","nodeType":"YulIdentifier","src":"1891:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"1899:3:19"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1801:81:19"},"nodeType":"YulFunctionCall","src":"1801:102:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1792:5:19"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1602:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1610:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1618:5:19","type":""}],"src":"1528:381:19"},{"body":{"nodeType":"YulBlock","src":"1978:80:19","statements":[{"nodeType":"YulAssignment","src":"1988:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2003:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1997:5:19"},"nodeType":"YulFunctionCall","src":"1997:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1988:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2046:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"2019:26:19"},"nodeType":"YulFunctionCall","src":"2019:33:19"},"nodeType":"YulExpressionStatement","src":"2019:33:19"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1956:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1964:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1972:5:19","type":""}],"src":"1915:143:19"},{"body":{"nodeType":"YulBlock","src":"2151:282:19","statements":[{"body":{"nodeType":"YulBlock","src":"2200:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2202:77:19"},"nodeType":"YulFunctionCall","src":"2202:79:19"},"nodeType":"YulExpressionStatement","src":"2202:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2179:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2187:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2175:3:19"},"nodeType":"YulFunctionCall","src":"2175:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"2194:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2171:3:19"},"nodeType":"YulFunctionCall","src":"2171:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2164:6:19"},"nodeType":"YulFunctionCall","src":"2164:35:19"},"nodeType":"YulIf","src":"2161:122:19"},{"nodeType":"YulVariableDeclaration","src":"2292:27:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2312:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2306:5:19"},"nodeType":"YulFunctionCall","src":"2306:13:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2296:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2328:99:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2400:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2396:3:19"},"nodeType":"YulFunctionCall","src":"2396:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"2415:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"2423:3:19"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2337:58:19"},"nodeType":"YulFunctionCall","src":"2337:90:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2328:5:19"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2129:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2137:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2145:5:19","type":""}],"src":"2078:355:19"},{"body":{"nodeType":"YulBlock","src":"2502:80:19","statements":[{"nodeType":"YulAssignment","src":"2512:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2527:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2521:5:19"},"nodeType":"YulFunctionCall","src":"2521:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2512:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2570:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2543:26:19"},"nodeType":"YulFunctionCall","src":"2543:33:19"},"nodeType":"YulExpressionStatement","src":"2543:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2480:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2488:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2496:5:19","type":""}],"src":"2439:143:19"},{"body":{"nodeType":"YulBlock","src":"2650:79:19","statements":[{"nodeType":"YulAssignment","src":"2660:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2675:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2669:5:19"},"nodeType":"YulFunctionCall","src":"2669:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2660:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2717:5:19"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"2691:25:19"},"nodeType":"YulFunctionCall","src":"2691:32:19"},"nodeType":"YulExpressionStatement","src":"2691:32:19"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2628:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2636:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2644:5:19","type":""}],"src":"2588:141:19"},{"body":{"nodeType":"YulBlock","src":"2797:79:19","statements":[{"nodeType":"YulAssignment","src":"2807:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2822:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2816:5:19"},"nodeType":"YulFunctionCall","src":"2816:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2807:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2864:5:19"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"2838:25:19"},"nodeType":"YulFunctionCall","src":"2838:32:19"},"nodeType":"YulExpressionStatement","src":"2838:32:19"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2775:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2783:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2791:5:19","type":""}],"src":"2735:141:19"},{"body":{"nodeType":"YulBlock","src":"3075:1156:19","statements":[{"body":{"nodeType":"YulBlock","src":"3122:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3124:77:19"},"nodeType":"YulFunctionCall","src":"3124:79:19"},"nodeType":"YulExpressionStatement","src":"3124:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3096:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3105:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3092:3:19"},"nodeType":"YulFunctionCall","src":"3092:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3117:3:19","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3088:3:19"},"nodeType":"YulFunctionCall","src":"3088:33:19"},"nodeType":"YulIf","src":"3085:120:19"},{"nodeType":"YulBlock","src":"3215:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3230:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3244:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3234:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3259:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3305:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3316:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3301:3:19"},"nodeType":"YulFunctionCall","src":"3301:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3325:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3269:31:19"},"nodeType":"YulFunctionCall","src":"3269:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3259:6:19"}]}]},{"nodeType":"YulBlock","src":"3353:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3368:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3382:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3372:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3398:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3443:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3454:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3439:3:19"},"nodeType":"YulFunctionCall","src":"3439:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3463:7:19"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"3408:30:19"},"nodeType":"YulFunctionCall","src":"3408:63:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3398:6:19"}]}]},{"nodeType":"YulBlock","src":"3491:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3506:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3520:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3510:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3536:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3582:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3593:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3578:3:19"},"nodeType":"YulFunctionCall","src":"3578:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3602:7:19"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"3546:31:19"},"nodeType":"YulFunctionCall","src":"3546:64:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3536:6:19"}]}]},{"nodeType":"YulBlock","src":"3630:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3645:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3659:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3649:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3675:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3721:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3732:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3717:3:19"},"nodeType":"YulFunctionCall","src":"3717:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3741:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3685:31:19"},"nodeType":"YulFunctionCall","src":"3685:64:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3675:6:19"}]}]},{"nodeType":"YulBlock","src":"3769:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3784:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3798:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3788:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3815:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3860:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3871:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3856:3:19"},"nodeType":"YulFunctionCall","src":"3856:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3880:7:19"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"3825:30:19"},"nodeType":"YulFunctionCall","src":"3825:63:19"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3815:6:19"}]}]},{"nodeType":"YulBlock","src":"3908:316:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3923:40:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3947:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3958:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3943:3:19"},"nodeType":"YulFunctionCall","src":"3943:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3937:5:19"},"nodeType":"YulFunctionCall","src":"3937:26:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3927:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"4010:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4012:77:19"},"nodeType":"YulFunctionCall","src":"4012:79:19"},"nodeType":"YulExpressionStatement","src":"4012:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3982:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3990:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3979:2:19"},"nodeType":"YulFunctionCall","src":"3979:30:19"},"nodeType":"YulIf","src":"3976:117:19"},{"nodeType":"YulAssignment","src":"4107:107:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4186:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4197:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4182:3:19"},"nodeType":"YulFunctionCall","src":"4182:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4206:7:19"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4117:64:19"},"nodeType":"YulFunctionCall","src":"4117:97:19"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4107:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint256t_uint32t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3005:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3016:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3028:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3036:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3044:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3052:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3060:6:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3068:6:19","type":""}],"src":"2882:1349:19"},{"body":{"nodeType":"YulBlock","src":"4278:88:19","statements":[{"nodeType":"YulAssignment","src":"4288:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4298:18:19"},"nodeType":"YulFunctionCall","src":"4298:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4288:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4347:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"4355:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4327:19:19"},"nodeType":"YulFunctionCall","src":"4327:33:19"},"nodeType":"YulExpressionStatement","src":"4327:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4262:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4271:6:19","type":""}],"src":"4237:129:19"},{"body":{"nodeType":"YulBlock","src":"4412:35:19","statements":[{"nodeType":"YulAssignment","src":"4422:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4438:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4432:5:19"},"nodeType":"YulFunctionCall","src":"4432:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4422:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4405:6:19","type":""}],"src":"4372:75:19"},{"body":{"nodeType":"YulBlock","src":"4543:169:19","statements":[{"body":{"nodeType":"YulBlock","src":"4648:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4650:16:19"},"nodeType":"YulFunctionCall","src":"4650:18:19"},"nodeType":"YulExpressionStatement","src":"4650:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4620:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4628:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4617:2:19"},"nodeType":"YulFunctionCall","src":"4617:30:19"},"nodeType":"YulIf","src":"4614:56:19"},{"nodeType":"YulAssignment","src":"4680:25:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4692:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4700:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4688:3:19"},"nodeType":"YulFunctionCall","src":"4688:17:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4680:4:19"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4527:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4538:4:19","type":""}],"src":"4453:259:19"},{"body":{"nodeType":"YulBlock","src":"4785:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"4890:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4892:16:19"},"nodeType":"YulFunctionCall","src":"4892:18:19"},"nodeType":"YulExpressionStatement","src":"4892:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4862:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4870:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4859:2:19"},"nodeType":"YulFunctionCall","src":"4859:30:19"},"nodeType":"YulIf","src":"4856:56:19"},{"nodeType":"YulAssignment","src":"4922:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4952:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4930:21:19"},"nodeType":"YulFunctionCall","src":"4930:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4922:4:19"}]},{"nodeType":"YulAssignment","src":"4996:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5008:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"5014:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5004:3:19"},"nodeType":"YulFunctionCall","src":"5004:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4996:4:19"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4769:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4780:4:19","type":""}],"src":"4718:308:19"},{"body":{"nodeType":"YulBlock","src":"5077:51:19","statements":[{"nodeType":"YulAssignment","src":"5087:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5116:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5098:17:19"},"nodeType":"YulFunctionCall","src":"5098:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5087:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5059:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5069:7:19","type":""}],"src":"5032:96:19"},{"body":{"nodeType":"YulBlock","src":"5179:32:19","statements":[{"nodeType":"YulAssignment","src":"5189:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"5200:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5189:7:19"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5161:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5171:7:19","type":""}],"src":"5134:77:19"},{"body":{"nodeType":"YulBlock","src":"5262:81:19","statements":[{"nodeType":"YulAssignment","src":"5272:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5287:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5294:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5283:3:19"},"nodeType":"YulFunctionCall","src":"5283:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5272:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5244:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5254:7:19","type":""}],"src":"5217:126:19"},{"body":{"nodeType":"YulBlock","src":"5394:32:19","statements":[{"nodeType":"YulAssignment","src":"5404:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"5415:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5404:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5376:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5386:7:19","type":""}],"src":"5349:77:19"},{"body":{"nodeType":"YulBlock","src":"5476:49:19","statements":[{"nodeType":"YulAssignment","src":"5486:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5501:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5508:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5497:3:19"},"nodeType":"YulFunctionCall","src":"5497:22:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5486:7:19"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5458:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5468:7:19","type":""}],"src":"5432:93:19"},{"body":{"nodeType":"YulBlock","src":"5575:57:19","statements":[{"nodeType":"YulAssignment","src":"5585:41:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5600:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5607:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5596:3:19"},"nodeType":"YulFunctionCall","src":"5596:30:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5585:7:19"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5557:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5567:7:19","type":""}],"src":"5531:101:19"},{"body":{"nodeType":"YulBlock","src":"5687:258:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5697:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5706:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5701:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"5766:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5791:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"5796:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5787:3:19"},"nodeType":"YulFunctionCall","src":"5787:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5810:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"5815:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5806:3:19"},"nodeType":"YulFunctionCall","src":"5806:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5800:5:19"},"nodeType":"YulFunctionCall","src":"5800:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5780:6:19"},"nodeType":"YulFunctionCall","src":"5780:39:19"},"nodeType":"YulExpressionStatement","src":"5780:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5727:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"5730:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5724:2:19"},"nodeType":"YulFunctionCall","src":"5724:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5738:19:19","statements":[{"nodeType":"YulAssignment","src":"5740:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5749:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"5752:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5745:3:19"},"nodeType":"YulFunctionCall","src":"5745:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5740:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"5720:3:19","statements":[]},"src":"5716:113:19"},{"body":{"nodeType":"YulBlock","src":"5863:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5913:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"5918:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5909:3:19"},"nodeType":"YulFunctionCall","src":"5909:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"5927:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5902:6:19"},"nodeType":"YulFunctionCall","src":"5902:27:19"},"nodeType":"YulExpressionStatement","src":"5902:27:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5844:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"5847:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5841:2:19"},"nodeType":"YulFunctionCall","src":"5841:13:19"},"nodeType":"YulIf","src":"5838:101:19"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5669:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5674:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"5679:6:19","type":""}],"src":"5638:307:19"},{"body":{"nodeType":"YulBlock","src":"6002:269:19","statements":[{"nodeType":"YulAssignment","src":"6012:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6026:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"6032:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6022:3:19"},"nodeType":"YulFunctionCall","src":"6022:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6012:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"6043:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6073:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"6079:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6069:3:19"},"nodeType":"YulFunctionCall","src":"6069:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6047:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"6120:51:19","statements":[{"nodeType":"YulAssignment","src":"6134:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6148:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"6156:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6144:3:19"},"nodeType":"YulFunctionCall","src":"6144:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6134:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6100:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6093:6:19"},"nodeType":"YulFunctionCall","src":"6093:26:19"},"nodeType":"YulIf","src":"6090:81:19"},{"body":{"nodeType":"YulBlock","src":"6223:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6237:16:19"},"nodeType":"YulFunctionCall","src":"6237:18:19"},"nodeType":"YulExpressionStatement","src":"6237:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6187:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6210:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"6218:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6207:2:19"},"nodeType":"YulFunctionCall","src":"6207:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6184:2:19"},"nodeType":"YulFunctionCall","src":"6184:38:19"},"nodeType":"YulIf","src":"6181:84:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5986:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5995:6:19","type":""}],"src":"5951:320:19"},{"body":{"nodeType":"YulBlock","src":"6320:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6330:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6352:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6382:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6360:21:19"},"nodeType":"YulFunctionCall","src":"6360:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6348:3:19"},"nodeType":"YulFunctionCall","src":"6348:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6334:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"6499:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6501:16:19"},"nodeType":"YulFunctionCall","src":"6501:18:19"},"nodeType":"YulExpressionStatement","src":"6501:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6442:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"6454:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6439:2:19"},"nodeType":"YulFunctionCall","src":"6439:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6478:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6490:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6475:2:19"},"nodeType":"YulFunctionCall","src":"6475:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6436:2:19"},"nodeType":"YulFunctionCall","src":"6436:62:19"},"nodeType":"YulIf","src":"6433:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6537:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6541:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6530:6:19"},"nodeType":"YulFunctionCall","src":"6530:22:19"},"nodeType":"YulExpressionStatement","src":"6530:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6306:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"6314:4:19","type":""}],"src":"6277:281:19"},{"body":{"nodeType":"YulBlock","src":"6592:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6609:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6612:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6602:6:19"},"nodeType":"YulFunctionCall","src":"6602:88:19"},"nodeType":"YulExpressionStatement","src":"6602:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6706:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6709:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6699:6:19"},"nodeType":"YulFunctionCall","src":"6699:15:19"},"nodeType":"YulExpressionStatement","src":"6699:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6730:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6733:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6723:6:19"},"nodeType":"YulFunctionCall","src":"6723:15:19"},"nodeType":"YulExpressionStatement","src":"6723:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6564:180:19"},{"body":{"nodeType":"YulBlock","src":"6778:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6795:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6798:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6788:6:19"},"nodeType":"YulFunctionCall","src":"6788:88:19"},"nodeType":"YulExpressionStatement","src":"6788:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6892:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6895:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6885:6:19"},"nodeType":"YulFunctionCall","src":"6885:15:19"},"nodeType":"YulExpressionStatement","src":"6885:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6916:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6919:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6909:6:19"},"nodeType":"YulFunctionCall","src":"6909:15:19"},"nodeType":"YulExpressionStatement","src":"6909:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6750:180:19"},{"body":{"nodeType":"YulBlock","src":"7025:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7042:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7045:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7035:6:19"},"nodeType":"YulFunctionCall","src":"7035:12:19"},"nodeType":"YulExpressionStatement","src":"7035:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6936:117:19"},{"body":{"nodeType":"YulBlock","src":"7148:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7165:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7168:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7158:6:19"},"nodeType":"YulFunctionCall","src":"7158:12:19"},"nodeType":"YulExpressionStatement","src":"7158:12:19"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7059:117:19"},{"body":{"nodeType":"YulBlock","src":"7271:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7288:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7291:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7281:6:19"},"nodeType":"YulFunctionCall","src":"7281:12:19"},"nodeType":"YulExpressionStatement","src":"7281:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7182:117:19"},{"body":{"nodeType":"YulBlock","src":"7394:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7411:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7414:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7404:6:19"},"nodeType":"YulFunctionCall","src":"7404:12:19"},"nodeType":"YulExpressionStatement","src":"7404:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"7305:117:19"},{"body":{"nodeType":"YulBlock","src":"7517:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7534:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7537:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7527:6:19"},"nodeType":"YulFunctionCall","src":"7527:12:19"},"nodeType":"YulExpressionStatement","src":"7527:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"7428:117:19"},{"body":{"nodeType":"YulBlock","src":"7599:54:19","statements":[{"nodeType":"YulAssignment","src":"7609:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7627:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7634:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7623:3:19"},"nodeType":"YulFunctionCall","src":"7623:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7643:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7639:3:19"},"nodeType":"YulFunctionCall","src":"7639:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7619:3:19"},"nodeType":"YulFunctionCall","src":"7619:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7609:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7582:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7592:6:19","type":""}],"src":"7551:102:19"},{"body":{"nodeType":"YulBlock","src":"7702:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"7759:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7768:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7771:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7761:6:19"},"nodeType":"YulFunctionCall","src":"7761:12:19"},"nodeType":"YulExpressionStatement","src":"7761:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7725:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7750:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7732:17:19"},"nodeType":"YulFunctionCall","src":"7732:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7722:2:19"},"nodeType":"YulFunctionCall","src":"7722:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7715:6:19"},"nodeType":"YulFunctionCall","src":"7715:43:19"},"nodeType":"YulIf","src":"7712:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7695:5:19","type":""}],"src":"7659:122:19"},{"body":{"nodeType":"YulBlock","src":"7830:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"7887:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7896:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7899:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7889:6:19"},"nodeType":"YulFunctionCall","src":"7889:12:19"},"nodeType":"YulExpressionStatement","src":"7889:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7853:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7878:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7860:17:19"},"nodeType":"YulFunctionCall","src":"7860:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7850:2:19"},"nodeType":"YulFunctionCall","src":"7850:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7843:6:19"},"nodeType":"YulFunctionCall","src":"7843:43:19"},"nodeType":"YulIf","src":"7840:63:19"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7823:5:19","type":""}],"src":"7787:122:19"},{"body":{"nodeType":"YulBlock","src":"7958:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"8015:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8024:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8027:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8017:6:19"},"nodeType":"YulFunctionCall","src":"8017:12:19"},"nodeType":"YulExpressionStatement","src":"8017:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7981:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8006:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7988:17:19"},"nodeType":"YulFunctionCall","src":"7988:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7978:2:19"},"nodeType":"YulFunctionCall","src":"7978:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7971:6:19"},"nodeType":"YulFunctionCall","src":"7971:43:19"},"nodeType":"YulIf","src":"7968:63:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7951:5:19","type":""}],"src":"7915:122:19"},{"body":{"nodeType":"YulBlock","src":"8085:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"8141:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8150:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8153:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8143:6:19"},"nodeType":"YulFunctionCall","src":"8143:12:19"},"nodeType":"YulExpressionStatement","src":"8143:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8108:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8132:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"8115:16:19"},"nodeType":"YulFunctionCall","src":"8115:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8105:2:19"},"nodeType":"YulFunctionCall","src":"8105:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8098:6:19"},"nodeType":"YulFunctionCall","src":"8098:42:19"},"nodeType":"YulIf","src":"8095:62:19"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8078:5:19","type":""}],"src":"8043:120:19"},{"body":{"nodeType":"YulBlock","src":"8211:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"8267:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8276:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8279:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8269:6:19"},"nodeType":"YulFunctionCall","src":"8269:12:19"},"nodeType":"YulExpressionStatement","src":"8269:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8234:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8258:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"8241:16:19"},"nodeType":"YulFunctionCall","src":"8241:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8231:2:19"},"nodeType":"YulFunctionCall","src":"8231:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8224:6:19"},"nodeType":"YulFunctionCall","src":"8224:42:19"},"nodeType":"YulIf","src":"8221:62:19"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8204:5:19","type":""}],"src":"8169:120:19"}]},"contents":"{\n\n    // string[3]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length))\n        let dst := array\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string[3]\n    function abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x03\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_bytes32t_uint256t_uint32t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x43E7 CODESIZE SUB DUP1 PUSH3 0x43E7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x5D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52616E646F6D2049504653204E46540000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52494E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP8 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xF5 SWAP3 SWAP2 SWAP1 PUSH3 0x29E JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10E SWAP3 SWAP2 SWAP1 PUSH3 0x29E JUMP JUMPDEST POP POP POP PUSH3 0x131 PUSH3 0x125 PUSH3 0x1D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP DUP4 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE POP POP DUP1 PUSH1 0x9 SWAP1 PUSH1 0x3 PUSH3 0x1BA SWAP3 SWAP2 SWAP1 PUSH3 0x32F JUMP JUMPDEST POP DUP3 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x932 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2AC SWAP1 PUSH3 0x7BC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x2D0 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x31C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2EB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x31C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x31C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x31B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2FE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x32B SWAP2 SWAP1 PUSH3 0x396 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x383 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x382 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x371 SWAP3 SWAP2 SWAP1 PUSH3 0x29E JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x350 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x392 SWAP2 SWAP1 PUSH3 0x3B5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3B1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x397 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3D9 JUMPI PUSH1 0x0 DUP2 DUP2 PUSH3 0x3CF SWAP2 SWAP1 PUSH3 0x3DD JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x3B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH3 0x3EB SWAP1 PUSH3 0x7BC JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH3 0x3FF JUMPI POP PUSH3 0x420 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x41F SWAP2 SWAP1 PUSH3 0x396 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x43A PUSH3 0x434 DUP5 PUSH3 0x6BB JUMP JUMPDEST PUSH3 0x692 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH3 0x457 JUMPI PUSH3 0x456 PUSH3 0x88B JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x4AC JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x481 JUMPI PUSH3 0x480 PUSH3 0x886 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH3 0x490 DUP10 DUP3 PUSH3 0x55F JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD SWAP4 POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x45A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4CD PUSH3 0x4C7 DUP5 PUSH3 0x6E4 JUMP JUMPDEST PUSH3 0x692 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x4EC JUMPI PUSH3 0x4EB PUSH3 0x890 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP5 DUP3 DUP6 PUSH3 0x786 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x512 DUP2 PUSH3 0x8B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x530 JUMPI PUSH3 0x52F PUSH3 0x886 JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH3 0x53F DUP5 DUP3 DUP6 PUSH3 0x423 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x559 DUP2 PUSH3 0x8CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x577 JUMPI PUSH3 0x576 PUSH3 0x886 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x589 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x4B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5A3 DUP2 PUSH3 0x8E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5BA DUP2 PUSH3 0x8FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5D1 DUP2 PUSH3 0x918 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x5F7 JUMPI PUSH3 0x5F6 PUSH3 0x89A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x607 DUP10 DUP3 DUP11 ADD PUSH3 0x501 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x61A DUP10 DUP3 DUP11 ADD PUSH3 0x5C0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x62D DUP10 DUP3 DUP11 ADD PUSH3 0x548 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x640 DUP10 DUP3 DUP11 ADD PUSH3 0x592 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x653 DUP10 DUP3 DUP11 ADD PUSH3 0x5A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x677 JUMPI PUSH3 0x676 PUSH3 0x895 JUMP JUMPDEST JUMPDEST PUSH3 0x685 DUP10 DUP3 DUP11 ADD PUSH3 0x518 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x69E PUSH3 0x6B1 JUMP JUMPDEST SWAP1 POP PUSH3 0x6AC DUP3 DUP3 PUSH3 0x7F2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x6D9 JUMPI PUSH3 0x6D8 PUSH3 0x857 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x702 JUMPI PUSH3 0x701 PUSH3 0x857 JUMP JUMPDEST JUMPDEST PUSH3 0x70D DUP3 PUSH3 0x89F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x727 DUP3 PUSH3 0x738 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x7A6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x789 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x7B6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x7EC JUMPI PUSH3 0x7EB PUSH3 0x828 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7FD DUP3 PUSH3 0x89F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x81F JUMPI PUSH3 0x81E PUSH3 0x857 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x8BB DUP2 PUSH3 0x71A JUMP JUMPDEST DUP2 EQ PUSH3 0x8C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x8D5 DUP2 PUSH3 0x72E JUMP JUMPDEST DUP2 EQ PUSH3 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x8EF DUP2 PUSH3 0x758 JUMP JUMPDEST DUP2 EQ PUSH3 0x8FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x909 DUP2 PUSH3 0x762 JUMP JUMPDEST DUP2 EQ PUSH3 0x915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x923 DUP2 PUSH3 0x772 JUMP JUMPDEST DUP2 EQ PUSH3 0x92F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xC0 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0xE0 SHR PUSH2 0x120 MLOAD PUSH2 0x3A4B PUSH3 0x99C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xC4F ADD MSTORE PUSH2 0xE48 ADD MSTORE PUSH1 0x0 PUSH2 0xF22 ADD MSTORE PUSH1 0x0 PUSH2 0xEDE ADD MSTORE PUSH1 0x0 PUSH2 0xEFF ADD MSTORE PUSH1 0x0 PUSH2 0xEA2 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x8D1 ADD MSTORE PUSH2 0x925 ADD MSTORE PUSH2 0x3A4B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x166 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA51CCCF3 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0xF4EB69C3 EQ PUSH2 0x5C0 JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0xA51CCCF3 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x4F4 JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xA36F573B EQ PUSH2 0x45C JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35E JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x262 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x2ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2F86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x28FA JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x9EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x348 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x3168 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x2777 JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x3168 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B0 PUSH2 0xC37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x3168 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41D PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x2F86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x28BA JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x2F42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DE PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x3168 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x2837 JUMP JUMPDEST PUSH2 0x1044 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x544 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x2F86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x581 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58E SWAP2 SWAP1 PUSH2 0x2ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x2777 JUMP JUMPDEST PUSH2 0x124D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH2 0x12D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x2F86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6C8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x6D8 JUMPI POP PUSH2 0x6D7 DUP3 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71A SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x767 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x767 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP3 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x3128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x852 PUSH2 0x1436 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x881 JUMPI POP PUSH2 0x880 DUP2 PUSH2 0x87B PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP1 PUSH2 0x3148 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA DUP4 DUP4 PUSH2 0x143E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x981 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP3 SWAP2 SWAP1 PUSH2 0x2E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98B DUP3 DUP3 PUSH2 0x14F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9A0 PUSH2 0x99A PUSH2 0x1436 JUMP JUMPDEST DUP3 PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP1 PUSH2 0x2FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EA DUP4 DUP4 DUP4 PUSH2 0x1726 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9F7 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xA22 SWAP1 PUSH2 0x2E14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA5F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA7E25B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xABE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1044 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xACB PUSH2 0x2526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAFA DUP4 PUSH2 0x1A9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB63 SWAP1 PUSH2 0x3108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE7 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3F PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0xC49 PUSH1 0x0 PUSH2 0x1ADB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xCAC SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCD8 SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD25 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCFA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD25 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD08 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD41 PUSH2 0xD3A PUSH2 0x1436 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1BA1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0xD89 PUSH2 0xAC3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xE0C JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0xDBD JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xDB5 JUMPI PUSH2 0xDB4 PUSH2 0x3586 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 LT JUMPDEST ISZERO PUSH2 0xDDF JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDD5 JUMPI PUSH2 0xDD4 PUSH2 0x3528 JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xE3F JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xDF2 JUMPI PUSH2 0xDF1 PUSH2 0x3586 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP3 POP DUP1 DUP1 PUSH2 0xE04 SWAP1 PUSH2 0x3450 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD8E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x12806C9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB90F491000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF63 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EEF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB5 SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xF873236E6CC0ECC5BE1A9A35C95EE5B8D1AC4CC7BFEF0CC5060391D6CC98E26B CALLER PUSH1 0x40 MLOAD PUSH2 0x1039 SWAP2 SWAP1 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x1055 PUSH2 0x104F PUSH2 0x1436 JUMP JUMPDEST DUP4 PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x1094 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108B SWAP1 PUSH2 0x2FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10A0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1D0E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10B1 DUP3 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x10D1 SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10FD SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x114A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x111F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x114A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x112D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x115B PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1171 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x11A6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x118E SWAP3 SWAP2 SWAP1 PUSH2 0x2DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x11AF DUP5 PUSH2 0x1D81 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1255 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BC SWAP1 PUSH2 0x2FE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12CE DUP2 PUSH2 0x1ADB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12E7 JUMPI PUSH2 0x12E6 PUSH2 0x3586 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x12FC SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1328 SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1375 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x134A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1375 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1358 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F4 DUP2 PUSH2 0x1DE9 JUMP JUMPDEST PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142A SWAP1 PUSH2 0x3108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14B1 DUP4 PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x8 SLOAD PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x3280 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1563 JUMPI PUSH2 0x1562 PUSH2 0x3586 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1575 SWAP2 SWAP1 PUSH2 0x3499 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1582 DUP3 PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP PUSH2 0x158E DUP5 DUP5 PUSH2 0x1E2A JUMP JUMPDEST PUSH2 0x1650 DUP4 PUSH1 0x9 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x3528 JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15B8 JUMPI PUSH2 0x15B7 PUSH2 0x3586 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x15CD SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15F9 SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1646 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x161B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1646 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1629 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1E48 JUMP JUMPDEST PUSH32 0x8A269F26B688E110E9CBD887D163DAB35CAE678FA353A0292DE532C0CAC1ECDC DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1681 SWAP3 SWAP2 SWAP1 PUSH2 0x2F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x169D DUP4 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16DF JUMPI POP PUSH2 0x16DE DUP2 DUP6 PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x171D JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1705 DUP5 PUSH2 0x771 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1746 DUP3 PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x179C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1793 SWAP1 PUSH2 0x3008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x180C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1803 SWAP1 PUSH2 0x3048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1819 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EBC JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1839 DUP3 PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x188F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1886 SWAP1 PUSH2 0x3008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A1B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EC2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A28 PUSH2 0x1436 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A46 PUSH2 0xC73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A93 SWAP1 PUSH2 0x30E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C07 SWAP1 PUSH2 0x3068 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D01 SWAP2 SWAP1 PUSH2 0x2ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1D19 DUP5 DUP5 DUP5 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x1D25 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x1D64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5B SWAP1 PUSH2 0x2FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D8C DUP3 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D96 PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1DB6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DE1 JUMP JUMPDEST DUP1 PUSH2 0x1DC0 DUP5 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DD1 SWAP3 SWAP2 SWAP1 PUSH2 0x2DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E0B DUP4 PUSH2 0x1A9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E44 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2137 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E51 DUP3 PUSH2 0x1DE9 JUMP JUMPDEST PUSH2 0x1E90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E87 SWAP1 PUSH2 0x30A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1EB7 SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE9 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2192 JUMP JUMPDEST ISZERO PUSH2 0x2052 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1F12 PUSH2 0x1436 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F34 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1F7F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F7C SWAP2 SWAP1 PUSH2 0x2967 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2002 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FAF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1FFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF1 SWAP1 PUSH2 0x2FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2057 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x206E DUP5 PUSH2 0x21B5 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x208D JUMPI PUSH2 0x208C PUSH2 0x35B5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20BF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x212C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2116 JUMPI PUSH2 0x2115 PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x2127 JUMPI PUSH2 0x212C JUMP JUMPDEST PUSH2 0x20CD JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2141 DUP4 DUP4 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x214E PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x218D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2184 SWAP1 PUSH2 0x2FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2213 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2209 JUMPI PUSH2 0x2208 PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2250 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2246 JUMPI PUSH2 0x2245 PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x227F JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2275 JUMPI PUSH2 0x2274 PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x22A8 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x229E JUMPI PUSH2 0x229D PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x22CD JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x22C3 JUMPI PUSH2 0x22C2 PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x22F0 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x22E6 JUMPI PUSH2 0x22E5 PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x22FF JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x236F SWAP1 PUSH2 0x30C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2381 DUP2 PUSH2 0x1DE9 JUMP JUMPDEST ISZERO PUSH2 0x23C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B8 SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23CF PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0x23D8 DUP2 PUSH2 0x1DE9 JUMP JUMPDEST ISZERO PUSH2 0x2418 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x240F SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2522 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EC2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2554 SWAP1 PUSH2 0x33ED JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2576 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x25BD JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x258F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x25BD JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x25BD JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x25BC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x25A1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x25CA SWAP2 SWAP1 PUSH2 0x25CE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x25E7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x25CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25FE PUSH2 0x25F9 DUP5 PUSH2 0x31A8 JUMP JUMPDEST PUSH2 0x3183 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2621 JUMPI PUSH2 0x2620 PUSH2 0x35E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2651 JUMPI DUP2 PUSH2 0x2637 DUP9 DUP3 PUSH2 0x274D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2624 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266E PUSH2 0x2669 DUP5 PUSH2 0x31D4 JUMP JUMPDEST PUSH2 0x3183 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x268A JUMPI PUSH2 0x2689 PUSH2 0x35EE JUMP JUMPDEST JUMPDEST PUSH2 0x2695 DUP5 DUP3 DUP6 PUSH2 0x33AB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26AC DUP2 PUSH2 0x39B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26C7 JUMPI PUSH2 0x26C6 PUSH2 0x35E4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26D7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26EF DUP2 PUSH2 0x39D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2704 DUP2 PUSH2 0x39E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2719 DUP2 PUSH2 0x39E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2734 JUMPI PUSH2 0x2733 PUSH2 0x35E4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2744 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x265B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x275C DUP2 PUSH2 0x39FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2771 DUP2 PUSH2 0x39FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x278D JUMPI PUSH2 0x278C PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x279B DUP5 DUP3 DUP6 ADD PUSH2 0x269D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27C9 DUP6 DUP3 DUP7 ADD PUSH2 0x269D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27DA DUP6 DUP3 DUP7 ADD PUSH2 0x269D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27FD JUMPI PUSH2 0x27FC PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x280B DUP7 DUP3 DUP8 ADD PUSH2 0x269D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x281C DUP7 DUP3 DUP8 ADD PUSH2 0x269D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x282D DUP7 DUP3 DUP8 ADD PUSH2 0x274D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2851 JUMPI PUSH2 0x2850 PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x285F DUP8 DUP3 DUP9 ADD PUSH2 0x269D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2870 DUP8 DUP3 DUP9 ADD PUSH2 0x269D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2881 DUP8 DUP3 DUP9 ADD PUSH2 0x274D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28A2 JUMPI PUSH2 0x28A1 PUSH2 0x35F3 JUMP JUMPDEST JUMPDEST PUSH2 0x28AE DUP8 DUP3 DUP9 ADD PUSH2 0x271F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28D1 JUMPI PUSH2 0x28D0 PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28DF DUP6 DUP3 DUP7 ADD PUSH2 0x269D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28F0 DUP6 DUP3 DUP7 ADD PUSH2 0x26E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2911 JUMPI PUSH2 0x2910 PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x291F DUP6 DUP3 DUP7 ADD PUSH2 0x269D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2930 DUP6 DUP3 DUP7 ADD PUSH2 0x274D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2950 JUMPI PUSH2 0x294F PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x295E DUP5 DUP3 DUP6 ADD PUSH2 0x26F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x297D JUMPI PUSH2 0x297C PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x298B DUP5 DUP3 DUP6 ADD PUSH2 0x270A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29AA JUMPI PUSH2 0x29A9 PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29B8 DUP5 DUP3 DUP6 ADD PUSH2 0x274D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29D7 JUMPI PUSH2 0x29D6 PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29E5 DUP5 DUP3 DUP6 ADD PUSH2 0x2762 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A05 JUMPI PUSH2 0x2A04 PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A13 DUP6 DUP3 DUP7 ADD PUSH2 0x274D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A34 JUMPI PUSH2 0x2A33 PUSH2 0x35F3 JUMP JUMPDEST JUMPDEST PUSH2 0x2A40 DUP6 DUP3 DUP7 ADD PUSH2 0x26B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A56 DUP4 DUP4 PUSH2 0x2DB4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A6B DUP2 PUSH2 0x32D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2A7A DUP2 PUSH2 0x320F JUMP JUMPDEST PUSH2 0x2A84 DUP2 DUP5 PUSH2 0x323D JUMP JUMPDEST SWAP3 POP PUSH2 0x2A8F DUP3 PUSH2 0x3205 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AC0 JUMPI DUP2 MLOAD PUSH2 0x2AA7 DUP8 DUP3 PUSH2 0x2A4A JUMP JUMPDEST SWAP7 POP PUSH2 0x2AB2 DUP4 PUSH2 0x3230 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A93 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2AD1 DUP2 PUSH2 0x32E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2AE0 DUP2 PUSH2 0x32F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF1 DUP3 PUSH2 0x321A JUMP JUMPDEST PUSH2 0x2AFB DUP2 DUP6 PUSH2 0x3248 JUMP JUMPDEST SWAP4 POP PUSH2 0x2B0B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33BA JUMP JUMPDEST PUSH2 0x2B14 DUP2 PUSH2 0x35FD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B28 DUP2 PUSH2 0x3399 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B39 DUP3 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x2B43 DUP2 DUP6 PUSH2 0x3264 JUMP JUMPDEST SWAP4 POP PUSH2 0x2B53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33BA JUMP JUMPDEST PUSH2 0x2B5C DUP2 PUSH2 0x35FD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B72 DUP3 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x2B7C DUP2 DUP6 PUSH2 0x3275 JUMP JUMPDEST SWAP4 POP PUSH2 0x2B8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33BA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA5 PUSH1 0x2D DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BB0 DUP3 PUSH2 0x360E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC8 PUSH1 0x32 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BD3 DUP3 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BEB PUSH1 0x26 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BF6 DUP3 PUSH2 0x36AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0E PUSH1 0x25 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C19 DUP3 PUSH2 0x36FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C31 PUSH1 0x1C DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C3C DUP3 PUSH2 0x374A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C54 PUSH1 0x24 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C5F DUP3 PUSH2 0x3773 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C77 PUSH1 0x19 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C82 DUP3 PUSH2 0x37C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C9A PUSH1 0x29 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA5 DUP3 PUSH2 0x37EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CBD PUSH1 0x2E DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CC8 DUP3 PUSH2 0x383A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE0 PUSH1 0x20 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEB DUP3 PUSH2 0x3889 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D03 PUSH1 0x20 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0E DUP3 PUSH2 0x38B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D26 PUSH1 0x18 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D31 DUP3 PUSH2 0x38DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D49 PUSH1 0x21 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D54 DUP3 PUSH2 0x3904 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D6C PUSH1 0x0 DUP4 PUSH2 0x3259 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D77 DUP3 PUSH2 0x3953 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D8F PUSH1 0x3D DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D9A DUP3 PUSH2 0x3956 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DAE DUP2 PUSH2 0x333D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DBD DUP2 PUSH2 0x336B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DCC DUP2 PUSH2 0x336B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DDB DUP2 PUSH2 0x3375 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DEA DUP2 PUSH2 0x3385 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DFC DUP3 DUP6 PUSH2 0x2B67 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E08 DUP3 DUP5 PUSH2 0x2B67 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1F DUP3 PUSH2 0x2D5F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E3E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E59 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0x2E66 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A62 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2E82 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0x2E8F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0x2E9C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2DC3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2EAE DUP2 DUP5 PUSH2 0x2AE6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2ECE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EE9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2F04 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x2F11 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2DE1 JUMP JUMPDEST PUSH2 0x2F1E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2DA5 JUMP JUMPDEST PUSH2 0x2F2B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2DD2 JUMP JUMPDEST PUSH2 0x2F38 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2DD2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F72 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B1F JUMP JUMPDEST PUSH2 0x2F7F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A62 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FA0 DUP2 DUP5 PUSH2 0x2B2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FC1 DUP2 PUSH2 0x2B98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FE1 DUP2 PUSH2 0x2BBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3001 DUP2 PUSH2 0x2BDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3021 DUP2 PUSH2 0x2C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3041 DUP2 PUSH2 0x2C24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3061 DUP2 PUSH2 0x2C47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3081 DUP2 PUSH2 0x2C6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30A1 DUP2 PUSH2 0x2C8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30C1 DUP2 PUSH2 0x2CB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30E1 DUP2 PUSH2 0x2CD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3101 DUP2 PUSH2 0x2CF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3121 DUP2 PUSH2 0x2D19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3141 DUP2 PUSH2 0x2D3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3161 DUP2 PUSH2 0x2D82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x317D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x318D PUSH2 0x319E JUMP JUMPDEST SWAP1 POP PUSH2 0x3199 DUP3 DUP3 PUSH2 0x341F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x31C3 JUMPI PUSH2 0x31C2 PUSH2 0x35B5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x31EF JUMPI PUSH2 0x31EE PUSH2 0x35B5 JUMP JUMPDEST JUMPDEST PUSH2 0x31F8 DUP3 PUSH2 0x35FD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328B DUP3 PUSH2 0x336B JUMP JUMPDEST SWAP2 POP PUSH2 0x3296 DUP4 PUSH2 0x336B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x32CB JUMPI PUSH2 0x32CA PUSH2 0x34CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E1 DUP3 PUSH2 0x334B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x3338 DUP3 PUSH2 0x39A5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A4 DUP3 PUSH2 0x332A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33D8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x33BD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x33E7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3405 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3419 JUMPI PUSH2 0x3418 PUSH2 0x3557 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3428 DUP3 PUSH2 0x35FD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3447 JUMPI PUSH2 0x3446 PUSH2 0x35B5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345B DUP3 PUSH2 0x336B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x348E JUMPI PUSH2 0x348D PUSH2 0x34CA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A4 DUP3 PUSH2 0x336B JUMP JUMPDEST SWAP2 POP PUSH2 0x34AF DUP4 PUSH2 0x336B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x34BF JUMPI PUSH2 0x34BE PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x39B6 JUMPI PUSH2 0x39B5 PUSH2 0x3528 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x39C2 DUP2 PUSH2 0x32D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x39CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x39D9 DUP2 PUSH2 0x32E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x39E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x39F0 DUP2 PUSH2 0x32FE JUMP JUMPDEST DUP2 EQ PUSH2 0x39FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3A07 DUP2 PUSH2 0x336B JUMP JUMPDEST DUP2 EQ PUSH2 0x3A12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xC20E 0xC9 0xC3 0xA7 LOG4 ISZERO MUL 0x2A 0xC0 CREATE 0xB7 BASEFEE STOP PUSH27 0xBE0BEEEFB2C4697451B336415D248C0C64736F6C63430008070033 ","sourceMap":"453:3887:17:-:0;;;1365:540;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1588:16:17;5616:15:0;5599:32;;;;;;;;;;;;5556:80;1464:5:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;936:32:4;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1694:16:17::2;1649:62;;;;;;;;;;::::0;::::2;1740:14;1721:33;;;;;;;;;;::::0;::::2;1776:7;1764:19;;;;::::0;::::2;1814:16;1793:37;;;;;;;;;;::::0;::::2;1857:12;1840:14;:29;;;;;;;:::i;:::-;;1891:7;1879:19;;;;::::0;::::2;1365:540:::0;;;;;;453:3887;;640:96:11;693:7;719:10;712:17;;640:96;:::o;2433:187:4:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;453:3887:17:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;24:905:19:-;139:5;164:89;180:72;245:6;180:72;:::i;:::-;164:89;:::i;:::-;155:98;;273:5;299:6;349:3;341:4;333:6;329:17;324:3;320:27;317:36;314:143;;;368:79;;:::i;:::-;314:143;481:1;466:457;491:6;488:1;485:13;466:457;;;566:3;560:10;602:18;589:11;586:35;583:122;;;624:79;;:::i;:::-;583:122;748:11;740:6;736:24;786:58;840:3;828:10;786:58;:::i;:::-;781:3;774:71;874:4;869:3;865:14;858:21;;908:4;903:3;899:14;892:21;;526:397;;513:1;510;506:9;501:14;;466:457;;;470:14;145:784;;24:905;;;;;:::o;935:421::-;1024:5;1049:66;1065:49;1107:6;1065:49;:::i;:::-;1049:66;:::i;:::-;1040:75;;1138:6;1131:5;1124:21;1176:4;1169:5;1165:16;1214:3;1205:6;1200:3;1196:16;1193:25;1190:112;;;1221:79;;:::i;:::-;1190:112;1311:39;1343:6;1338:3;1333;1311:39;:::i;:::-;1030:326;935:421;;;;;:::o;1362:143::-;1419:5;1450:6;1444:13;1435:22;;1466:33;1493:5;1466:33;:::i;:::-;1362:143;;;;:::o;1528:381::-;1618:5;1667:3;1660:4;1652:6;1648:17;1644:27;1634:122;;1675:79;;:::i;:::-;1634:122;1779:4;1801:102;1899:3;1891:6;1883;1801:102;:::i;:::-;1792:111;;1624:285;1528:381;;;;:::o;1915:143::-;1972:5;2003:6;1997:13;1988:22;;2019:33;2046:5;2019:33;:::i;:::-;1915:143;;;;:::o;2078:355::-;2145:5;2194:3;2187:4;2179:6;2175:17;2171:27;2161:122;;2202:79;;:::i;:::-;2161:122;2312:6;2306:13;2337:90;2423:3;2415:6;2408:4;2400:6;2396:17;2337:90;:::i;:::-;2328:99;;2151:282;2078:355;;;;:::o;2439:143::-;2496:5;2527:6;2521:13;2512:22;;2543:33;2570:5;2543:33;:::i;:::-;2439:143;;;;:::o;2588:141::-;2644:5;2675:6;2669:13;2660:22;;2691:32;2717:5;2691:32;:::i;:::-;2588:141;;;;:::o;2735:::-;2791:5;2822:6;2816:13;2807:22;;2838:32;2864:5;2838:32;:::i;:::-;2735:141;;;;:::o;2882:1349::-;3028:6;3036;3044;3052;3060;3068;3117:3;3105:9;3096:7;3092:23;3088:33;3085:120;;;3124:79;;:::i;:::-;3085:120;3244:1;3269:64;3325:7;3316:6;3305:9;3301:22;3269:64;:::i;:::-;3259:74;;3215:128;3382:2;3408:63;3463:7;3454:6;3443:9;3439:22;3408:63;:::i;:::-;3398:73;;3353:128;3520:2;3546:64;3602:7;3593:6;3582:9;3578:22;3546:64;:::i;:::-;3536:74;;3491:129;3659:2;3685:64;3741:7;3732:6;3721:9;3717:22;3685:64;:::i;:::-;3675:74;;3630:129;3798:3;3825:63;3880:7;3871:6;3860:9;3856:22;3825:63;:::i;:::-;3815:73;;3769:129;3958:3;3947:9;3943:19;3937:26;3990:18;3982:6;3979:30;3976:117;;;4012:79;;:::i;:::-;3976:117;4117:97;4206:7;4197:6;4186:9;4182:22;4117:97;:::i;:::-;4107:107;;3908:316;2882:1349;;;;;;;;:::o;4237:129::-;4271:6;4298:20;;:::i;:::-;4288:30;;4327:33;4355:4;4347:6;4327:33;:::i;:::-;4237:129;;;:::o;4372:75::-;4405:6;4438:2;4432:9;4422:19;;4372:75;:::o;4453:259::-;4538:4;4628:18;4620:6;4617:30;4614:56;;;4650:18;;:::i;:::-;4614:56;4700:4;4692:6;4688:17;4680:25;;4453:259;;;:::o;4718:308::-;4780:4;4870:18;4862:6;4859:30;4856:56;;;4892:18;;:::i;:::-;4856:56;4930:29;4952:6;4930:29;:::i;:::-;4922:37;;5014:4;5008;5004:15;4996:23;;4718:308;;;:::o;5032:96::-;5069:7;5098:24;5116:5;5098:24;:::i;:::-;5087:35;;5032:96;;;:::o;5134:77::-;5171:7;5200:5;5189:16;;5134:77;;;:::o;5217:126::-;5254:7;5294:42;5287:5;5283:54;5272:65;;5217:126;;;:::o;5349:77::-;5386:7;5415:5;5404:16;;5349:77;;;:::o;5432:93::-;5468:7;5508:10;5501:5;5497:22;5486:33;;5432:93;;;:::o;5531:101::-;5567:7;5607:18;5600:5;5596:30;5585:41;;5531:101;;;:::o;5638:307::-;5706:1;5716:113;5730:6;5727:1;5724:13;5716:113;;;5815:1;5810:3;5806:11;5800:18;5796:1;5791:3;5787:11;5780:39;5752:2;5749:1;5745:10;5740:15;;5716:113;;;5847:6;5844:1;5841:13;5838:101;;;5927:1;5918:6;5913:3;5909:16;5902:27;5838:101;5687:258;5638:307;;;:::o;5951:320::-;5995:6;6032:1;6026:4;6022:12;6012:22;;6079:1;6073:4;6069:12;6100:18;6090:81;;6156:4;6148:6;6144:17;6134:27;;6090:81;6218:2;6210:6;6207:14;6187:18;6184:38;6181:84;;;6237:18;;:::i;:::-;6181:84;6002:269;5951:320;;;:::o;6277:281::-;6360:27;6382:4;6360:27;:::i;:::-;6352:6;6348:40;6490:6;6478:10;6475:22;6454:18;6442:10;6439:34;6436:62;6433:88;;;6501:18;;:::i;:::-;6433:88;6541:10;6537:2;6530:22;6320:238;6277:281;;:::o;6564:180::-;6612:77;6609:1;6602:88;6709:4;6706:1;6699:15;6733:4;6730:1;6723:15;6750:180;6798:77;6795:1;6788:88;6895:4;6892:1;6885:15;6919:4;6916:1;6909:15;6936:117;7045:1;7042;7035:12;7059:117;7168:1;7165;7158:12;7182:117;7291:1;7288;7281:12;7305:117;7414:1;7411;7404:12;7428:117;7537:1;7534;7527:12;7551:102;7592:6;7643:2;7639:7;7634:2;7627:5;7623:14;7619:28;7609:38;;7551:102;;;:::o;7659:122::-;7732:24;7750:5;7732:24;:::i;:::-;7725:5;7722:35;7712:63;;7771:1;7768;7761:12;7712:63;7659:122;:::o;7787:::-;7860:24;7878:5;7860:24;:::i;:::-;7853:5;7850:35;7840:63;;7899:1;7896;7889:12;7840:63;7787:122;:::o;7915:::-;7988:24;8006:5;7988:24;:::i;:::-;7981:5;7978:35;7968:63;;8027:1;8024;8017:12;7968:63;7915:122;:::o;8043:120::-;8115:23;8132:5;8115:23;:::i;:::-;8108:5;8105:34;8095:62;;8153:1;8150;8143:12;8095:62;8043:120;:::o;8169:::-;8241:23;8258:5;8241:23;:::i;:::-;8234:5;8231:34;8221:62;;8279:1;8276;8269:12;8221:62;8169:120;:::o;453:3887:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1844":{"entryPoint":7874,"id":1844,"parameterSlots":4,"returnSlots":0},"@_approve_1710":{"entryPoint":5182,"id":1710,"parameterSlots":2,"returnSlots":0},"@_baseURI_1147":{"entryPoint":7530,"id":1147,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1831":{"entryPoint":7868,"id":1831,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_1818":{"entryPoint":7880,"id":1818,"parameterSlots":4,"returnSlots":1},"@_checkOwner_875":{"entryPoint":6688,"id":875,"parameterSlots":0,"returnSlots":0},"@_exists_1379":{"entryPoint":7657,"id":1379,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1413":{"entryPoint":5777,"id":1413,"parameterSlots":2,"returnSlots":1},"@_mint_1534":{"entryPoint":8968,"id":1534,"parameterSlots":2,"returnSlots":0},"@_msgSender_2488":{"entryPoint":5174,"id":2488,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1361":{"entryPoint":6814,"id":1361,"parameterSlots":1,"returnSlots":1},"@_requireMinted_1756":{"entryPoint":5099,"id":1756,"parameterSlots":1,"returnSlots":0},"@_safeMint_1428":{"entryPoint":7722,"id":1428,"parameterSlots":2,"returnSlots":0},"@_safeMint_1457":{"entryPoint":8503,"id":1457,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1348":{"entryPoint":7438,"id":1348,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1742":{"entryPoint":7073,"id":1742,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_2088":{"entryPoint":7752,"id":2088,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_932":{"entryPoint":6875,"id":932,"parameterSlots":1,"returnSlots":0},"@_transfer_1686":{"entryPoint":5926,"id":1686,"parameterSlots":3,"returnSlots":0},"@approve_1190":{"entryPoint":1975,"id":1190,"parameterSlots":2,"returnSlots":0},"@balanceOf_1051":{"entryPoint":2943,"id":1051,"parameterSlots":1,"returnSlots":1},"@fulfillRandomWords_3851":{"entryPoint":5367,"id":3851,"parameterSlots":2,"returnSlots":0},"@getApproved_1208":{"entryPoint":1905,"id":1208,"parameterSlots":1,"returnSlots":1},"@getBreedFromModdedRng_3944":{"entryPoint":3448,"id":3944,"parameterSlots":1,"returnSlots":1},"@getChanceArray_3957":{"entryPoint":2755,"id":3957,"parameterSlots":0,"returnSlots":1},"@getDogTokenURIs_3977":{"entryPoint":4817,"id":3977,"parameterSlots":1,"returnSlots":1},"@getMintFee_3965":{"entryPoint":3147,"id":3965,"parameterSlots":0,"returnSlots":1},"@getTokenCounter_3985":{"entryPoint":2933,"id":3985,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_1243":{"entryPoint":4537,"id":1243,"parameterSlots":2,"returnSlots":1},"@isContract_2164":{"entryPoint":8594,"id":2164,"parameterSlots":1,"returnSlots":1},"@log10_3411":{"entryPoint":8629,"id":3411,"parameterSlots":1,"returnSlots":1},"@name_1089":{"entryPoint":1759,"id":1089,"parameterSlots":0,"returnSlots":1},"@ownerOf_1079":{"entryPoint":2798,"id":1079,"parameterSlots":1,"returnSlots":1},"@owner_861":{"entryPoint":3187,"id":861,"parameterSlots":0,"returnSlots":1},"@rawFulfillRandomWords_56":{"entryPoint":2255,"id":56,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_889":{"entryPoint":3127,"id":889,"parameterSlots":0,"returnSlots":0},"@requestNft_3790":{"entryPoint":3652,"id":3790,"parameterSlots":0,"returnSlots":1},"@s_requestIdToSender_3700":{"entryPoint":3397,"id":3700,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1289":{"entryPoint":2723,"id":1289,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1319":{"entryPoint":4164,"id":1319,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1225":{"entryPoint":3375,"id":1225,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1027":{"entryPoint":1533,"id":1027,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2696":{"entryPoint":4993,"id":2696,"parameterSlots":1,"returnSlots":1},"@symbol_1099":{"entryPoint":3229,"id":1099,"parameterSlots":0,"returnSlots":1},"@toString_2556":{"entryPoint":8287,"id":2556,"parameterSlots":1,"returnSlots":1},"@tokenURI_1138":{"entryPoint":7553,"id":1138,"parameterSlots":1,"returnSlots":1},"@tokenURI_2066":{"entryPoint":4262,"id":2066,"parameterSlots":1,"returnSlots":1},"@transferFrom_1270":{"entryPoint":2447,"id":1270,"parameterSlots":3,"returnSlots":0},"@transferOwnership_912":{"entryPoint":4685,"id":912,"parameterSlots":1,"returnSlots":0},"@withdraw_3885":{"entryPoint":2543,"id":3885,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9707,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":9819,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9906,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":9952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":9973,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":9994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":10015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10061,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":10082,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10103,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10148,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10212,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":10295,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":10426,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10490,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":10554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":10599,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10644,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":10689,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10734,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":10826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10850,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":10865,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10952,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":10967,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":10982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Breed_$3658_to_t_uint8_fromStack":{"entryPoint":11039,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":11054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":11160,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":11195,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":11230,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":11265,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":11300,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":11335,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":11370,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":11405,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":11440,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":11475,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":11510,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":11545,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":11580,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11615,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":11650,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":11685,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11700,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11715,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":11730,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":11745,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11760,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11796,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":11817,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":11844,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11885,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed":{"entryPoint":11961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11988,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":12015,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_Breed_$3658__to_t_uint8__fromStack_reversed":{"entryPoint":12098,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_Breed_$3658_t_address__to_t_uint8_t_address__fromStack_reversed":{"entryPoint":12125,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12200,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12232,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12264,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12296,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12328,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12360,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12392,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12424,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12488,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12520,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12552,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12584,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12616,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12648,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":12675,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":12702,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12712,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":12756,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":12805,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":12815,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12826,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12837,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":12848,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":12861,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":12872,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12889,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12900,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12917,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12928,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":13014,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":13032,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":13044,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":13054,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Breed_$3658":{"entryPoint":13098,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":13117,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":13131,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":13163,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":13173,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":13189,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Breed_$3658_to_t_uint8":{"entryPoint":13209,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":13227,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":13242,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":13293,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":13343,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":13392,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":13465,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":13514,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":13561,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":13608,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":13655,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13702,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13749,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":13796,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":13801,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":13806,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":13811,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":13816,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":13821,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":13838,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":13917,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":13996,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":14075,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":14154,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":14195,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":14274,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":14315,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":14394,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":14473,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":14514,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":14555,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":14596,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":14675,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":14678,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Breed_$3658":{"entryPoint":14757,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":14777,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":14800,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":14823,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":14846,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:38148:19","statements":[{"body":{"nodeType":"YulBlock","src":"126:620:19","statements":[{"nodeType":"YulAssignment","src":"136:90:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"218:6:19"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"161:56:19"},"nodeType":"YulFunctionCall","src":"161:64:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"145:15:19"},"nodeType":"YulFunctionCall","src":"145:81:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"136:5:19"}]},{"nodeType":"YulVariableDeclaration","src":"235:16:19","value":{"name":"array","nodeType":"YulIdentifier","src":"246:5:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"239:3:19","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"268:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"261:6:19"},"nodeType":"YulFunctionCall","src":"261:21:19"},"nodeType":"YulExpressionStatement","src":"261:21:19"},{"nodeType":"YulAssignment","src":"291:23:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"302:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"309:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"298:3:19"},"nodeType":"YulFunctionCall","src":"298:16:19"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"291:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"324:17:19","value":{"name":"offset","nodeType":"YulIdentifier","src":"335:6:19"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"328:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"390:103:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"404:77:19"},"nodeType":"YulFunctionCall","src":"404:79:19"},"nodeType":"YulExpressionStatement","src":"404:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"360:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"365:3:19"},"nodeType":"YulFunctionCall","src":"365:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"356:3:19"},"nodeType":"YulFunctionCall","src":"356:27:19"},{"name":"end","nodeType":"YulIdentifier","src":"385:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"353:2:19"},"nodeType":"YulFunctionCall","src":"353:36:19"},"nodeType":"YulIf","src":"350:143:19"},{"body":{"nodeType":"YulBlock","src":"562:178:19","statements":[{"nodeType":"YulVariableDeclaration","src":"577:21:19","value":{"name":"src","nodeType":"YulIdentifier","src":"595:3:19"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"581:10:19","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"619:3:19"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"645:10:19"},{"name":"end","nodeType":"YulIdentifier","src":"657:3:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"624:20:19"},"nodeType":"YulFunctionCall","src":"624:37:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"612:6:19"},"nodeType":"YulFunctionCall","src":"612:50:19"},"nodeType":"YulExpressionStatement","src":"612:50:19"},{"nodeType":"YulAssignment","src":"675:21:19","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"686:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"691:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"682:3:19"},"nodeType":"YulFunctionCall","src":"682:14:19"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"675:3:19"}]},{"nodeType":"YulAssignment","src":"709:21:19","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"720:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"725:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:19"},"nodeType":"YulFunctionCall","src":"716:14:19"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"709:3:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"524:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"527:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"521:2:19"},"nodeType":"YulFunctionCall","src":"521:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"535:18:19","statements":[{"nodeType":"YulAssignment","src":"537:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"546:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"549:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"542:3:19"},"nodeType":"YulFunctionCall","src":"542:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"537:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"506:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"508:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"517:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"512:1:19","type":""}]}]},"src":"502:238:19"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"96:6:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"104:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"112:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"120:5:19","type":""}],"src":"24:722:19"},{"body":{"nodeType":"YulBlock","src":"835:327:19","statements":[{"nodeType":"YulAssignment","src":"845:74:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"911:6:19"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"870:40:19"},"nodeType":"YulFunctionCall","src":"870:48:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"854:15:19"},"nodeType":"YulFunctionCall","src":"854:65:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"845:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"935:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"942:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"928:6:19"},"nodeType":"YulFunctionCall","src":"928:21:19"},"nodeType":"YulExpressionStatement","src":"928:21:19"},{"nodeType":"YulVariableDeclaration","src":"958:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"973:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"980:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"969:3:19"},"nodeType":"YulFunctionCall","src":"969:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"962:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1023:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"1025:77:19"},"nodeType":"YulFunctionCall","src":"1025:79:19"},"nodeType":"YulExpressionStatement","src":"1025:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1004:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"1009:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1000:3:19"},"nodeType":"YulFunctionCall","src":"1000:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"1018:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"997:2:19"},"nodeType":"YulFunctionCall","src":"997:25:19"},"nodeType":"YulIf","src":"994:112:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1139:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"1144:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"1149:6:19"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"1115:23:19"},"nodeType":"YulFunctionCall","src":"1115:41:19"},"nodeType":"YulExpressionStatement","src":"1115:41:19"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"808:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"813:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"821:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"829:5:19","type":""}],"src":"752:410:19"},{"body":{"nodeType":"YulBlock","src":"1220:87:19","statements":[{"nodeType":"YulAssignment","src":"1230:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1252:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1239:12:19"},"nodeType":"YulFunctionCall","src":"1239:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1230:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1295:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1268:26:19"},"nodeType":"YulFunctionCall","src":"1268:33:19"},"nodeType":"YulExpressionStatement","src":"1268:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1198:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1206:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1214:5:19","type":""}],"src":"1168:139:19"},{"body":{"nodeType":"YulBlock","src":"1407:293:19","statements":[{"body":{"nodeType":"YulBlock","src":"1456:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1458:77:19"},"nodeType":"YulFunctionCall","src":"1458:79:19"},"nodeType":"YulExpressionStatement","src":"1458:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1435:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1443:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1431:3:19"},"nodeType":"YulFunctionCall","src":"1431:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"1450:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1427:3:19"},"nodeType":"YulFunctionCall","src":"1427:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1420:6:19"},"nodeType":"YulFunctionCall","src":"1420:35:19"},"nodeType":"YulIf","src":"1417:122:19"},{"nodeType":"YulVariableDeclaration","src":"1548:34:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1575:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1562:12:19"},"nodeType":"YulFunctionCall","src":"1562:20:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1552:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1591:103:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1667:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1675:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1663:3:19"},"nodeType":"YulFunctionCall","src":"1663:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"1682:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"1690:3:19"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1600:62:19"},"nodeType":"YulFunctionCall","src":"1600:94:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1591:5:19"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1385:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1393:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1401:5:19","type":""}],"src":"1330:370:19"},{"body":{"nodeType":"YulBlock","src":"1755:84:19","statements":[{"nodeType":"YulAssignment","src":"1765:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1787:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1774:12:19"},"nodeType":"YulFunctionCall","src":"1774:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1765:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1827:5:19"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"1803:23:19"},"nodeType":"YulFunctionCall","src":"1803:30:19"},"nodeType":"YulExpressionStatement","src":"1803:30:19"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1733:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1741:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1749:5:19","type":""}],"src":"1706:133:19"},{"body":{"nodeType":"YulBlock","src":"1896:86:19","statements":[{"nodeType":"YulAssignment","src":"1906:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1928:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1915:12:19"},"nodeType":"YulFunctionCall","src":"1915:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1906:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1970:5:19"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"1944:25:19"},"nodeType":"YulFunctionCall","src":"1944:32:19"},"nodeType":"YulExpressionStatement","src":"1944:32:19"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1874:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1882:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1890:5:19","type":""}],"src":"1845:137:19"},{"body":{"nodeType":"YulBlock","src":"2050:79:19","statements":[{"nodeType":"YulAssignment","src":"2060:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2075:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2069:5:19"},"nodeType":"YulFunctionCall","src":"2069:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2060:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2117:5:19"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2091:25:19"},"nodeType":"YulFunctionCall","src":"2091:32:19"},"nodeType":"YulExpressionStatement","src":"2091:32:19"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2028:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2036:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2044:5:19","type":""}],"src":"1988:141:19"},{"body":{"nodeType":"YulBlock","src":"2209:277:19","statements":[{"body":{"nodeType":"YulBlock","src":"2258:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2260:77:19"},"nodeType":"YulFunctionCall","src":"2260:79:19"},"nodeType":"YulExpressionStatement","src":"2260:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2237:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2245:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2233:3:19"},"nodeType":"YulFunctionCall","src":"2233:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"2252:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2229:3:19"},"nodeType":"YulFunctionCall","src":"2229:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2222:6:19"},"nodeType":"YulFunctionCall","src":"2222:35:19"},"nodeType":"YulIf","src":"2219:122:19"},{"nodeType":"YulVariableDeclaration","src":"2350:34:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2377:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2364:12:19"},"nodeType":"YulFunctionCall","src":"2364:20:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2354:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2393:87:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2453:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2461:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2449:3:19"},"nodeType":"YulFunctionCall","src":"2449:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"2468:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"2476:3:19"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2402:46:19"},"nodeType":"YulFunctionCall","src":"2402:78:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2393:5:19"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2187:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2195:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2203:5:19","type":""}],"src":"2148:338:19"},{"body":{"nodeType":"YulBlock","src":"2544:87:19","statements":[{"nodeType":"YulAssignment","src":"2554:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2576:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2563:12:19"},"nodeType":"YulFunctionCall","src":"2563:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2554:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2619:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2592:26:19"},"nodeType":"YulFunctionCall","src":"2592:33:19"},"nodeType":"YulExpressionStatement","src":"2592:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2522:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2530:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2538:5:19","type":""}],"src":"2492:139:19"},{"body":{"nodeType":"YulBlock","src":"2700:80:19","statements":[{"nodeType":"YulAssignment","src":"2710:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2725:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2719:5:19"},"nodeType":"YulFunctionCall","src":"2719:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2710:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2768:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2741:26:19"},"nodeType":"YulFunctionCall","src":"2741:33:19"},"nodeType":"YulExpressionStatement","src":"2741:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2678:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2686:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2694:5:19","type":""}],"src":"2637:143:19"},{"body":{"nodeType":"YulBlock","src":"2852:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"2898:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2900:77:19"},"nodeType":"YulFunctionCall","src":"2900:79:19"},"nodeType":"YulExpressionStatement","src":"2900:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2873:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2882:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2869:3:19"},"nodeType":"YulFunctionCall","src":"2869:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2894:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2865:3:19"},"nodeType":"YulFunctionCall","src":"2865:32:19"},"nodeType":"YulIf","src":"2862:119:19"},{"nodeType":"YulBlock","src":"2991:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3006:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3020:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3010:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3035:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3070:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3081:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3066:3:19"},"nodeType":"YulFunctionCall","src":"3066:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3090:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3045:20:19"},"nodeType":"YulFunctionCall","src":"3045:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3035:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2822:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2833:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2845:6:19","type":""}],"src":"2786:329:19"},{"body":{"nodeType":"YulBlock","src":"3204:391:19","statements":[{"body":{"nodeType":"YulBlock","src":"3250:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3252:77:19"},"nodeType":"YulFunctionCall","src":"3252:79:19"},"nodeType":"YulExpressionStatement","src":"3252:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3225:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3234:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3221:3:19"},"nodeType":"YulFunctionCall","src":"3221:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3246:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3217:3:19"},"nodeType":"YulFunctionCall","src":"3217:32:19"},"nodeType":"YulIf","src":"3214:119:19"},{"nodeType":"YulBlock","src":"3343:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3358:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3372:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3362:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3387:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3422:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3433:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3418:3:19"},"nodeType":"YulFunctionCall","src":"3418:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3442:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3397:20:19"},"nodeType":"YulFunctionCall","src":"3397:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3387:6:19"}]}]},{"nodeType":"YulBlock","src":"3470:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3485:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3499:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3489:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3515:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3550:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3561:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3546:3:19"},"nodeType":"YulFunctionCall","src":"3546:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3570:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3525:20:19"},"nodeType":"YulFunctionCall","src":"3525:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3515:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3166:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3177:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3189:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3197:6:19","type":""}],"src":"3121:474:19"},{"body":{"nodeType":"YulBlock","src":"3701:519:19","statements":[{"body":{"nodeType":"YulBlock","src":"3747:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3749:77:19"},"nodeType":"YulFunctionCall","src":"3749:79:19"},"nodeType":"YulExpressionStatement","src":"3749:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3722:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3731:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3718:3:19"},"nodeType":"YulFunctionCall","src":"3718:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3743:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3714:3:19"},"nodeType":"YulFunctionCall","src":"3714:32:19"},"nodeType":"YulIf","src":"3711:119:19"},{"nodeType":"YulBlock","src":"3840:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3855:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3869:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3859:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3884:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3919:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3930:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3915:3:19"},"nodeType":"YulFunctionCall","src":"3915:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3939:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3894:20:19"},"nodeType":"YulFunctionCall","src":"3894:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3884:6:19"}]}]},{"nodeType":"YulBlock","src":"3967:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3982:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3996:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3986:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4012:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4047:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4058:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4043:3:19"},"nodeType":"YulFunctionCall","src":"4043:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4067:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4022:20:19"},"nodeType":"YulFunctionCall","src":"4022:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4012:6:19"}]}]},{"nodeType":"YulBlock","src":"4095:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4110:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4124:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4114:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4140:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4175:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4186:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4171:3:19"},"nodeType":"YulFunctionCall","src":"4171:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4195:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4150:20:19"},"nodeType":"YulFunctionCall","src":"4150:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4140:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3655:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3666:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3678:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3686:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3694:6:19","type":""}],"src":"3601:619:19"},{"body":{"nodeType":"YulBlock","src":"4352:817:19","statements":[{"body":{"nodeType":"YulBlock","src":"4399:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4401:77:19"},"nodeType":"YulFunctionCall","src":"4401:79:19"},"nodeType":"YulExpressionStatement","src":"4401:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4373:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4382:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4369:3:19"},"nodeType":"YulFunctionCall","src":"4369:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4394:3:19","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4365:3:19"},"nodeType":"YulFunctionCall","src":"4365:33:19"},"nodeType":"YulIf","src":"4362:120:19"},{"nodeType":"YulBlock","src":"4492:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4507:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4521:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4511:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4536:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4582:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4567:3:19"},"nodeType":"YulFunctionCall","src":"4567:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4591:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4546:20:19"},"nodeType":"YulFunctionCall","src":"4546:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4536:6:19"}]}]},{"nodeType":"YulBlock","src":"4619:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4634:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4648:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4638:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4664:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4699:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4710:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4695:3:19"},"nodeType":"YulFunctionCall","src":"4695:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4719:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4674:20:19"},"nodeType":"YulFunctionCall","src":"4674:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4664:6:19"}]}]},{"nodeType":"YulBlock","src":"4747:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4762:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4776:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4766:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4792:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4827:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4838:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4823:3:19"},"nodeType":"YulFunctionCall","src":"4823:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4847:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4802:20:19"},"nodeType":"YulFunctionCall","src":"4802:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4792:6:19"}]}]},{"nodeType":"YulBlock","src":"4875:287:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4890:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4921:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4932:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4917:3:19"},"nodeType":"YulFunctionCall","src":"4917:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4904:12:19"},"nodeType":"YulFunctionCall","src":"4904:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4894:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"4983:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4985:77:19"},"nodeType":"YulFunctionCall","src":"4985:79:19"},"nodeType":"YulExpressionStatement","src":"4985:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4955:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4963:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4952:2:19"},"nodeType":"YulFunctionCall","src":"4952:30:19"},"nodeType":"YulIf","src":"4949:117:19"},{"nodeType":"YulAssignment","src":"5080:72:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5135:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:19"},"nodeType":"YulFunctionCall","src":"5120:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5144:7:19"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5090:29:19"},"nodeType":"YulFunctionCall","src":"5090:62:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5080:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4298:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4309:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4321:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4329:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4337:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4345:6:19","type":""}],"src":"4226:943:19"},{"body":{"nodeType":"YulBlock","src":"5255:388:19","statements":[{"body":{"nodeType":"YulBlock","src":"5301:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5303:77:19"},"nodeType":"YulFunctionCall","src":"5303:79:19"},"nodeType":"YulExpressionStatement","src":"5303:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"5285:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5272:3:19"},"nodeType":"YulFunctionCall","src":"5272:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"5297:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5268:3:19"},"nodeType":"YulFunctionCall","src":"5268:32:19"},"nodeType":"YulIf","src":"5265:119:19"},{"nodeType":"YulBlock","src":"5394:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5409:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5423:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5413:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5438:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5473:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5484:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5469:3:19"},"nodeType":"YulFunctionCall","src":"5469:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5493:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5448:20:19"},"nodeType":"YulFunctionCall","src":"5448:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5438:6:19"}]}]},{"nodeType":"YulBlock","src":"5521:115:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5536:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5550:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5540:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5566:60:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5598:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5609:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5594:3:19"},"nodeType":"YulFunctionCall","src":"5594:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5618:7:19"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"5576:17:19"},"nodeType":"YulFunctionCall","src":"5576:50:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5566:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5217:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5228:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5240:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5248:6:19","type":""}],"src":"5175:468:19"},{"body":{"nodeType":"YulBlock","src":"5732:391:19","statements":[{"body":{"nodeType":"YulBlock","src":"5778:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5780:77:19"},"nodeType":"YulFunctionCall","src":"5780:79:19"},"nodeType":"YulExpressionStatement","src":"5780:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5753:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"5762:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5749:3:19"},"nodeType":"YulFunctionCall","src":"5749:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"5774:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5745:3:19"},"nodeType":"YulFunctionCall","src":"5745:32:19"},"nodeType":"YulIf","src":"5742:119:19"},{"nodeType":"YulBlock","src":"5871:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5886:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5900:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5890:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5915:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5950:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5961:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5946:3:19"},"nodeType":"YulFunctionCall","src":"5946:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5970:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5925:20:19"},"nodeType":"YulFunctionCall","src":"5925:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5915:6:19"}]}]},{"nodeType":"YulBlock","src":"5998:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6013:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6027:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6017:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6043:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6078:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"6089:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6074:3:19"},"nodeType":"YulFunctionCall","src":"6074:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6098:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6053:20:19"},"nodeType":"YulFunctionCall","src":"6053:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6043:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5694:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5705:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5717:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5725:6:19","type":""}],"src":"5649:474:19"},{"body":{"nodeType":"YulBlock","src":"6194:262:19","statements":[{"body":{"nodeType":"YulBlock","src":"6240:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6242:77:19"},"nodeType":"YulFunctionCall","src":"6242:79:19"},"nodeType":"YulExpressionStatement","src":"6242:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6215:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"6224:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6211:3:19"},"nodeType":"YulFunctionCall","src":"6211:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"6236:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6207:3:19"},"nodeType":"YulFunctionCall","src":"6207:32:19"},"nodeType":"YulIf","src":"6204:119:19"},{"nodeType":"YulBlock","src":"6333:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6348:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6362:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6352:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6377:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6411:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"6422:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6407:3:19"},"nodeType":"YulFunctionCall","src":"6407:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6431:7:19"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"6387:19:19"},"nodeType":"YulFunctionCall","src":"6387:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6377:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6164:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6175:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6187:6:19","type":""}],"src":"6129:327:19"},{"body":{"nodeType":"YulBlock","src":"6538:273:19","statements":[{"body":{"nodeType":"YulBlock","src":"6584:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6586:77:19"},"nodeType":"YulFunctionCall","src":"6586:79:19"},"nodeType":"YulExpressionStatement","src":"6586:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6559:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"6568:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6555:3:19"},"nodeType":"YulFunctionCall","src":"6555:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"6580:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6551:3:19"},"nodeType":"YulFunctionCall","src":"6551:32:19"},"nodeType":"YulIf","src":"6548:119:19"},{"nodeType":"YulBlock","src":"6677:127:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6692:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6706:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6696:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6721:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6766:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"6777:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6762:3:19"},"nodeType":"YulFunctionCall","src":"6762:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6786:7:19"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"6731:30:19"},"nodeType":"YulFunctionCall","src":"6731:63:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6721:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6508:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6519:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6531:6:19","type":""}],"src":"6462:349:19"},{"body":{"nodeType":"YulBlock","src":"6883:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"6929:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6931:77:19"},"nodeType":"YulFunctionCall","src":"6931:79:19"},"nodeType":"YulExpressionStatement","src":"6931:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6904:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"6913:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6900:3:19"},"nodeType":"YulFunctionCall","src":"6900:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"6925:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6896:3:19"},"nodeType":"YulFunctionCall","src":"6896:32:19"},"nodeType":"YulIf","src":"6893:119:19"},{"nodeType":"YulBlock","src":"7022:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7037:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7051:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7041:6:19","type":""}]},{"nodeType":"YulAssignment","src":"7066:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7101:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7112:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7097:3:19"},"nodeType":"YulFunctionCall","src":"7097:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7121:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7076:20:19"},"nodeType":"YulFunctionCall","src":"7076:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7066:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6853:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6864:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6876:6:19","type":""}],"src":"6817:329:19"},{"body":{"nodeType":"YulBlock","src":"7229:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"7275:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7277:77:19"},"nodeType":"YulFunctionCall","src":"7277:79:19"},"nodeType":"YulExpressionStatement","src":"7277:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7250:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"7259:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7246:3:19"},"nodeType":"YulFunctionCall","src":"7246:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"7271:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7242:3:19"},"nodeType":"YulFunctionCall","src":"7242:32:19"},"nodeType":"YulIf","src":"7239:119:19"},{"nodeType":"YulBlock","src":"7368:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7383:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7397:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7387:6:19","type":""}]},{"nodeType":"YulAssignment","src":"7412:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7458:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7469:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7454:3:19"},"nodeType":"YulFunctionCall","src":"7454:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7478:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7422:31:19"},"nodeType":"YulFunctionCall","src":"7422:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7412:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7199:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7210:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7222:6:19","type":""}],"src":"7152:351:19"},{"body":{"nodeType":"YulBlock","src":"7617:576:19","statements":[{"body":{"nodeType":"YulBlock","src":"7663:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7665:77:19"},"nodeType":"YulFunctionCall","src":"7665:79:19"},"nodeType":"YulExpressionStatement","src":"7665:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7638:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"7647:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7634:3:19"},"nodeType":"YulFunctionCall","src":"7634:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"7659:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7630:3:19"},"nodeType":"YulFunctionCall","src":"7630:32:19"},"nodeType":"YulIf","src":"7627:119:19"},{"nodeType":"YulBlock","src":"7756:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7771:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7785:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7775:6:19","type":""}]},{"nodeType":"YulAssignment","src":"7800:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7835:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7846:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7831:3:19"},"nodeType":"YulFunctionCall","src":"7831:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7855:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7810:20:19"},"nodeType":"YulFunctionCall","src":"7810:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7800:6:19"}]}]},{"nodeType":"YulBlock","src":"7883:303:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7898:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7929:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7940:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7925:3:19"},"nodeType":"YulFunctionCall","src":"7925:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7912:12:19"},"nodeType":"YulFunctionCall","src":"7912:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7902:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"7991:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7993:77:19"},"nodeType":"YulFunctionCall","src":"7993:79:19"},"nodeType":"YulExpressionStatement","src":"7993:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7963:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"7971:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7960:2:19"},"nodeType":"YulFunctionCall","src":"7960:30:19"},"nodeType":"YulIf","src":"7957:117:19"},{"nodeType":"YulAssignment","src":"8088:88:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8148:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"8159:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8144:3:19"},"nodeType":"YulFunctionCall","src":"8144:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8168:7:19"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8098:45:19"},"nodeType":"YulFunctionCall","src":"8098:78:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8088:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7579:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7590:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7602:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7610:6:19","type":""}],"src":"7509:684:19"},{"body":{"nodeType":"YulBlock","src":"8279:99:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8323:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"8331:3:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8289:33:19"},"nodeType":"YulFunctionCall","src":"8289:46:19"},"nodeType":"YulExpressionStatement","src":"8289:46:19"},{"nodeType":"YulAssignment","src":"8344:28:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8362:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8367:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8358:3:19"},"nodeType":"YulFunctionCall","src":"8358:14:19"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"8344:10:19"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"8252:6:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8260:3:19","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"8268:10:19","type":""}],"src":"8199:179:19"},{"body":{"nodeType":"YulBlock","src":"8449:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8466:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8489:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8471:17:19"},"nodeType":"YulFunctionCall","src":"8471:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8459:6:19"},"nodeType":"YulFunctionCall","src":"8459:37:19"},"nodeType":"YulExpressionStatement","src":"8459:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8437:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8444:3:19","type":""}],"src":"8384:118:19"},{"body":{"nodeType":"YulBlock","src":"8652:582:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8662:66:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8722:5:19"}],"functionName":{"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"8676:45:19"},"nodeType":"YulFunctionCall","src":"8676:52:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8666:6:19","type":""}]},{"nodeType":"YulAssignment","src":"8737:91:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8816:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"8821:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8744:71:19"},"nodeType":"YulFunctionCall","src":"8744:84:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8737:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"8837:69:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8900:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"8852:47:19"},"nodeType":"YulFunctionCall","src":"8852:54:19"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"8841:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8915:21:19","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"8929:7:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8919:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"9005:222:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9019:34:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9046:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9040:5:19"},"nodeType":"YulFunctionCall","src":"9040:13:19"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"9023:13:19","type":""}]},{"nodeType":"YulAssignment","src":"9066:70:19","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"9117:13:19"},{"name":"pos","nodeType":"YulIdentifier","src":"9132:3:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9073:43:19"},"nodeType":"YulFunctionCall","src":"9073:63:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9066:3:19"}]},{"nodeType":"YulAssignment","src":"9149:68:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9210:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"9159:50:19"},"nodeType":"YulFunctionCall","src":"9159:58:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9149:6:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8967:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"8970:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8964:2:19"},"nodeType":"YulFunctionCall","src":"8964:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8978:18:19","statements":[{"nodeType":"YulAssignment","src":"8980:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8989:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"8992:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8985:3:19"},"nodeType":"YulFunctionCall","src":"8985:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8980:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"8949:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8951:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8960:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8955:1:19","type":""}]}]},"src":"8945:282:19"}]},"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8639:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8646:3:19","type":""}],"src":"8540:694:19"},{"body":{"nodeType":"YulBlock","src":"9299:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9316:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9336:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9321:14:19"},"nodeType":"YulFunctionCall","src":"9321:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9309:6:19"},"nodeType":"YulFunctionCall","src":"9309:34:19"},"nodeType":"YulExpressionStatement","src":"9309:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9287:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9294:3:19","type":""}],"src":"9240:109:19"},{"body":{"nodeType":"YulBlock","src":"9420:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9437:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9460:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9442:17:19"},"nodeType":"YulFunctionCall","src":"9442:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9430:6:19"},"nodeType":"YulFunctionCall","src":"9430:37:19"},"nodeType":"YulExpressionStatement","src":"9430:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9408:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9415:3:19","type":""}],"src":"9355:118:19"},{"body":{"nodeType":"YulBlock","src":"9569:270:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9579:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9625:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9593:31:19"},"nodeType":"YulFunctionCall","src":"9593:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9583:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9640:77:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9705:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"9710:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9647:57:19"},"nodeType":"YulFunctionCall","src":"9647:70:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9640:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9752:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"9759:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9748:3:19"},"nodeType":"YulFunctionCall","src":"9748:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"9766:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"9771:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"9726:21:19"},"nodeType":"YulFunctionCall","src":"9726:52:19"},"nodeType":"YulExpressionStatement","src":"9726:52:19"},{"nodeType":"YulAssignment","src":"9787:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9798:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9825:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9803:21:19"},"nodeType":"YulFunctionCall","src":"9803:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9794:3:19"},"nodeType":"YulFunctionCall","src":"9794:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9787:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9550:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9557:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9565:3:19","type":""}],"src":"9479:360:19"},{"body":{"nodeType":"YulBlock","src":"9918:74:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9935:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9979:5:19"}],"functionName":{"name":"convert_t_enum$_Breed_$3658_to_t_uint8","nodeType":"YulIdentifier","src":"9940:38:19"},"nodeType":"YulFunctionCall","src":"9940:45:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9928:6:19"},"nodeType":"YulFunctionCall","src":"9928:58:19"},"nodeType":"YulExpressionStatement","src":"9928:58:19"}]},"name":"abi_encode_t_enum$_Breed_$3658_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9906:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9913:3:19","type":""}],"src":"9845:147:19"},{"body":{"nodeType":"YulBlock","src":"10090:272:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10100:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10147:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10114:32:19"},"nodeType":"YulFunctionCall","src":"10114:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10104:6:19","type":""}]},{"nodeType":"YulAssignment","src":"10162:78:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10228:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"10233:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10169:58:19"},"nodeType":"YulFunctionCall","src":"10169:71:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10162:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10275:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"10282:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10271:3:19"},"nodeType":"YulFunctionCall","src":"10271:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"10289:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"10294:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10249:21:19"},"nodeType":"YulFunctionCall","src":"10249:52:19"},"nodeType":"YulExpressionStatement","src":"10249:52:19"},{"nodeType":"YulAssignment","src":"10310:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10321:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10348:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10326:21:19"},"nodeType":"YulFunctionCall","src":"10326:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10317:3:19"},"nodeType":"YulFunctionCall","src":"10317:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10310:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10071:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10078:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10086:3:19","type":""}],"src":"9998:364:19"},{"body":{"nodeType":"YulBlock","src":"10478:267:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10488:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10535:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10502:32:19"},"nodeType":"YulFunctionCall","src":"10502:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10492:6:19","type":""}]},{"nodeType":"YulAssignment","src":"10550:96:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10634:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"10639:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10557:76:19"},"nodeType":"YulFunctionCall","src":"10557:89:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10550:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10681:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"10688:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10677:3:19"},"nodeType":"YulFunctionCall","src":"10677:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"10695:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"10700:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10655:21:19"},"nodeType":"YulFunctionCall","src":"10655:52:19"},"nodeType":"YulExpressionStatement","src":"10655:52:19"},{"nodeType":"YulAssignment","src":"10716:23:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10727:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"10732:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10723:3:19"},"nodeType":"YulFunctionCall","src":"10723:16:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10716:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10459:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10466:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10474:3:19","type":""}],"src":"10368:377:19"},{"body":{"nodeType":"YulBlock","src":"10897:220:19","statements":[{"nodeType":"YulAssignment","src":"10907:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10973:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10978:2:19","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10914:58:19"},"nodeType":"YulFunctionCall","src":"10914:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10907:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11079:3:19"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"10990:88:19"},"nodeType":"YulFunctionCall","src":"10990:93:19"},"nodeType":"YulExpressionStatement","src":"10990:93:19"},{"nodeType":"YulAssignment","src":"11092:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11103:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"11108:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11099:3:19"},"nodeType":"YulFunctionCall","src":"11099:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11092:3:19"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10885:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10893:3:19","type":""}],"src":"10751:366:19"},{"body":{"nodeType":"YulBlock","src":"11269:220:19","statements":[{"nodeType":"YulAssignment","src":"11279:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11345:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"11350:2:19","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11286:58:19"},"nodeType":"YulFunctionCall","src":"11286:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11279:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11451:3:19"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"11362:88:19"},"nodeType":"YulFunctionCall","src":"11362:93:19"},"nodeType":"YulExpressionStatement","src":"11362:93:19"},{"nodeType":"YulAssignment","src":"11464:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11475:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"11480:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11471:3:19"},"nodeType":"YulFunctionCall","src":"11471:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11464:3:19"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11257:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11265:3:19","type":""}],"src":"11123:366:19"},{"body":{"nodeType":"YulBlock","src":"11641:220:19","statements":[{"nodeType":"YulAssignment","src":"11651:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11717:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"11722:2:19","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11658:58:19"},"nodeType":"YulFunctionCall","src":"11658:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11651:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11823:3:19"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"11734:88:19"},"nodeType":"YulFunctionCall","src":"11734:93:19"},"nodeType":"YulExpressionStatement","src":"11734:93:19"},{"nodeType":"YulAssignment","src":"11836:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11847:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"11852:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11843:3:19"},"nodeType":"YulFunctionCall","src":"11843:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11836:3:19"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11629:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11637:3:19","type":""}],"src":"11495:366:19"},{"body":{"nodeType":"YulBlock","src":"12013:220:19","statements":[{"nodeType":"YulAssignment","src":"12023:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12089:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12094:2:19","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12030:58:19"},"nodeType":"YulFunctionCall","src":"12030:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12023:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12195:3:19"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"12106:88:19"},"nodeType":"YulFunctionCall","src":"12106:93:19"},"nodeType":"YulExpressionStatement","src":"12106:93:19"},{"nodeType":"YulAssignment","src":"12208:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12219:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12224:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12215:3:19"},"nodeType":"YulFunctionCall","src":"12215:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12208:3:19"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12001:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12009:3:19","type":""}],"src":"11867:366:19"},{"body":{"nodeType":"YulBlock","src":"12385:220:19","statements":[{"nodeType":"YulAssignment","src":"12395:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12461:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12466:2:19","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12402:58:19"},"nodeType":"YulFunctionCall","src":"12402:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12395:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12567:3:19"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"12478:88:19"},"nodeType":"YulFunctionCall","src":"12478:93:19"},"nodeType":"YulExpressionStatement","src":"12478:93:19"},{"nodeType":"YulAssignment","src":"12580:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12591:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12596:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12587:3:19"},"nodeType":"YulFunctionCall","src":"12587:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12580:3:19"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12373:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12381:3:19","type":""}],"src":"12239:366:19"},{"body":{"nodeType":"YulBlock","src":"12757:220:19","statements":[{"nodeType":"YulAssignment","src":"12767:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12833:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12838:2:19","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12774:58:19"},"nodeType":"YulFunctionCall","src":"12774:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12767:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12939:3:19"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"12850:88:19"},"nodeType":"YulFunctionCall","src":"12850:93:19"},"nodeType":"YulExpressionStatement","src":"12850:93:19"},{"nodeType":"YulAssignment","src":"12952:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12963:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12968:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12959:3:19"},"nodeType":"YulFunctionCall","src":"12959:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12952:3:19"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12745:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12753:3:19","type":""}],"src":"12611:366:19"},{"body":{"nodeType":"YulBlock","src":"13129:220:19","statements":[{"nodeType":"YulAssignment","src":"13139:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13205:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13210:2:19","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13146:58:19"},"nodeType":"YulFunctionCall","src":"13146:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13139:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13311:3:19"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"13222:88:19"},"nodeType":"YulFunctionCall","src":"13222:93:19"},"nodeType":"YulExpressionStatement","src":"13222:93:19"},{"nodeType":"YulAssignment","src":"13324:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13335:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13340:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13331:3:19"},"nodeType":"YulFunctionCall","src":"13331:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13324:3:19"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13117:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13125:3:19","type":""}],"src":"12983:366:19"},{"body":{"nodeType":"YulBlock","src":"13501:220:19","statements":[{"nodeType":"YulAssignment","src":"13511:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13577:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13582:2:19","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13518:58:19"},"nodeType":"YulFunctionCall","src":"13518:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13511:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13683:3:19"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"13594:88:19"},"nodeType":"YulFunctionCall","src":"13594:93:19"},"nodeType":"YulExpressionStatement","src":"13594:93:19"},{"nodeType":"YulAssignment","src":"13696:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13707:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13712:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13703:3:19"},"nodeType":"YulFunctionCall","src":"13703:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13696:3:19"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13489:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13497:3:19","type":""}],"src":"13355:366:19"},{"body":{"nodeType":"YulBlock","src":"13873:220:19","statements":[{"nodeType":"YulAssignment","src":"13883:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13949:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13954:2:19","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13890:58:19"},"nodeType":"YulFunctionCall","src":"13890:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13883:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14055:3:19"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"13966:88:19"},"nodeType":"YulFunctionCall","src":"13966:93:19"},"nodeType":"YulExpressionStatement","src":"13966:93:19"},{"nodeType":"YulAssignment","src":"14068:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14079:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14084:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14075:3:19"},"nodeType":"YulFunctionCall","src":"14075:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14068:3:19"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13861:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13869:3:19","type":""}],"src":"13727:366:19"},{"body":{"nodeType":"YulBlock","src":"14245:220:19","statements":[{"nodeType":"YulAssignment","src":"14255:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14321:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14326:2:19","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14262:58:19"},"nodeType":"YulFunctionCall","src":"14262:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14255:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14427:3:19"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"14338:88:19"},"nodeType":"YulFunctionCall","src":"14338:93:19"},"nodeType":"YulExpressionStatement","src":"14338:93:19"},{"nodeType":"YulAssignment","src":"14440:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14451:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14456:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14447:3:19"},"nodeType":"YulFunctionCall","src":"14447:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14440:3:19"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14233:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14241:3:19","type":""}],"src":"14099:366:19"},{"body":{"nodeType":"YulBlock","src":"14617:220:19","statements":[{"nodeType":"YulAssignment","src":"14627:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14693:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14698:2:19","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14634:58:19"},"nodeType":"YulFunctionCall","src":"14634:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14627:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14799:3:19"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"14710:88:19"},"nodeType":"YulFunctionCall","src":"14710:93:19"},"nodeType":"YulExpressionStatement","src":"14710:93:19"},{"nodeType":"YulAssignment","src":"14812:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14823:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14828:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14819:3:19"},"nodeType":"YulFunctionCall","src":"14819:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14812:3:19"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14605:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14613:3:19","type":""}],"src":"14471:366:19"},{"body":{"nodeType":"YulBlock","src":"14989:220:19","statements":[{"nodeType":"YulAssignment","src":"14999:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15065:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15070:2:19","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15006:58:19"},"nodeType":"YulFunctionCall","src":"15006:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14999:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15171:3:19"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"15082:88:19"},"nodeType":"YulFunctionCall","src":"15082:93:19"},"nodeType":"YulExpressionStatement","src":"15082:93:19"},{"nodeType":"YulAssignment","src":"15184:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15195:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15200:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15191:3:19"},"nodeType":"YulFunctionCall","src":"15191:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15184:3:19"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14977:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14985:3:19","type":""}],"src":"14843:366:19"},{"body":{"nodeType":"YulBlock","src":"15361:220:19","statements":[{"nodeType":"YulAssignment","src":"15371:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15437:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15442:2:19","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15378:58:19"},"nodeType":"YulFunctionCall","src":"15378:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15371:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15543:3:19"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"15454:88:19"},"nodeType":"YulFunctionCall","src":"15454:93:19"},"nodeType":"YulExpressionStatement","src":"15454:93:19"},{"nodeType":"YulAssignment","src":"15556:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15567:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15572:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15563:3:19"},"nodeType":"YulFunctionCall","src":"15563:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15556:3:19"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15349:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15357:3:19","type":""}],"src":"15215:366:19"},{"body":{"nodeType":"YulBlock","src":"15750:235:19","statements":[{"nodeType":"YulAssignment","src":"15760:90:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15843:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15848:1:19","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15767:75:19"},"nodeType":"YulFunctionCall","src":"15767:83:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15760:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15948:3:19"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"15859:88:19"},"nodeType":"YulFunctionCall","src":"15859:93:19"},"nodeType":"YulExpressionStatement","src":"15859:93:19"},{"nodeType":"YulAssignment","src":"15961:18:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15972:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15977:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15968:3:19"},"nodeType":"YulFunctionCall","src":"15968:11:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15961:3:19"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15738:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15746:3:19","type":""}],"src":"15587:398:19"},{"body":{"nodeType":"YulBlock","src":"16137:220:19","statements":[{"nodeType":"YulAssignment","src":"16147:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16213:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16218:2:19","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16154:58:19"},"nodeType":"YulFunctionCall","src":"16154:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16147:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16319:3:19"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"16230:88:19"},"nodeType":"YulFunctionCall","src":"16230:93:19"},"nodeType":"YulExpressionStatement","src":"16230:93:19"},{"nodeType":"YulAssignment","src":"16332:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16343:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16348:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16339:3:19"},"nodeType":"YulFunctionCall","src":"16339:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16332:3:19"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16125:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16133:3:19","type":""}],"src":"15991:366:19"},{"body":{"nodeType":"YulBlock","src":"16426:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16443:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16465:5:19"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"16448:16:19"},"nodeType":"YulFunctionCall","src":"16448:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16436:6:19"},"nodeType":"YulFunctionCall","src":"16436:36:19"},"nodeType":"YulExpressionStatement","src":"16436:36:19"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16414:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16421:3:19","type":""}],"src":"16363:115:19"},{"body":{"nodeType":"YulBlock","src":"16539:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16556:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16579:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16561:17:19"},"nodeType":"YulFunctionCall","src":"16561:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16549:6:19"},"nodeType":"YulFunctionCall","src":"16549:37:19"},"nodeType":"YulExpressionStatement","src":"16549:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16527:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16534:3:19","type":""}],"src":"16484:108:19"},{"body":{"nodeType":"YulBlock","src":"16663:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16680:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16703:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16685:17:19"},"nodeType":"YulFunctionCall","src":"16685:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16673:6:19"},"nodeType":"YulFunctionCall","src":"16673:37:19"},"nodeType":"YulExpressionStatement","src":"16673:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16651:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16658:3:19","type":""}],"src":"16598:118:19"},{"body":{"nodeType":"YulBlock","src":"16785:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16802:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16824:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"16807:16:19"},"nodeType":"YulFunctionCall","src":"16807:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16795:6:19"},"nodeType":"YulFunctionCall","src":"16795:36:19"},"nodeType":"YulExpressionStatement","src":"16795:36:19"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16773:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16780:3:19","type":""}],"src":"16722:115:19"},{"body":{"nodeType":"YulBlock","src":"16906:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16923:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16945:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"16928:16:19"},"nodeType":"YulFunctionCall","src":"16928:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16916:6:19"},"nodeType":"YulFunctionCall","src":"16916:36:19"},"nodeType":"YulExpressionStatement","src":"16916:36:19"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16894:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16901:3:19","type":""}],"src":"16843:115:19"},{"body":{"nodeType":"YulBlock","src":"17148:251:19","statements":[{"nodeType":"YulAssignment","src":"17159:102:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17248:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"17257:3:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17166:81:19"},"nodeType":"YulFunctionCall","src":"17166:95:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17159:3:19"}]},{"nodeType":"YulAssignment","src":"17271:102:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17360:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"17369:3:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17278:81:19"},"nodeType":"YulFunctionCall","src":"17278:95:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17271:3:19"}]},{"nodeType":"YulAssignment","src":"17383:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"17390:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17383:3:19"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17119:3:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17125:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17133:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17144:3:19","type":""}],"src":"16964:435:19"},{"body":{"nodeType":"YulBlock","src":"17593:191:19","statements":[{"nodeType":"YulAssignment","src":"17604:154:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17754:3:19"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17611:141:19"},"nodeType":"YulFunctionCall","src":"17611:147:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17604:3:19"}]},{"nodeType":"YulAssignment","src":"17768:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"17775:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17768:3:19"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17580:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17589:3:19","type":""}],"src":"17405:379:19"},{"body":{"nodeType":"YulBlock","src":"17888:124:19","statements":[{"nodeType":"YulAssignment","src":"17898:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17910:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"17921:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17906:3:19"},"nodeType":"YulFunctionCall","src":"17906:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17898:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17978:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17991:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18002:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17987:3:19"},"nodeType":"YulFunctionCall","src":"17987:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17934:43:19"},"nodeType":"YulFunctionCall","src":"17934:71:19"},"nodeType":"YulExpressionStatement","src":"17934:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17860:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17872:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17883:4:19","type":""}],"src":"17790:222:19"},{"body":{"nodeType":"YulBlock","src":"18144:206:19","statements":[{"nodeType":"YulAssignment","src":"18154:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18166:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18177:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18162:3:19"},"nodeType":"YulFunctionCall","src":"18162:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18154:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18234:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18247:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18258:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18243:3:19"},"nodeType":"YulFunctionCall","src":"18243:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18190:43:19"},"nodeType":"YulFunctionCall","src":"18190:71:19"},"nodeType":"YulExpressionStatement","src":"18190:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18315:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18328:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18339:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18324:3:19"},"nodeType":"YulFunctionCall","src":"18324:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18271:43:19"},"nodeType":"YulFunctionCall","src":"18271:72:19"},"nodeType":"YulExpressionStatement","src":"18271:72:19"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18108:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18120:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18128:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18139:4:19","type":""}],"src":"18018:332:19"},{"body":{"nodeType":"YulBlock","src":"18556:440:19","statements":[{"nodeType":"YulAssignment","src":"18566:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18578:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18589:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18574:3:19"},"nodeType":"YulFunctionCall","src":"18574:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18566:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18647:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18660:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18671:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18656:3:19"},"nodeType":"YulFunctionCall","src":"18656:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18603:43:19"},"nodeType":"YulFunctionCall","src":"18603:71:19"},"nodeType":"YulExpressionStatement","src":"18603:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18728:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18741:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18752:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18737:3:19"},"nodeType":"YulFunctionCall","src":"18737:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18684:43:19"},"nodeType":"YulFunctionCall","src":"18684:72:19"},"nodeType":"YulExpressionStatement","src":"18684:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18810:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18823:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18834:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18819:3:19"},"nodeType":"YulFunctionCall","src":"18819:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18766:43:19"},"nodeType":"YulFunctionCall","src":"18766:72:19"},"nodeType":"YulExpressionStatement","src":"18766:72:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18859:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18870:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18855:3:19"},"nodeType":"YulFunctionCall","src":"18855:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18879:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"18885:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18875:3:19"},"nodeType":"YulFunctionCall","src":"18875:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18848:6:19"},"nodeType":"YulFunctionCall","src":"18848:48:19"},"nodeType":"YulExpressionStatement","src":"18848:48:19"},{"nodeType":"YulAssignment","src":"18905:84:19","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18975:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"18984:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18913:61:19"},"nodeType":"YulFunctionCall","src":"18913:76:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18905:4:19"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18504:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18516:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18524:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18532:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18540:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18551:4:19","type":""}],"src":"18356:640:19"},{"body":{"nodeType":"YulBlock","src":"19146:170:19","statements":[{"nodeType":"YulAssignment","src":"19156:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19168:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19179:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19164:3:19"},"nodeType":"YulFunctionCall","src":"19164:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19156:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19282:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19295:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19306:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19291:3:19"},"nodeType":"YulFunctionCall","src":"19291:17:19"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19192:89:19"},"nodeType":"YulFunctionCall","src":"19192:117:19"},"nodeType":"YulExpressionStatement","src":"19192:117:19"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19118:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19130:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19141:4:19","type":""}],"src":"19002:314:19"},{"body":{"nodeType":"YulBlock","src":"19414:118:19","statements":[{"nodeType":"YulAssignment","src":"19424:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19436:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19447:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19432:3:19"},"nodeType":"YulFunctionCall","src":"19432:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19424:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19498:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19511:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19522:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19507:3:19"},"nodeType":"YulFunctionCall","src":"19507:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"19460:37:19"},"nodeType":"YulFunctionCall","src":"19460:65:19"},"nodeType":"YulExpressionStatement","src":"19460:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19386:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19398:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19409:4:19","type":""}],"src":"19322:210:19"},{"body":{"nodeType":"YulBlock","src":"19740:446:19","statements":[{"nodeType":"YulAssignment","src":"19750:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19762:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19773:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19758:3:19"},"nodeType":"YulFunctionCall","src":"19758:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19750:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19831:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19844:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19855:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19840:3:19"},"nodeType":"YulFunctionCall","src":"19840:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"19787:43:19"},"nodeType":"YulFunctionCall","src":"19787:71:19"},"nodeType":"YulExpressionStatement","src":"19787:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19910:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19923:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19934:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19919:3:19"},"nodeType":"YulFunctionCall","src":"19919:18:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"19868:41:19"},"nodeType":"YulFunctionCall","src":"19868:70:19"},"nodeType":"YulExpressionStatement","src":"19868:70:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19990:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20003:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20014:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19999:3:19"},"nodeType":"YulFunctionCall","src":"19999:18:19"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"19948:41:19"},"nodeType":"YulFunctionCall","src":"19948:70:19"},"nodeType":"YulExpressionStatement","src":"19948:70:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20070:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20083:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20094:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20079:3:19"},"nodeType":"YulFunctionCall","src":"20079:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"20028:41:19"},"nodeType":"YulFunctionCall","src":"20028:70:19"},"nodeType":"YulExpressionStatement","src":"20028:70:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"20150:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20163:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20174:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20159:3:19"},"nodeType":"YulFunctionCall","src":"20159:19:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"20108:41:19"},"nodeType":"YulFunctionCall","src":"20108:71:19"},"nodeType":"YulExpressionStatement","src":"20108:71:19"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19680:9:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19692:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19700:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19708:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19716:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19724:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19735:4:19","type":""}],"src":"19538:648:19"},{"body":{"nodeType":"YulBlock","src":"20298:132:19","statements":[{"nodeType":"YulAssignment","src":"20308:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20320:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20331:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20316:3:19"},"nodeType":"YulFunctionCall","src":"20316:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20308:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20396:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20409:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20420:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20405:3:19"},"nodeType":"YulFunctionCall","src":"20405:17:19"}],"functionName":{"name":"abi_encode_t_enum$_Breed_$3658_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"20344:51:19"},"nodeType":"YulFunctionCall","src":"20344:79:19"},"nodeType":"YulExpressionStatement","src":"20344:79:19"}]},"name":"abi_encode_tuple_t_enum$_Breed_$3658__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20270:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20282:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20293:4:19","type":""}],"src":"20192:238:19"},{"body":{"nodeType":"YulBlock","src":"20570:214:19","statements":[{"nodeType":"YulAssignment","src":"20580:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20592:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20603:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20588:3:19"},"nodeType":"YulFunctionCall","src":"20588:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20580:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20668:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20681:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20692:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20677:3:19"},"nodeType":"YulFunctionCall","src":"20677:17:19"}],"functionName":{"name":"abi_encode_t_enum$_Breed_$3658_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"20616:51:19"},"nodeType":"YulFunctionCall","src":"20616:79:19"},"nodeType":"YulExpressionStatement","src":"20616:79:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20749:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20762:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20773:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20758:3:19"},"nodeType":"YulFunctionCall","src":"20758:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20705:43:19"},"nodeType":"YulFunctionCall","src":"20705:72:19"},"nodeType":"YulExpressionStatement","src":"20705:72:19"}]},"name":"abi_encode_tuple_t_enum$_Breed_$3658_t_address__to_t_uint8_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20534:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20546:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20554:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20565:4:19","type":""}],"src":"20436:348:19"},{"body":{"nodeType":"YulBlock","src":"20908:195:19","statements":[{"nodeType":"YulAssignment","src":"20918:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20930:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20941:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20926:3:19"},"nodeType":"YulFunctionCall","src":"20926:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20918:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20965:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20976:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20961:3:19"},"nodeType":"YulFunctionCall","src":"20961:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20984:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"20990:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20980:3:19"},"nodeType":"YulFunctionCall","src":"20980:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20954:6:19"},"nodeType":"YulFunctionCall","src":"20954:47:19"},"nodeType":"YulExpressionStatement","src":"20954:47:19"},{"nodeType":"YulAssignment","src":"21010:86:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21082:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"21091:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21018:63:19"},"nodeType":"YulFunctionCall","src":"21018:78:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21010:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20880:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20892:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20903:4:19","type":""}],"src":"20790:313:19"},{"body":{"nodeType":"YulBlock","src":"21280:248:19","statements":[{"nodeType":"YulAssignment","src":"21290:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21302:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21313:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21298:3:19"},"nodeType":"YulFunctionCall","src":"21298:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21290:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21337:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21348:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21333:3:19"},"nodeType":"YulFunctionCall","src":"21333:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21356:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"21362:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21352:3:19"},"nodeType":"YulFunctionCall","src":"21352:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21326:6:19"},"nodeType":"YulFunctionCall","src":"21326:47:19"},"nodeType":"YulExpressionStatement","src":"21326:47:19"},{"nodeType":"YulAssignment","src":"21382:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21516:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21390:124:19"},"nodeType":"YulFunctionCall","src":"21390:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21382:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21260:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21275:4:19","type":""}],"src":"21109:419:19"},{"body":{"nodeType":"YulBlock","src":"21705:248:19","statements":[{"nodeType":"YulAssignment","src":"21715:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21727:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21738:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21723:3:19"},"nodeType":"YulFunctionCall","src":"21723:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21715:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21762:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21773:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21758:3:19"},"nodeType":"YulFunctionCall","src":"21758:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21781:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"21787:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21777:3:19"},"nodeType":"YulFunctionCall","src":"21777:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21751:6:19"},"nodeType":"YulFunctionCall","src":"21751:47:19"},"nodeType":"YulExpressionStatement","src":"21751:47:19"},{"nodeType":"YulAssignment","src":"21807:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21941:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21815:124:19"},"nodeType":"YulFunctionCall","src":"21815:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21807:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21685:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21700:4:19","type":""}],"src":"21534:419:19"},{"body":{"nodeType":"YulBlock","src":"22130:248:19","statements":[{"nodeType":"YulAssignment","src":"22140:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22152:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22163:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22148:3:19"},"nodeType":"YulFunctionCall","src":"22148:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22140:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22187:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22198:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22183:3:19"},"nodeType":"YulFunctionCall","src":"22183:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22206:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"22212:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22202:3:19"},"nodeType":"YulFunctionCall","src":"22202:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22176:6:19"},"nodeType":"YulFunctionCall","src":"22176:47:19"},"nodeType":"YulExpressionStatement","src":"22176:47:19"},{"nodeType":"YulAssignment","src":"22232:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22366:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22240:124:19"},"nodeType":"YulFunctionCall","src":"22240:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22232:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22110:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22125:4:19","type":""}],"src":"21959:419:19"},{"body":{"nodeType":"YulBlock","src":"22555:248:19","statements":[{"nodeType":"YulAssignment","src":"22565:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22577:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22588:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22573:3:19"},"nodeType":"YulFunctionCall","src":"22573:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22565:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22612:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22623:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22608:3:19"},"nodeType":"YulFunctionCall","src":"22608:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22631:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"22637:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22627:3:19"},"nodeType":"YulFunctionCall","src":"22627:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22601:6:19"},"nodeType":"YulFunctionCall","src":"22601:47:19"},"nodeType":"YulExpressionStatement","src":"22601:47:19"},{"nodeType":"YulAssignment","src":"22657:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22791:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22665:124:19"},"nodeType":"YulFunctionCall","src":"22665:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22657:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22535:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22550:4:19","type":""}],"src":"22384:419:19"},{"body":{"nodeType":"YulBlock","src":"22980:248:19","statements":[{"nodeType":"YulAssignment","src":"22990:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23002:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23013:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22998:3:19"},"nodeType":"YulFunctionCall","src":"22998:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22990:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23037:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23048:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23033:3:19"},"nodeType":"YulFunctionCall","src":"23033:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23056:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"23062:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23052:3:19"},"nodeType":"YulFunctionCall","src":"23052:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23026:6:19"},"nodeType":"YulFunctionCall","src":"23026:47:19"},"nodeType":"YulExpressionStatement","src":"23026:47:19"},{"nodeType":"YulAssignment","src":"23082:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23216:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23090:124:19"},"nodeType":"YulFunctionCall","src":"23090:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23082:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22960:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22975:4:19","type":""}],"src":"22809:419:19"},{"body":{"nodeType":"YulBlock","src":"23405:248:19","statements":[{"nodeType":"YulAssignment","src":"23415:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23427:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23438:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23423:3:19"},"nodeType":"YulFunctionCall","src":"23423:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23415:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23462:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23473:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23458:3:19"},"nodeType":"YulFunctionCall","src":"23458:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23481:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"23487:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23477:3:19"},"nodeType":"YulFunctionCall","src":"23477:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23451:6:19"},"nodeType":"YulFunctionCall","src":"23451:47:19"},"nodeType":"YulExpressionStatement","src":"23451:47:19"},{"nodeType":"YulAssignment","src":"23507:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23641:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23515:124:19"},"nodeType":"YulFunctionCall","src":"23515:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23507:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23385:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23400:4:19","type":""}],"src":"23234:419:19"},{"body":{"nodeType":"YulBlock","src":"23830:248:19","statements":[{"nodeType":"YulAssignment","src":"23840:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23852:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23863:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23848:3:19"},"nodeType":"YulFunctionCall","src":"23848:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23840:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23887:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23898:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23883:3:19"},"nodeType":"YulFunctionCall","src":"23883:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23906:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"23912:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23902:3:19"},"nodeType":"YulFunctionCall","src":"23902:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23876:6:19"},"nodeType":"YulFunctionCall","src":"23876:47:19"},"nodeType":"YulExpressionStatement","src":"23876:47:19"},{"nodeType":"YulAssignment","src":"23932:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24066:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23940:124:19"},"nodeType":"YulFunctionCall","src":"23940:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23932:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23810:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23825:4:19","type":""}],"src":"23659:419:19"},{"body":{"nodeType":"YulBlock","src":"24255:248:19","statements":[{"nodeType":"YulAssignment","src":"24265:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24277:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24288:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24273:3:19"},"nodeType":"YulFunctionCall","src":"24273:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24265:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24312:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24323:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24308:3:19"},"nodeType":"YulFunctionCall","src":"24308:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24331:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"24337:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24327:3:19"},"nodeType":"YulFunctionCall","src":"24327:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24301:6:19"},"nodeType":"YulFunctionCall","src":"24301:47:19"},"nodeType":"YulExpressionStatement","src":"24301:47:19"},{"nodeType":"YulAssignment","src":"24357:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24491:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24365:124:19"},"nodeType":"YulFunctionCall","src":"24365:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24357:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24235:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24250:4:19","type":""}],"src":"24084:419:19"},{"body":{"nodeType":"YulBlock","src":"24680:248:19","statements":[{"nodeType":"YulAssignment","src":"24690:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24702:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24713:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24698:3:19"},"nodeType":"YulFunctionCall","src":"24698:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24690:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24737:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24748:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24733:3:19"},"nodeType":"YulFunctionCall","src":"24733:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24756:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"24762:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24752:3:19"},"nodeType":"YulFunctionCall","src":"24752:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24726:6:19"},"nodeType":"YulFunctionCall","src":"24726:47:19"},"nodeType":"YulExpressionStatement","src":"24726:47:19"},{"nodeType":"YulAssignment","src":"24782:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24916:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24790:124:19"},"nodeType":"YulFunctionCall","src":"24790:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24782:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24660:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24675:4:19","type":""}],"src":"24509:419:19"},{"body":{"nodeType":"YulBlock","src":"25105:248:19","statements":[{"nodeType":"YulAssignment","src":"25115:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25127:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25138:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25123:3:19"},"nodeType":"YulFunctionCall","src":"25123:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25115:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25162:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25173:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25158:3:19"},"nodeType":"YulFunctionCall","src":"25158:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25181:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"25187:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25177:3:19"},"nodeType":"YulFunctionCall","src":"25177:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25151:6:19"},"nodeType":"YulFunctionCall","src":"25151:47:19"},"nodeType":"YulExpressionStatement","src":"25151:47:19"},{"nodeType":"YulAssignment","src":"25207:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25341:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25215:124:19"},"nodeType":"YulFunctionCall","src":"25215:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25207:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25085:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25100:4:19","type":""}],"src":"24934:419:19"},{"body":{"nodeType":"YulBlock","src":"25530:248:19","statements":[{"nodeType":"YulAssignment","src":"25540:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25552:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25563:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25548:3:19"},"nodeType":"YulFunctionCall","src":"25548:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25540:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25587:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25598:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25583:3:19"},"nodeType":"YulFunctionCall","src":"25583:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25606:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"25612:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25602:3:19"},"nodeType":"YulFunctionCall","src":"25602:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25576:6:19"},"nodeType":"YulFunctionCall","src":"25576:47:19"},"nodeType":"YulExpressionStatement","src":"25576:47:19"},{"nodeType":"YulAssignment","src":"25632:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25766:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25640:124:19"},"nodeType":"YulFunctionCall","src":"25640:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25632:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25510:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25525:4:19","type":""}],"src":"25359:419:19"},{"body":{"nodeType":"YulBlock","src":"25955:248:19","statements":[{"nodeType":"YulAssignment","src":"25965:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25977:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25988:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25973:3:19"},"nodeType":"YulFunctionCall","src":"25973:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25965:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26012:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26023:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26008:3:19"},"nodeType":"YulFunctionCall","src":"26008:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26031:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"26037:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26027:3:19"},"nodeType":"YulFunctionCall","src":"26027:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26001:6:19"},"nodeType":"YulFunctionCall","src":"26001:47:19"},"nodeType":"YulExpressionStatement","src":"26001:47:19"},{"nodeType":"YulAssignment","src":"26057:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26191:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26065:124:19"},"nodeType":"YulFunctionCall","src":"26065:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26057:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25935:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25950:4:19","type":""}],"src":"25784:419:19"},{"body":{"nodeType":"YulBlock","src":"26380:248:19","statements":[{"nodeType":"YulAssignment","src":"26390:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26402:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26413:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26398:3:19"},"nodeType":"YulFunctionCall","src":"26398:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26390:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26437:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26448:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26433:3:19"},"nodeType":"YulFunctionCall","src":"26433:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26456:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"26462:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26452:3:19"},"nodeType":"YulFunctionCall","src":"26452:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26426:6:19"},"nodeType":"YulFunctionCall","src":"26426:47:19"},"nodeType":"YulExpressionStatement","src":"26426:47:19"},{"nodeType":"YulAssignment","src":"26482:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26616:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26490:124:19"},"nodeType":"YulFunctionCall","src":"26490:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26482:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26360:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26375:4:19","type":""}],"src":"26209:419:19"},{"body":{"nodeType":"YulBlock","src":"26805:248:19","statements":[{"nodeType":"YulAssignment","src":"26815:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26827:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26838:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26823:3:19"},"nodeType":"YulFunctionCall","src":"26823:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26815:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26862:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26873:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26858:3:19"},"nodeType":"YulFunctionCall","src":"26858:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26881:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"26887:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26877:3:19"},"nodeType":"YulFunctionCall","src":"26877:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26851:6:19"},"nodeType":"YulFunctionCall","src":"26851:47:19"},"nodeType":"YulExpressionStatement","src":"26851:47:19"},{"nodeType":"YulAssignment","src":"26907:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27041:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26915:124:19"},"nodeType":"YulFunctionCall","src":"26915:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26907:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26785:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26800:4:19","type":""}],"src":"26634:419:19"},{"body":{"nodeType":"YulBlock","src":"27157:124:19","statements":[{"nodeType":"YulAssignment","src":"27167:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27179:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"27190:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27175:3:19"},"nodeType":"YulFunctionCall","src":"27175:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27167:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27247:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27260:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"27271:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27256:3:19"},"nodeType":"YulFunctionCall","src":"27256:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27203:43:19"},"nodeType":"YulFunctionCall","src":"27203:71:19"},"nodeType":"YulExpressionStatement","src":"27203:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27129:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27141:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27152:4:19","type":""}],"src":"27059:222:19"},{"body":{"nodeType":"YulBlock","src":"27328:88:19","statements":[{"nodeType":"YulAssignment","src":"27338:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"27348:18:19"},"nodeType":"YulFunctionCall","src":"27348:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27338:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27397:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"27405:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"27377:19:19"},"nodeType":"YulFunctionCall","src":"27377:33:19"},"nodeType":"YulExpressionStatement","src":"27377:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"27312:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"27321:6:19","type":""}],"src":"27287:129:19"},{"body":{"nodeType":"YulBlock","src":"27462:35:19","statements":[{"nodeType":"YulAssignment","src":"27472:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27488:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27482:5:19"},"nodeType":"YulFunctionCall","src":"27482:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27472:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"27455:6:19","type":""}],"src":"27422:75:19"},{"body":{"nodeType":"YulBlock","src":"27585:229:19","statements":[{"body":{"nodeType":"YulBlock","src":"27690:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"27692:16:19"},"nodeType":"YulFunctionCall","src":"27692:18:19"},"nodeType":"YulExpressionStatement","src":"27692:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27662:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"27670:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27659:2:19"},"nodeType":"YulFunctionCall","src":"27659:30:19"},"nodeType":"YulIf","src":"27656:56:19"},{"nodeType":"YulAssignment","src":"27722:25:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27734:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"27742:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27730:3:19"},"nodeType":"YulFunctionCall","src":"27730:17:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"27722:4:19"}]},{"nodeType":"YulAssignment","src":"27784:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"27796:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"27802:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27792:3:19"},"nodeType":"YulFunctionCall","src":"27792:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"27784:4:19"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"27569:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"27580:4:19","type":""}],"src":"27503:311:19"},{"body":{"nodeType":"YulBlock","src":"27886:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"27991:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"27993:16:19"},"nodeType":"YulFunctionCall","src":"27993:18:19"},"nodeType":"YulExpressionStatement","src":"27993:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27963:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"27971:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27960:2:19"},"nodeType":"YulFunctionCall","src":"27960:30:19"},"nodeType":"YulIf","src":"27957:56:19"},{"nodeType":"YulAssignment","src":"28023:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28053:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"28031:21:19"},"nodeType":"YulFunctionCall","src":"28031:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"28023:4:19"}]},{"nodeType":"YulAssignment","src":"28097:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"28109:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"28115:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28105:3:19"},"nodeType":"YulFunctionCall","src":"28105:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"28097:4:19"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"27870:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"27881:4:19","type":""}],"src":"27820:307:19"},{"body":{"nodeType":"YulBlock","src":"28203:28:19","statements":[{"nodeType":"YulAssignment","src":"28213:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"28221:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"28213:4:19"}]}]},"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"28190:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"28198:4:19","type":""}],"src":"28133:98:19"},{"body":{"nodeType":"YulBlock","src":"28309:32:19","statements":[{"nodeType":"YulAssignment","src":"28320:14:19","value":{"kind":"number","nodeType":"YulLiteral","src":"28330:4:19","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28320:6:19"}]}]},"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28292:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"28302:6:19","type":""}],"src":"28237:104:19"},{"body":{"nodeType":"YulBlock","src":"28405:40:19","statements":[{"nodeType":"YulAssignment","src":"28416:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28432:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28426:5:19"},"nodeType":"YulFunctionCall","src":"28426:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28416:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28388:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"28398:6:19","type":""}],"src":"28347:98:19"},{"body":{"nodeType":"YulBlock","src":"28510:40:19","statements":[{"nodeType":"YulAssignment","src":"28521:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28537:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28531:5:19"},"nodeType":"YulFunctionCall","src":"28531:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28521:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28493:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"28503:6:19","type":""}],"src":"28451:99:19"},{"body":{"nodeType":"YulBlock","src":"28629:38:19","statements":[{"nodeType":"YulAssignment","src":"28639:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"28651:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"28656:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28647:3:19"},"nodeType":"YulFunctionCall","src":"28647:14:19"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"28639:4:19"}]}]},"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"28616:3:19","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"28624:4:19","type":""}],"src":"28556:111:19"},{"body":{"nodeType":"YulBlock","src":"28782:34:19","statements":[{"nodeType":"YulAssignment","src":"28792:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"28807:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"28792:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28754:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"28759:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"28770:11:19","type":""}],"src":"28673:143:19"},{"body":{"nodeType":"YulBlock","src":"28917:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28934:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"28939:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28927:6:19"},"nodeType":"YulFunctionCall","src":"28927:19:19"},"nodeType":"YulExpressionStatement","src":"28927:19:19"},{"nodeType":"YulAssignment","src":"28955:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28974:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"28979:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28970:3:19"},"nodeType":"YulFunctionCall","src":"28970:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"28955:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28889:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"28894:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"28905:11:19","type":""}],"src":"28822:168:19"},{"body":{"nodeType":"YulBlock","src":"29109:34:19","statements":[{"nodeType":"YulAssignment","src":"29119:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"29134:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29119:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29081:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"29086:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"29097:11:19","type":""}],"src":"28996:147:19"},{"body":{"nodeType":"YulBlock","src":"29245:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29262:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"29267:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29255:6:19"},"nodeType":"YulFunctionCall","src":"29255:19:19"},"nodeType":"YulExpressionStatement","src":"29255:19:19"},{"nodeType":"YulAssignment","src":"29283:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29302:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"29307:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29298:3:19"},"nodeType":"YulFunctionCall","src":"29298:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29283:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29217:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"29222:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"29233:11:19","type":""}],"src":"29149:169:19"},{"body":{"nodeType":"YulBlock","src":"29438:34:19","statements":[{"nodeType":"YulAssignment","src":"29448:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"29463:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29448:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29410:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"29415:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"29426:11:19","type":""}],"src":"29324:148:19"},{"body":{"nodeType":"YulBlock","src":"29522:261:19","statements":[{"nodeType":"YulAssignment","src":"29532:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29555:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29537:17:19"},"nodeType":"YulFunctionCall","src":"29537:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29532:1:19"}]},{"nodeType":"YulAssignment","src":"29566:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29589:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29571:17:19"},"nodeType":"YulFunctionCall","src":"29571:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29566:1:19"}]},{"body":{"nodeType":"YulBlock","src":"29729:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29731:16:19"},"nodeType":"YulFunctionCall","src":"29731:18:19"},"nodeType":"YulExpressionStatement","src":"29731:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29650:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29657:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"29725:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29653:3:19"},"nodeType":"YulFunctionCall","src":"29653:74:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29647:2:19"},"nodeType":"YulFunctionCall","src":"29647:81:19"},"nodeType":"YulIf","src":"29644:107:19"},{"nodeType":"YulAssignment","src":"29761:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29772:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"29775:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29768:3:19"},"nodeType":"YulFunctionCall","src":"29768:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"29761:3:19"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29509:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"29512:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"29518:3:19","type":""}],"src":"29478:305:19"},{"body":{"nodeType":"YulBlock","src":"29834:51:19","statements":[{"nodeType":"YulAssignment","src":"29844:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29873:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"29855:17:19"},"nodeType":"YulFunctionCall","src":"29855:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"29844:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29816:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"29826:7:19","type":""}],"src":"29789:96:19"},{"body":{"nodeType":"YulBlock","src":"29933:48:19","statements":[{"nodeType":"YulAssignment","src":"29943:32:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29968:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29961:6:19"},"nodeType":"YulFunctionCall","src":"29961:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29954:6:19"},"nodeType":"YulFunctionCall","src":"29954:21:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"29943:7:19"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29915:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"29925:7:19","type":""}],"src":"29891:90:19"},{"body":{"nodeType":"YulBlock","src":"30032:32:19","statements":[{"nodeType":"YulAssignment","src":"30042:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"30053:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"30042:7:19"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30014:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"30024:7:19","type":""}],"src":"29987:77:19"},{"body":{"nodeType":"YulBlock","src":"30114:105:19","statements":[{"nodeType":"YulAssignment","src":"30124:89:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30139:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"30146:66:19","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30135:3:19"},"nodeType":"YulFunctionCall","src":"30135:78:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"30124:7:19"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30096:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"30106:7:19","type":""}],"src":"30070:149:19"},{"body":{"nodeType":"YulBlock","src":"30280:76:19","statements":[{"nodeType":"YulAssignment","src":"30290:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"30301:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"30290:7:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30344:5:19"}],"functionName":{"name":"validator_assert_t_enum$_Breed_$3658","nodeType":"YulIdentifier","src":"30307:36:19"},"nodeType":"YulFunctionCall","src":"30307:43:19"},"nodeType":"YulExpressionStatement","src":"30307:43:19"}]},"name":"cleanup_t_enum$_Breed_$3658","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30262:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"30272:7:19","type":""}],"src":"30225:131:19"},{"body":{"nodeType":"YulBlock","src":"30406:45:19","statements":[{"nodeType":"YulAssignment","src":"30416:29:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30431:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"30438:6:19","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30427:3:19"},"nodeType":"YulFunctionCall","src":"30427:18:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"30416:7:19"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30388:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"30398:7:19","type":""}],"src":"30362:89:19"},{"body":{"nodeType":"YulBlock","src":"30502:81:19","statements":[{"nodeType":"YulAssignment","src":"30512:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30527:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"30534:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30523:3:19"},"nodeType":"YulFunctionCall","src":"30523:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"30512:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30484:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"30494:7:19","type":""}],"src":"30457:126:19"},{"body":{"nodeType":"YulBlock","src":"30634:32:19","statements":[{"nodeType":"YulAssignment","src":"30644:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"30655:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"30644:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30616:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"30626:7:19","type":""}],"src":"30589:77:19"},{"body":{"nodeType":"YulBlock","src":"30716:49:19","statements":[{"nodeType":"YulAssignment","src":"30726:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30741:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"30748:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30737:3:19"},"nodeType":"YulFunctionCall","src":"30737:22:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"30726:7:19"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30698:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"30708:7:19","type":""}],"src":"30672:93:19"},{"body":{"nodeType":"YulBlock","src":"30815:57:19","statements":[{"nodeType":"YulAssignment","src":"30825:41:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30840:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"30847:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30836:3:19"},"nodeType":"YulFunctionCall","src":"30836:30:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"30825:7:19"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30797:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"30807:7:19","type":""}],"src":"30771:101:19"},{"body":{"nodeType":"YulBlock","src":"30946:63:19","statements":[{"nodeType":"YulAssignment","src":"30956:47:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30997:5:19"}],"functionName":{"name":"cleanup_t_enum$_Breed_$3658","nodeType":"YulIdentifier","src":"30969:27:19"},"nodeType":"YulFunctionCall","src":"30969:34:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"30956:9:19"}]}]},"name":"convert_t_enum$_Breed_$3658_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30926:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"30936:9:19","type":""}],"src":"30878:131:19"},{"body":{"nodeType":"YulBlock","src":"31066:103:19","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"31089:3:19"},{"name":"src","nodeType":"YulIdentifier","src":"31094:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"31099:6:19"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"31076:12:19"},"nodeType":"YulFunctionCall","src":"31076:30:19"},"nodeType":"YulExpressionStatement","src":"31076:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"31147:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"31152:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31143:3:19"},"nodeType":"YulFunctionCall","src":"31143:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"31161:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31136:6:19"},"nodeType":"YulFunctionCall","src":"31136:27:19"},"nodeType":"YulExpressionStatement","src":"31136:27:19"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"31048:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"31053:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"31058:6:19","type":""}],"src":"31015:154:19"},{"body":{"nodeType":"YulBlock","src":"31224:258:19","statements":[{"nodeType":"YulVariableDeclaration","src":"31234:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"31243:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"31238:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"31303:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"31328:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"31333:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31324:3:19"},"nodeType":"YulFunctionCall","src":"31324:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31347:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"31352:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31343:3:19"},"nodeType":"YulFunctionCall","src":"31343:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31337:5:19"},"nodeType":"YulFunctionCall","src":"31337:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31317:6:19"},"nodeType":"YulFunctionCall","src":"31317:39:19"},"nodeType":"YulExpressionStatement","src":"31317:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31264:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"31267:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31261:2:19"},"nodeType":"YulFunctionCall","src":"31261:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31275:19:19","statements":[{"nodeType":"YulAssignment","src":"31277:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31286:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"31289:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31282:3:19"},"nodeType":"YulFunctionCall","src":"31282:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"31277:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"31257:3:19","statements":[]},"src":"31253:113:19"},{"body":{"nodeType":"YulBlock","src":"31400:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"31450:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"31455:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31446:3:19"},"nodeType":"YulFunctionCall","src":"31446:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"31464:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31439:6:19"},"nodeType":"YulFunctionCall","src":"31439:27:19"},"nodeType":"YulExpressionStatement","src":"31439:27:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31381:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"31384:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31378:2:19"},"nodeType":"YulFunctionCall","src":"31378:13:19"},"nodeType":"YulIf","src":"31375:101:19"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"31206:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"31211:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"31216:6:19","type":""}],"src":"31175:307:19"},{"body":{"nodeType":"YulBlock","src":"31539:269:19","statements":[{"nodeType":"YulAssignment","src":"31549:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31563:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"31569:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"31559:3:19"},"nodeType":"YulFunctionCall","src":"31559:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"31549:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"31580:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31610:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"31616:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31606:3:19"},"nodeType":"YulFunctionCall","src":"31606:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"31584:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"31657:51:19","statements":[{"nodeType":"YulAssignment","src":"31671:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31685:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"31693:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31681:3:19"},"nodeType":"YulFunctionCall","src":"31681:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"31671:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"31637:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31630:6:19"},"nodeType":"YulFunctionCall","src":"31630:26:19"},"nodeType":"YulIf","src":"31627:81:19"},{"body":{"nodeType":"YulBlock","src":"31760:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"31774:16:19"},"nodeType":"YulFunctionCall","src":"31774:18:19"},"nodeType":"YulExpressionStatement","src":"31774:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"31724:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31747:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"31755:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31744:2:19"},"nodeType":"YulFunctionCall","src":"31744:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"31721:2:19"},"nodeType":"YulFunctionCall","src":"31721:38:19"},"nodeType":"YulIf","src":"31718:84:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"31523:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"31532:6:19","type":""}],"src":"31488:320:19"},{"body":{"nodeType":"YulBlock","src":"31857:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"31867:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31889:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"31919:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"31897:21:19"},"nodeType":"YulFunctionCall","src":"31897:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31885:3:19"},"nodeType":"YulFunctionCall","src":"31885:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"31871:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"32036:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"32038:16:19"},"nodeType":"YulFunctionCall","src":"32038:18:19"},"nodeType":"YulExpressionStatement","src":"32038:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"31979:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"31991:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31976:2:19"},"nodeType":"YulFunctionCall","src":"31976:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"32015:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"32027:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32012:2:19"},"nodeType":"YulFunctionCall","src":"32012:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"31973:2:19"},"nodeType":"YulFunctionCall","src":"31973:62:19"},"nodeType":"YulIf","src":"31970:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32074:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"32078:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32067:6:19"},"nodeType":"YulFunctionCall","src":"32067:22:19"},"nodeType":"YulExpressionStatement","src":"32067:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31843:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"31851:4:19","type":""}],"src":"31814:281:19"},{"body":{"nodeType":"YulBlock","src":"32144:190:19","statements":[{"nodeType":"YulAssignment","src":"32154:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32181:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32163:17:19"},"nodeType":"YulFunctionCall","src":"32163:24:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32154:5:19"}]},{"body":{"nodeType":"YulBlock","src":"32277:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32279:16:19"},"nodeType":"YulFunctionCall","src":"32279:18:19"},"nodeType":"YulExpressionStatement","src":"32279:18:19"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32202:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"32209:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32199:2:19"},"nodeType":"YulFunctionCall","src":"32199:77:19"},"nodeType":"YulIf","src":"32196:103:19"},{"nodeType":"YulAssignment","src":"32308:20:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32319:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"32326:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32315:3:19"},"nodeType":"YulFunctionCall","src":"32315:13:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32308:3:19"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32130:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32140:3:19","type":""}],"src":"32101:233:19"},{"body":{"nodeType":"YulBlock","src":"32374:142:19","statements":[{"nodeType":"YulAssignment","src":"32384:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32407:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32389:17:19"},"nodeType":"YulFunctionCall","src":"32389:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"32384:1:19"}]},{"nodeType":"YulAssignment","src":"32418:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32441:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32423:17:19"},"nodeType":"YulFunctionCall","src":"32423:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"32418:1:19"}]},{"body":{"nodeType":"YulBlock","src":"32465:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"32467:16:19"},"nodeType":"YulFunctionCall","src":"32467:18:19"},"nodeType":"YulExpressionStatement","src":"32467:18:19"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32462:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32455:6:19"},"nodeType":"YulFunctionCall","src":"32455:9:19"},"nodeType":"YulIf","src":"32452:35:19"},{"nodeType":"YulAssignment","src":"32496:14:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32505:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"32508:1:19"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"32501:3:19"},"nodeType":"YulFunctionCall","src":"32501:9:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"32496:1:19"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"32363:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"32366:1:19","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"32372:1:19","type":""}],"src":"32340:176:19"},{"body":{"nodeType":"YulBlock","src":"32550:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32567:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32570:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32560:6:19"},"nodeType":"YulFunctionCall","src":"32560:88:19"},"nodeType":"YulExpressionStatement","src":"32560:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32664:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32667:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32657:6:19"},"nodeType":"YulFunctionCall","src":"32657:15:19"},"nodeType":"YulExpressionStatement","src":"32657:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32688:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32691:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32681:6:19"},"nodeType":"YulFunctionCall","src":"32681:15:19"},"nodeType":"YulExpressionStatement","src":"32681:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"32522:180:19"},{"body":{"nodeType":"YulBlock","src":"32736:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32753:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32756:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32746:6:19"},"nodeType":"YulFunctionCall","src":"32746:88:19"},"nodeType":"YulExpressionStatement","src":"32746:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32850:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32853:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32843:6:19"},"nodeType":"YulFunctionCall","src":"32843:15:19"},"nodeType":"YulExpressionStatement","src":"32843:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32874:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32877:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32867:6:19"},"nodeType":"YulFunctionCall","src":"32867:15:19"},"nodeType":"YulExpressionStatement","src":"32867:15:19"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"32708:180:19"},{"body":{"nodeType":"YulBlock","src":"32922:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32939:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32942:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32932:6:19"},"nodeType":"YulFunctionCall","src":"32932:88:19"},"nodeType":"YulExpressionStatement","src":"32932:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33036:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33039:4:19","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33029:6:19"},"nodeType":"YulFunctionCall","src":"33029:15:19"},"nodeType":"YulExpressionStatement","src":"33029:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33060:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33063:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33053:6:19"},"nodeType":"YulFunctionCall","src":"33053:15:19"},"nodeType":"YulExpressionStatement","src":"33053:15:19"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"32894:180:19"},{"body":{"nodeType":"YulBlock","src":"33108:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33125:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33128:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33118:6:19"},"nodeType":"YulFunctionCall","src":"33118:88:19"},"nodeType":"YulExpressionStatement","src":"33118:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33222:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33225:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33215:6:19"},"nodeType":"YulFunctionCall","src":"33215:15:19"},"nodeType":"YulExpressionStatement","src":"33215:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33246:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33249:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33239:6:19"},"nodeType":"YulFunctionCall","src":"33239:15:19"},"nodeType":"YulExpressionStatement","src":"33239:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"33080:180:19"},{"body":{"nodeType":"YulBlock","src":"33294:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33311:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33314:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33304:6:19"},"nodeType":"YulFunctionCall","src":"33304:88:19"},"nodeType":"YulExpressionStatement","src":"33304:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33408:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33411:4:19","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33401:6:19"},"nodeType":"YulFunctionCall","src":"33401:15:19"},"nodeType":"YulExpressionStatement","src":"33401:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33432:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33435:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33425:6:19"},"nodeType":"YulFunctionCall","src":"33425:15:19"},"nodeType":"YulExpressionStatement","src":"33425:15:19"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"33266:180:19"},{"body":{"nodeType":"YulBlock","src":"33480:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33497:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33500:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33490:6:19"},"nodeType":"YulFunctionCall","src":"33490:88:19"},"nodeType":"YulExpressionStatement","src":"33490:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33594:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33597:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33587:6:19"},"nodeType":"YulFunctionCall","src":"33587:15:19"},"nodeType":"YulExpressionStatement","src":"33587:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33618:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33621:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33611:6:19"},"nodeType":"YulFunctionCall","src":"33611:15:19"},"nodeType":"YulExpressionStatement","src":"33611:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"33452:180:19"},{"body":{"nodeType":"YulBlock","src":"33727:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33744:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33747:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33737:6:19"},"nodeType":"YulFunctionCall","src":"33737:12:19"},"nodeType":"YulExpressionStatement","src":"33737:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"33638:117:19"},{"body":{"nodeType":"YulBlock","src":"33850:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33867:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33870:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33860:6:19"},"nodeType":"YulFunctionCall","src":"33860:12:19"},"nodeType":"YulExpressionStatement","src":"33860:12:19"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"33761:117:19"},{"body":{"nodeType":"YulBlock","src":"33973:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33990:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33993:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33983:6:19"},"nodeType":"YulFunctionCall","src":"33983:12:19"},"nodeType":"YulExpressionStatement","src":"33983:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"33884:117:19"},{"body":{"nodeType":"YulBlock","src":"34096:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34113:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34116:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34106:6:19"},"nodeType":"YulFunctionCall","src":"34106:12:19"},"nodeType":"YulExpressionStatement","src":"34106:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"34007:117:19"},{"body":{"nodeType":"YulBlock","src":"34219:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34236:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34239:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34229:6:19"},"nodeType":"YulFunctionCall","src":"34229:12:19"},"nodeType":"YulExpressionStatement","src":"34229:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"34130:117:19"},{"body":{"nodeType":"YulBlock","src":"34301:54:19","statements":[{"nodeType":"YulAssignment","src":"34311:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34329:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"34336:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34325:3:19"},"nodeType":"YulFunctionCall","src":"34325:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34345:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34341:3:19"},"nodeType":"YulFunctionCall","src":"34341:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34321:3:19"},"nodeType":"YulFunctionCall","src":"34321:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"34311:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34284:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"34294:6:19","type":""}],"src":"34253:102:19"},{"body":{"nodeType":"YulBlock","src":"34467:126:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34489:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"34497:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34485:3:19"},"nodeType":"YulFunctionCall","src":"34485:14:19"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"34501:34:19","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34478:6:19"},"nodeType":"YulFunctionCall","src":"34478:58:19"},"nodeType":"YulExpressionStatement","src":"34478:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34557:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"34565:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34553:3:19"},"nodeType":"YulFunctionCall","src":"34553:15:19"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"34570:15:19","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34546:6:19"},"nodeType":"YulFunctionCall","src":"34546:40:19"},"nodeType":"YulExpressionStatement","src":"34546:40:19"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34459:6:19","type":""}],"src":"34361:232:19"},{"body":{"nodeType":"YulBlock","src":"34705:131:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34727:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"34735:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34723:3:19"},"nodeType":"YulFunctionCall","src":"34723:14:19"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"34739:34:19","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34716:6:19"},"nodeType":"YulFunctionCall","src":"34716:58:19"},"nodeType":"YulExpressionStatement","src":"34716:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34795:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"34803:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34791:3:19"},"nodeType":"YulFunctionCall","src":"34791:15:19"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"34808:20:19","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34784:6:19"},"nodeType":"YulFunctionCall","src":"34784:45:19"},"nodeType":"YulExpressionStatement","src":"34784:45:19"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34697:6:19","type":""}],"src":"34599:237:19"},{"body":{"nodeType":"YulBlock","src":"34948:119:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34970:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"34978:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34966:3:19"},"nodeType":"YulFunctionCall","src":"34966:14:19"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"34982:34:19","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34959:6:19"},"nodeType":"YulFunctionCall","src":"34959:58:19"},"nodeType":"YulExpressionStatement","src":"34959:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35038:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"35046:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35034:3:19"},"nodeType":"YulFunctionCall","src":"35034:15:19"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"35051:8:19","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35027:6:19"},"nodeType":"YulFunctionCall","src":"35027:33:19"},"nodeType":"YulExpressionStatement","src":"35027:33:19"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34940:6:19","type":""}],"src":"34842:225:19"},{"body":{"nodeType":"YulBlock","src":"35179:118:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35201:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"35209:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35197:3:19"},"nodeType":"YulFunctionCall","src":"35197:14:19"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"35213:34:19","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35190:6:19"},"nodeType":"YulFunctionCall","src":"35190:58:19"},"nodeType":"YulExpressionStatement","src":"35190:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35269:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"35277:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35265:3:19"},"nodeType":"YulFunctionCall","src":"35265:15:19"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"35282:7:19","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35258:6:19"},"nodeType":"YulFunctionCall","src":"35258:32:19"},"nodeType":"YulExpressionStatement","src":"35258:32:19"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35171:6:19","type":""}],"src":"35073:224:19"},{"body":{"nodeType":"YulBlock","src":"35409:72:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35431:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"35439:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35427:3:19"},"nodeType":"YulFunctionCall","src":"35427:14:19"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"35443:30:19","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35420:6:19"},"nodeType":"YulFunctionCall","src":"35420:54:19"},"nodeType":"YulExpressionStatement","src":"35420:54:19"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35401:6:19","type":""}],"src":"35303:178:19"},{"body":{"nodeType":"YulBlock","src":"35593:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35615:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"35623:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35611:3:19"},"nodeType":"YulFunctionCall","src":"35611:14:19"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"35627:34:19","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35604:6:19"},"nodeType":"YulFunctionCall","src":"35604:58:19"},"nodeType":"YulExpressionStatement","src":"35604:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35683:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"35691:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35679:3:19"},"nodeType":"YulFunctionCall","src":"35679:15:19"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"35696:6:19","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35672:6:19"},"nodeType":"YulFunctionCall","src":"35672:31:19"},"nodeType":"YulExpressionStatement","src":"35672:31:19"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35585:6:19","type":""}],"src":"35487:223:19"},{"body":{"nodeType":"YulBlock","src":"35822:69:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35844:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"35852:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35840:3:19"},"nodeType":"YulFunctionCall","src":"35840:14:19"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"35856:27:19","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35833:6:19"},"nodeType":"YulFunctionCall","src":"35833:51:19"},"nodeType":"YulExpressionStatement","src":"35833:51:19"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35814:6:19","type":""}],"src":"35716:175:19"},{"body":{"nodeType":"YulBlock","src":"36003:122:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36025:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"36033:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36021:3:19"},"nodeType":"YulFunctionCall","src":"36021:14:19"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"36037:34:19","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36014:6:19"},"nodeType":"YulFunctionCall","src":"36014:58:19"},"nodeType":"YulExpressionStatement","src":"36014:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36093:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"36101:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36089:3:19"},"nodeType":"YulFunctionCall","src":"36089:15:19"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"36106:11:19","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36082:6:19"},"nodeType":"YulFunctionCall","src":"36082:36:19"},"nodeType":"YulExpressionStatement","src":"36082:36:19"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35995:6:19","type":""}],"src":"35897:228:19"},{"body":{"nodeType":"YulBlock","src":"36237:127:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36259:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"36267:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36255:3:19"},"nodeType":"YulFunctionCall","src":"36255:14:19"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"36271:34:19","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36248:6:19"},"nodeType":"YulFunctionCall","src":"36248:58:19"},"nodeType":"YulExpressionStatement","src":"36248:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36327:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"36335:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36323:3:19"},"nodeType":"YulFunctionCall","src":"36323:15:19"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"36340:16:19","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36316:6:19"},"nodeType":"YulFunctionCall","src":"36316:41:19"},"nodeType":"YulExpressionStatement","src":"36316:41:19"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36229:6:19","type":""}],"src":"36131:233:19"},{"body":{"nodeType":"YulBlock","src":"36476:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36498:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"36506:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36494:3:19"},"nodeType":"YulFunctionCall","src":"36494:14:19"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"36510:34:19","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36487:6:19"},"nodeType":"YulFunctionCall","src":"36487:58:19"},"nodeType":"YulExpressionStatement","src":"36487:58:19"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36468:6:19","type":""}],"src":"36370:182:19"},{"body":{"nodeType":"YulBlock","src":"36664:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36686:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"36694:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36682:3:19"},"nodeType":"YulFunctionCall","src":"36682:14:19"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"36698:34:19","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36675:6:19"},"nodeType":"YulFunctionCall","src":"36675:58:19"},"nodeType":"YulExpressionStatement","src":"36675:58:19"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36656:6:19","type":""}],"src":"36558:182:19"},{"body":{"nodeType":"YulBlock","src":"36852:68:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36874:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"36882:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36870:3:19"},"nodeType":"YulFunctionCall","src":"36870:14:19"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"36886:26:19","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36863:6:19"},"nodeType":"YulFunctionCall","src":"36863:50:19"},"nodeType":"YulExpressionStatement","src":"36863:50:19"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36844:6:19","type":""}],"src":"36746:174:19"},{"body":{"nodeType":"YulBlock","src":"37032:114:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37054:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"37062:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37050:3:19"},"nodeType":"YulFunctionCall","src":"37050:14:19"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"37066:34:19","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37043:6:19"},"nodeType":"YulFunctionCall","src":"37043:58:19"},"nodeType":"YulExpressionStatement","src":"37043:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37122:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"37130:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37118:3:19"},"nodeType":"YulFunctionCall","src":"37118:15:19"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"37135:3:19","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37111:6:19"},"nodeType":"YulFunctionCall","src":"37111:28:19"},"nodeType":"YulExpressionStatement","src":"37111:28:19"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37024:6:19","type":""}],"src":"36926:220:19"},{"body":{"nodeType":"YulBlock","src":"37258:8:19","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37250:6:19","type":""}],"src":"37152:114:19"},{"body":{"nodeType":"YulBlock","src":"37378:142:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37400:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"37408:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37396:3:19"},"nodeType":"YulFunctionCall","src":"37396:14:19"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"37412:34:19","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37389:6:19"},"nodeType":"YulFunctionCall","src":"37389:58:19"},"nodeType":"YulExpressionStatement","src":"37389:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37468:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"37476:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37464:3:19"},"nodeType":"YulFunctionCall","src":"37464:15:19"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"37481:31:19","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37457:6:19"},"nodeType":"YulFunctionCall","src":"37457:56:19"},"nodeType":"YulExpressionStatement","src":"37457:56:19"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37370:6:19","type":""}],"src":"37272:248:19"},{"body":{"nodeType":"YulBlock","src":"37579:62:19","statements":[{"body":{"nodeType":"YulBlock","src":"37613:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"37615:16:19"},"nodeType":"YulFunctionCall","src":"37615:18:19"},"nodeType":"YulExpressionStatement","src":"37615:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37602:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"37609:1:19","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"37599:2:19"},"nodeType":"YulFunctionCall","src":"37599:12:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37592:6:19"},"nodeType":"YulFunctionCall","src":"37592:20:19"},"nodeType":"YulIf","src":"37589:46:19"}]},"name":"validator_assert_t_enum$_Breed_$3658","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37572:5:19","type":""}],"src":"37526:115:19"},{"body":{"nodeType":"YulBlock","src":"37690:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"37747:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37756:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37759:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37749:6:19"},"nodeType":"YulFunctionCall","src":"37749:12:19"},"nodeType":"YulExpressionStatement","src":"37749:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37713:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37738:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"37720:17:19"},"nodeType":"YulFunctionCall","src":"37720:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"37710:2:19"},"nodeType":"YulFunctionCall","src":"37710:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37703:6:19"},"nodeType":"YulFunctionCall","src":"37703:43:19"},"nodeType":"YulIf","src":"37700:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37683:5:19","type":""}],"src":"37647:122:19"},{"body":{"nodeType":"YulBlock","src":"37815:76:19","statements":[{"body":{"nodeType":"YulBlock","src":"37869:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37878:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37881:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37871:6:19"},"nodeType":"YulFunctionCall","src":"37871:12:19"},"nodeType":"YulExpressionStatement","src":"37871:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37838:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37860:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"37845:14:19"},"nodeType":"YulFunctionCall","src":"37845:21:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"37835:2:19"},"nodeType":"YulFunctionCall","src":"37835:32:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37828:6:19"},"nodeType":"YulFunctionCall","src":"37828:40:19"},"nodeType":"YulIf","src":"37825:60:19"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37808:5:19","type":""}],"src":"37775:116:19"},{"body":{"nodeType":"YulBlock","src":"37939:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"37995:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38004:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38007:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37997:6:19"},"nodeType":"YulFunctionCall","src":"37997:12:19"},"nodeType":"YulExpressionStatement","src":"37997:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37962:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37986:5:19"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"37969:16:19"},"nodeType":"YulFunctionCall","src":"37969:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"37959:2:19"},"nodeType":"YulFunctionCall","src":"37959:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37952:6:19"},"nodeType":"YulFunctionCall","src":"37952:42:19"},"nodeType":"YulIf","src":"37949:62:19"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37932:5:19","type":""}],"src":"37897:120:19"},{"body":{"nodeType":"YulBlock","src":"38066:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"38123:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38132:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38135:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38125:6:19"},"nodeType":"YulFunctionCall","src":"38125:12:19"},"nodeType":"YulExpressionStatement","src":"38125:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38089:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38114:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"38096:17:19"},"nodeType":"YulFunctionCall","src":"38096:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"38086:2:19"},"nodeType":"YulFunctionCall","src":"38086:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"38079:6:19"},"nodeType":"YulFunctionCall","src":"38079:43:19"},"nodeType":"YulIf","src":"38076:63:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38059:5:19","type":""}],"src":"38023:122:19"}]},"contents":"{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[3] -> uint256[3]\n    function abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_enum$_Breed_$3658_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Breed_$3658_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_enum$_Breed_$3658__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Breed_$3658_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_Breed_$3658_t_address__to_t_uint8_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_Breed_$3658_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function array_length_t_array$_t_uint256_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_enum$_Breed_$3658(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Breed_$3658(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_enum$_Breed_$3658_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Breed_$3658(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_assert_t_enum$_Breed_$3658(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10":[{"length":32,"start":2257},{"length":32,"start":2341}],"3661":[{"length":32,"start":3746}],"3663":[{"length":32,"start":3839}],"3665":[{"length":32,"start":3806}],"3667":[{"length":32,"start":3874}],"3683":[{"length":32,"start":3151},{"length":32,"start":3656}]},"linkReferences":{},"object":"6080604052600436106101665760003560e01c8063715018a6116100d1578063a51cccf31161008a578063c87b56dd11610064578063c87b56dd1461051d578063e985e9c51461055a578063f2fde38b14610597578063f4eb69c3146105c057610166565b8063a51cccf314610499578063aa152491146104d6578063b88d4fde146104f457610166565b8063715018a61461039b5780637a5caab3146103b25780638da5cb5b146103dd57806395d89b4114610408578063a22cb46514610433578063a36f573b1461045c57610166565b80633ccfd60b116101235780633ccfd60b1461028b57806342842e0e146102a25780635dacf5f4146102cb5780636352211e146102f65780636e02007d1461033357806370a082311461035e57610166565b806301ffc9a71461016b57806306fdde03146101a8578063081812fc146101d3578063095ea7b3146102105780631fe543e31461023957806323b872dd14610262575b600080fd5b34801561017757600080fd5b50610192600480360381019061018d919061293a565b6105fd565b60405161019f9190612ed4565b60405180910390f35b3480156101b457600080fd5b506101bd6106df565b6040516101ca9190612f86565b60405180910390f35b3480156101df57600080fd5b506101fa60048036038101906101f59190612994565b610771565b6040516102079190612e29565b60405180910390f35b34801561021c57600080fd5b50610237600480360381019061023291906128fa565b6107b7565b005b34801561024557600080fd5b50610260600480360381019061025b91906129ee565b6108cf565b005b34801561026e57600080fd5b50610289600480360381019061028491906127e4565b61098f565b005b34801561029757600080fd5b506102a06109ef565b005b3480156102ae57600080fd5b506102c960048036038101906102c491906127e4565b610aa3565b005b3480156102d757600080fd5b506102e0610ac3565b6040516102ed9190612eb9565b60405180910390f35b34801561030257600080fd5b5061031d60048036038101906103189190612994565b610aee565b60405161032a9190612e29565b60405180910390f35b34801561033f57600080fd5b50610348610b75565b6040516103559190613168565b60405180910390f35b34801561036a57600080fd5b5061038560048036038101906103809190612777565b610b7f565b6040516103929190613168565b60405180910390f35b3480156103a757600080fd5b506103b0610c37565b005b3480156103be57600080fd5b506103c7610c4b565b6040516103d49190613168565b60405180910390f35b3480156103e957600080fd5b506103f2610c73565b6040516103ff9190612e29565b60405180910390f35b34801561041457600080fd5b5061041d610c9d565b60405161042a9190612f86565b60405180910390f35b34801561043f57600080fd5b5061045a600480360381019061045591906128ba565b610d2f565b005b34801561046857600080fd5b50610483600480360381019061047e9190612994565b610d45565b6040516104909190612e29565b60405180910390f35b3480156104a557600080fd5b506104c060048036038101906104bb9190612994565b610d78565b6040516104cd9190612f42565b60405180910390f35b6104de610e44565b6040516104eb9190613168565b60405180910390f35b34801561050057600080fd5b5061051b60048036038101906105169190612837565b611044565b005b34801561052957600080fd5b50610544600480360381019061053f9190612994565b6110a6565b6040516105519190612f86565b60405180910390f35b34801561056657600080fd5b50610581600480360381019061057c91906127a4565b6111b9565b60405161058e9190612ed4565b60405180910390f35b3480156105a357600080fd5b506105be60048036038101906105b99190612777565b61124d565b005b3480156105cc57600080fd5b506105e760048036038101906105e29190612994565b6112d1565b6040516105f49190612f86565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106c857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806106d857506106d782611381565b5b9050919050565b6060600080546106ee906133ed565b80601f016020809104026020016040519081016040528092919081815260200182805461071a906133ed565b80156107675780601f1061073c57610100808354040283529160200191610767565b820191906000526020600020905b81548152906001019060200180831161074a57829003601f168201915b5050505050905090565b600061077c826113eb565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006107c282610aee565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a90613128565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610852611436565b73ffffffffffffffffffffffffffffffffffffffff16148061088157506108808161087b611436565b6111b9565b5b6108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b790613148565b60405180910390fd5b6108ca838361143e565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098157337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f4000000000000000000000000000000000000000000000000000000008152600401610978929190612e44565b60405180910390fd5b61098b82826114f7565b5050565b6109a061099a611436565b82611691565b6109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d690612fa8565b60405180910390fd5b6109ea838383611726565b505050565b6109f7611a20565b600047905060003373ffffffffffffffffffffffffffffffffffffffff1682604051610a2290612e14565b60006040518083038185875af1925050503d8060008114610a5f576040519150601f19603f3d011682016040523d82523d6000602084013e610a64565b606091505b5050905080610a9f576040517fca7e25b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610abe83838360405180602001604052806000815250611044565b505050565b610acb612526565b6040518060600160405280600a8152602001601e81526020016064815250905090565b600080610afa83611a9e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6390613108565b60405180910390fd5b80915050919050565b6000600854905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be790613088565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610c3f611a20565b610c496000611adb565b565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610cac906133ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd8906133ed565b8015610d255780601f10610cfa57610100808354040283529160200191610d25565b820191906000526020600020905b815481529060010190602001808311610d0857829003601f168201915b5050505050905090565b610d41610d3a611436565b8383611ba1565b5050565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090506000610d89610ac3565b905060005b6003811015610e0c57828510158015610dbd5750818160038110610db557610db4613586565b5b602002015185105b15610ddf57806002811115610dd557610dd4613528565b5b9350505050610e3f565b818160038110610df257610df1613586565b5b602002015192508080610e0490613450565b915050610d8e565b506040517f12806c9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60007f0000000000000000000000000000000000000000000000000000000000000000341015610ea0576040517fb90f491000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b8152600401610f63959493929190612eef565b602060405180830381600087803b158015610f7d57600080fd5b505af1158015610f91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb591906129c1565b905033600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807ff873236e6cc0ecc5be1a9a35c95ee5b8d1ac4cc7bfef0cc5060391d6cc98e26b336040516110399190612e29565b60405180910390a290565b61105561104f611436565b83611691565b611094576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108b90612fa8565b60405180910390fd5b6110a084848484611d0e565b50505050565b60606110b1826113eb565b60006006600084815260200190815260200160002080546110d1906133ed565b80601f01602080910402602001604051908101604052809291908181526020018280546110fd906133ed565b801561114a5780601f1061111f5761010080835404028352916020019161114a565b820191906000526020600020905b81548152906001019060200180831161112d57829003601f168201915b50505050509050600061115b611d6a565b90506000815114156111715781925050506111b4565b6000825111156111a657808260405160200161118e929190612df0565b604051602081830303815290604052925050506111b4565b6111af84611d81565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611255611a20565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112bc90612fe8565b60405180910390fd5b6112ce81611adb565b50565b6060600982815481106112e7576112e6613586565b5b9060005260206000200180546112fc906133ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611328906133ed565b80156113755780601f1061134a57610100808354040283529160200191611375565b820191906000526020600020905b81548152906001019060200180831161135857829003601f168201915b50505050509050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6113f481611de9565b611433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142a90613108565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166114b183610aee565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600a600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600854905060016008546115459190613280565b600881905550600060648460008151811061156357611562613586565b5b60200260200101516115759190613499565b9050600061158282610d78565b905061158e8484611e2a565b6116508360098360028111156115a7576115a6613528565b5b815481106115b8576115b7613586565b5b9060005260206000200180546115cd906133ed565b80601f01602080910402602001604051908101604052809291908181526020018280546115f9906133ed565b80156116465780601f1061161b57610100808354040283529160200191611646565b820191906000526020600020905b81548152906001019060200180831161162957829003601f168201915b5050505050611e48565b7f8a269f26b688e110e9cbd887d163dab35cae678fa353a0292de532c0cac1ecdc8185604051611681929190612f5d565b60405180910390a1505050505050565b60008061169d83610aee565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806116df57506116de81856111b9565b5b8061171d57508373ffffffffffffffffffffffffffffffffffffffff1661170584610771565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661174682610aee565b73ffffffffffffffffffffffffffffffffffffffff161461179c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179390613008565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561180c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180390613048565b60405180910390fd5b6118198383836001611ebc565b8273ffffffffffffffffffffffffffffffffffffffff1661183982610aee565b73ffffffffffffffffffffffffffffffffffffffff161461188f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188690613008565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611a1b8383836001611ec2565b505050565b611a28611436565b73ffffffffffffffffffffffffffffffffffffffff16611a46610c73565b73ffffffffffffffffffffffffffffffffffffffff1614611a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a93906130e8565b60405180910390fd5b565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611c10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0790613068565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611d019190612ed4565b60405180910390a3505050565b611d19848484611726565b611d2584848484611ec8565b611d64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5b90612fc8565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060611d8c826113eb565b6000611d96611d6a565b90506000815111611db65760405180602001604052806000815250611de1565b80611dc08461205f565b604051602001611dd1929190612df0565b6040516020818303038152906040525b915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16611e0b83611a9e565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b611e44828260405180602001604052806000815250612137565b5050565b611e5182611de9565b611e90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e87906130a8565b60405180910390fd5b80600660008481526020019081526020016000209080519060200190611eb7929190612548565b505050565b50505050565b50505050565b6000611ee98473ffffffffffffffffffffffffffffffffffffffff16612192565b15612052578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611f12611436565b8786866040518563ffffffff1660e01b8152600401611f349493929190612e6d565b602060405180830381600087803b158015611f4e57600080fd5b505af1925050508015611f7f57506040513d601f19601f82011682018060405250810190611f7c9190612967565b60015b612002573d8060008114611faf576040519150601f19603f3d011682016040523d82523d6000602084013e611fb4565b606091505b50600081511415611ffa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ff190612fc8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612057565b600190505b949350505050565b60606000600161206e846121b5565b01905060008167ffffffffffffffff81111561208d5761208c6135b5565b5b6040519080825280601f01601f1916602001820160405280156120bf5781602001600182028036833780820191505090505b509050600082602001820190505b60011561212c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581612116576121156134f9565b5b04945060008514156121275761212c565b6120cd565b819350505050919050565b6121418383612308565b61214e6000848484611ec8565b61218d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218490612fc8565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612213577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381612209576122086134f9565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612250576d04ee2d6d415b85acef81000000008381612246576122456134f9565b5b0492506020810190505b662386f26fc10000831061227f57662386f26fc100008381612275576122746134f9565b5b0492506010810190505b6305f5e10083106122a8576305f5e100838161229e5761229d6134f9565b5b0492506008810190505b61271083106122cd5761271083816122c3576122c26134f9565b5b0492506004810190505b606483106122f057606483816122e6576122e56134f9565b5b0492506002810190505b600a83106122ff576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161236f906130c8565b60405180910390fd5b61238181611de9565b156123c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123b890613028565b60405180910390fd5b6123cf600083836001611ebc565b6123d881611de9565b15612418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240f90613028565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4612522600083836001611ec2565b5050565b6040518060600160405280600390602082028036833780820191505090505090565b828054612554906133ed565b90600052602060002090601f01602090048101928261257657600085556125bd565b82601f1061258f57805160ff19168380011785556125bd565b828001600101855582156125bd579182015b828111156125bc5782518255916020019190600101906125a1565b5b5090506125ca91906125ce565b5090565b5b808211156125e75760008160009055506001016125cf565b5090565b60006125fe6125f9846131a8565b613183565b90508083825260208201905082856020860282011115612621576126206135e9565b5b60005b858110156126515781612637888261274d565b845260208401935060208301925050600181019050612624565b5050509392505050565b600061266e612669846131d4565b613183565b90508281526020810184848401111561268a576126896135ee565b5b6126958482856133ab565b509392505050565b6000813590506126ac816139b9565b92915050565b600082601f8301126126c7576126c66135e4565b5b81356126d78482602086016125eb565b91505092915050565b6000813590506126ef816139d0565b92915050565b600081359050612704816139e7565b92915050565b600081519050612719816139e7565b92915050565b600082601f830112612734576127336135e4565b5b813561274484826020860161265b565b91505092915050565b60008135905061275c816139fe565b92915050565b600081519050612771816139fe565b92915050565b60006020828403121561278d5761278c6135f8565b5b600061279b8482850161269d565b91505092915050565b600080604083850312156127bb576127ba6135f8565b5b60006127c98582860161269d565b92505060206127da8582860161269d565b9150509250929050565b6000806000606084860312156127fd576127fc6135f8565b5b600061280b8682870161269d565b935050602061281c8682870161269d565b925050604061282d8682870161274d565b9150509250925092565b60008060008060808587031215612851576128506135f8565b5b600061285f8782880161269d565b94505060206128708782880161269d565b93505060406128818782880161274d565b925050606085013567ffffffffffffffff8111156128a2576128a16135f3565b5b6128ae8782880161271f565b91505092959194509250565b600080604083850312156128d1576128d06135f8565b5b60006128df8582860161269d565b92505060206128f0858286016126e0565b9150509250929050565b60008060408385031215612911576129106135f8565b5b600061291f8582860161269d565b92505060206129308582860161274d565b9150509250929050565b6000602082840312156129505761294f6135f8565b5b600061295e848285016126f5565b91505092915050565b60006020828403121561297d5761297c6135f8565b5b600061298b8482850161270a565b91505092915050565b6000602082840312156129aa576129a96135f8565b5b60006129b88482850161274d565b91505092915050565b6000602082840312156129d7576129d66135f8565b5b60006129e584828501612762565b91505092915050565b60008060408385031215612a0557612a046135f8565b5b6000612a138582860161274d565b925050602083013567ffffffffffffffff811115612a3457612a336135f3565b5b612a40858286016126b2565b9150509250929050565b6000612a568383612db4565b60208301905092915050565b612a6b816132d6565b82525050565b612a7a8161320f565b612a84818461323d565b9250612a8f82613205565b8060005b83811015612ac0578151612aa78782612a4a565b9650612ab283613230565b925050600181019050612a93565b505050505050565b612ad1816132e8565b82525050565b612ae0816132f4565b82525050565b6000612af18261321a565b612afb8185613248565b9350612b0b8185602086016133ba565b612b14816135fd565b840191505092915050565b612b2881613399565b82525050565b6000612b3982613225565b612b438185613264565b9350612b538185602086016133ba565b612b5c816135fd565b840191505092915050565b6000612b7282613225565b612b7c8185613275565b9350612b8c8185602086016133ba565b80840191505092915050565b6000612ba5602d83613264565b9150612bb08261360e565b604082019050919050565b6000612bc8603283613264565b9150612bd38261365d565b604082019050919050565b6000612beb602683613264565b9150612bf6826136ac565b604082019050919050565b6000612c0e602583613264565b9150612c19826136fb565b604082019050919050565b6000612c31601c83613264565b9150612c3c8261374a565b602082019050919050565b6000612c54602483613264565b9150612c5f82613773565b604082019050919050565b6000612c77601983613264565b9150612c82826137c2565b602082019050919050565b6000612c9a602983613264565b9150612ca5826137eb565b604082019050919050565b6000612cbd602e83613264565b9150612cc88261383a565b604082019050919050565b6000612ce0602083613264565b9150612ceb82613889565b602082019050919050565b6000612d03602083613264565b9150612d0e826138b2565b602082019050919050565b6000612d26601883613264565b9150612d31826138db565b602082019050919050565b6000612d49602183613264565b9150612d5482613904565b604082019050919050565b6000612d6c600083613259565b9150612d7782613953565b600082019050919050565b6000612d8f603d83613264565b9150612d9a82613956565b604082019050919050565b612dae8161333d565b82525050565b612dbd8161336b565b82525050565b612dcc8161336b565b82525050565b612ddb81613375565b82525050565b612dea81613385565b82525050565b6000612dfc8285612b67565b9150612e088284612b67565b91508190509392505050565b6000612e1f82612d5f565b9150819050919050565b6000602082019050612e3e6000830184612a62565b92915050565b6000604082019050612e596000830185612a62565b612e666020830184612a62565b9392505050565b6000608082019050612e826000830187612a62565b612e8f6020830186612a62565b612e9c6040830185612dc3565b8181036060830152612eae8184612ae6565b905095945050505050565b6000606082019050612ece6000830184612a71565b92915050565b6000602082019050612ee96000830184612ac8565b92915050565b600060a082019050612f046000830188612ad7565b612f116020830187612de1565b612f1e6040830186612da5565b612f2b6060830185612dd2565b612f386080830184612dd2565b9695505050505050565b6000602082019050612f576000830184612b1f565b92915050565b6000604082019050612f726000830185612b1f565b612f7f6020830184612a62565b9392505050565b60006020820190508181036000830152612fa08184612b2e565b905092915050565b60006020820190508181036000830152612fc181612b98565b9050919050565b60006020820190508181036000830152612fe181612bbb565b9050919050565b6000602082019050818103600083015261300181612bde565b9050919050565b6000602082019050818103600083015261302181612c01565b9050919050565b6000602082019050818103600083015261304181612c24565b9050919050565b6000602082019050818103600083015261306181612c47565b9050919050565b6000602082019050818103600083015261308181612c6a565b9050919050565b600060208201905081810360008301526130a181612c8d565b9050919050565b600060208201905081810360008301526130c181612cb0565b9050919050565b600060208201905081810360008301526130e181612cd3565b9050919050565b6000602082019050818103600083015261310181612cf6565b9050919050565b6000602082019050818103600083015261312181612d19565b9050919050565b6000602082019050818103600083015261314181612d3c565b9050919050565b6000602082019050818103600083015261316181612d82565b9050919050565b600060208201905061317d6000830184612dc3565b92915050565b600061318d61319e565b9050613199828261341f565b919050565b6000604051905090565b600067ffffffffffffffff8211156131c3576131c26135b5565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156131ef576131ee6135b5565b5b6131f8826135fd565b9050602081019050919050565b6000819050919050565b600060039050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061328b8261336b565b91506132968361336b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156132cb576132ca6134ca565b5b828201905092915050565b60006132e18261334b565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050613338826139a5565b919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60006133a48261332a565b9050919050565b82818337600083830152505050565b60005b838110156133d85780820151818401526020810190506133bd565b838111156133e7576000848401525b50505050565b6000600282049050600182168061340557607f821691505b6020821081141561341957613418613557565b5b50919050565b613428826135fd565b810181811067ffffffffffffffff82111715613447576134466135b5565b5b80604052505050565b600061345b8261336b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561348e5761348d6134ca565b5b600182019050919050565b60006134a48261336b565b91506134af8361336b565b9250826134bf576134be6134f9565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b50565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b600381106139b6576139b5613528565b5b50565b6139c2816132d6565b81146139cd57600080fd5b50565b6139d9816132e8565b81146139e457600080fd5b50565b6139f0816132fe565b81146139fb57600080fd5b50565b613a078161336b565b8114613a1257600080fd5b5056fea264697066735822122061c20ec9c3a7a415022ac0f0b748007abe0beeefb2c4697451b336415d248c0c64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x166 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA51CCCF3 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0xF4EB69C3 EQ PUSH2 0x5C0 JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0xA51CCCF3 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x4F4 JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xA36F573B EQ PUSH2 0x45C JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35E JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x262 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x2ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2F86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x28FA JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x9EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x348 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x3168 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x2777 JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x3168 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B0 PUSH2 0xC37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x3168 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41D PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x2F86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x28BA JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x2F42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DE PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x3168 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x2837 JUMP JUMPDEST PUSH2 0x1044 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x544 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x2F86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x581 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58E SWAP2 SWAP1 PUSH2 0x2ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x2777 JUMP JUMPDEST PUSH2 0x124D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH2 0x12D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x2F86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6C8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x6D8 JUMPI POP PUSH2 0x6D7 DUP3 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71A SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x767 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x767 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP3 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x3128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x852 PUSH2 0x1436 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x881 JUMPI POP PUSH2 0x880 DUP2 PUSH2 0x87B PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP1 PUSH2 0x3148 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA DUP4 DUP4 PUSH2 0x143E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x981 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP3 SWAP2 SWAP1 PUSH2 0x2E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98B DUP3 DUP3 PUSH2 0x14F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9A0 PUSH2 0x99A PUSH2 0x1436 JUMP JUMPDEST DUP3 PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP1 PUSH2 0x2FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EA DUP4 DUP4 DUP4 PUSH2 0x1726 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9F7 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xA22 SWAP1 PUSH2 0x2E14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA5F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA7E25B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xABE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1044 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xACB PUSH2 0x2526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAFA DUP4 PUSH2 0x1A9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB63 SWAP1 PUSH2 0x3108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE7 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3F PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0xC49 PUSH1 0x0 PUSH2 0x1ADB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xCAC SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCD8 SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD25 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCFA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD25 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD08 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD41 PUSH2 0xD3A PUSH2 0x1436 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1BA1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0xD89 PUSH2 0xAC3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xE0C JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0xDBD JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xDB5 JUMPI PUSH2 0xDB4 PUSH2 0x3586 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 LT JUMPDEST ISZERO PUSH2 0xDDF JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDD5 JUMPI PUSH2 0xDD4 PUSH2 0x3528 JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xE3F JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xDF2 JUMPI PUSH2 0xDF1 PUSH2 0x3586 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP3 POP DUP1 DUP1 PUSH2 0xE04 SWAP1 PUSH2 0x3450 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD8E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x12806C9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB90F491000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF63 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EEF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB5 SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xF873236E6CC0ECC5BE1A9A35C95EE5B8D1AC4CC7BFEF0CC5060391D6CC98E26B CALLER PUSH1 0x40 MLOAD PUSH2 0x1039 SWAP2 SWAP1 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x1055 PUSH2 0x104F PUSH2 0x1436 JUMP JUMPDEST DUP4 PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x1094 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108B SWAP1 PUSH2 0x2FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10A0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1D0E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10B1 DUP3 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x10D1 SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10FD SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x114A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x111F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x114A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x112D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x115B PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1171 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x11A6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x118E SWAP3 SWAP2 SWAP1 PUSH2 0x2DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x11AF DUP5 PUSH2 0x1D81 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1255 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BC SWAP1 PUSH2 0x2FE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12CE DUP2 PUSH2 0x1ADB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12E7 JUMPI PUSH2 0x12E6 PUSH2 0x3586 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x12FC SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1328 SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1375 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x134A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1375 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1358 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F4 DUP2 PUSH2 0x1DE9 JUMP JUMPDEST PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142A SWAP1 PUSH2 0x3108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14B1 DUP4 PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x8 SLOAD PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x3280 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1563 JUMPI PUSH2 0x1562 PUSH2 0x3586 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1575 SWAP2 SWAP1 PUSH2 0x3499 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1582 DUP3 PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP PUSH2 0x158E DUP5 DUP5 PUSH2 0x1E2A JUMP JUMPDEST PUSH2 0x1650 DUP4 PUSH1 0x9 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x3528 JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15B8 JUMPI PUSH2 0x15B7 PUSH2 0x3586 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x15CD SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15F9 SWAP1 PUSH2 0x33ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1646 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x161B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1646 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1629 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1E48 JUMP JUMPDEST PUSH32 0x8A269F26B688E110E9CBD887D163DAB35CAE678FA353A0292DE532C0CAC1ECDC DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1681 SWAP3 SWAP2 SWAP1 PUSH2 0x2F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x169D DUP4 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16DF JUMPI POP PUSH2 0x16DE DUP2 DUP6 PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x171D JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1705 DUP5 PUSH2 0x771 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1746 DUP3 PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x179C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1793 SWAP1 PUSH2 0x3008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x180C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1803 SWAP1 PUSH2 0x3048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1819 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EBC JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1839 DUP3 PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x188F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1886 SWAP1 PUSH2 0x3008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A1B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EC2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A28 PUSH2 0x1436 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A46 PUSH2 0xC73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A93 SWAP1 PUSH2 0x30E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C07 SWAP1 PUSH2 0x3068 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D01 SWAP2 SWAP1 PUSH2 0x2ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1D19 DUP5 DUP5 DUP5 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x1D25 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x1D64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5B SWAP1 PUSH2 0x2FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D8C DUP3 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D96 PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1DB6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DE1 JUMP JUMPDEST DUP1 PUSH2 0x1DC0 DUP5 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DD1 SWAP3 SWAP2 SWAP1 PUSH2 0x2DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E0B DUP4 PUSH2 0x1A9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E44 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2137 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E51 DUP3 PUSH2 0x1DE9 JUMP JUMPDEST PUSH2 0x1E90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E87 SWAP1 PUSH2 0x30A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1EB7 SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE9 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2192 JUMP JUMPDEST ISZERO PUSH2 0x2052 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1F12 PUSH2 0x1436 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F34 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1F7F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F7C SWAP2 SWAP1 PUSH2 0x2967 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2002 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FAF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1FFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF1 SWAP1 PUSH2 0x2FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2057 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x206E DUP5 PUSH2 0x21B5 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x208D JUMPI PUSH2 0x208C PUSH2 0x35B5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20BF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x212C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2116 JUMPI PUSH2 0x2115 PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x2127 JUMPI PUSH2 0x212C JUMP JUMPDEST PUSH2 0x20CD JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2141 DUP4 DUP4 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x214E PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x218D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2184 SWAP1 PUSH2 0x2FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2213 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2209 JUMPI PUSH2 0x2208 PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2250 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2246 JUMPI PUSH2 0x2245 PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x227F JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2275 JUMPI PUSH2 0x2274 PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x22A8 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x229E JUMPI PUSH2 0x229D PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x22CD JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x22C3 JUMPI PUSH2 0x22C2 PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x22F0 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x22E6 JUMPI PUSH2 0x22E5 PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x22FF JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x236F SWAP1 PUSH2 0x30C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2381 DUP2 PUSH2 0x1DE9 JUMP JUMPDEST ISZERO PUSH2 0x23C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B8 SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23CF PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0x23D8 DUP2 PUSH2 0x1DE9 JUMP JUMPDEST ISZERO PUSH2 0x2418 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x240F SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2522 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EC2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2554 SWAP1 PUSH2 0x33ED JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2576 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x25BD JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x258F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x25BD JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x25BD JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x25BC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x25A1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x25CA SWAP2 SWAP1 PUSH2 0x25CE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x25E7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x25CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25FE PUSH2 0x25F9 DUP5 PUSH2 0x31A8 JUMP JUMPDEST PUSH2 0x3183 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2621 JUMPI PUSH2 0x2620 PUSH2 0x35E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2651 JUMPI DUP2 PUSH2 0x2637 DUP9 DUP3 PUSH2 0x274D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2624 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266E PUSH2 0x2669 DUP5 PUSH2 0x31D4 JUMP JUMPDEST PUSH2 0x3183 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x268A JUMPI PUSH2 0x2689 PUSH2 0x35EE JUMP JUMPDEST JUMPDEST PUSH2 0x2695 DUP5 DUP3 DUP6 PUSH2 0x33AB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26AC DUP2 PUSH2 0x39B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26C7 JUMPI PUSH2 0x26C6 PUSH2 0x35E4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26D7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26EF DUP2 PUSH2 0x39D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2704 DUP2 PUSH2 0x39E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2719 DUP2 PUSH2 0x39E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2734 JUMPI PUSH2 0x2733 PUSH2 0x35E4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2744 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x265B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x275C DUP2 PUSH2 0x39FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2771 DUP2 PUSH2 0x39FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x278D JUMPI PUSH2 0x278C PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x279B DUP5 DUP3 DUP6 ADD PUSH2 0x269D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27C9 DUP6 DUP3 DUP7 ADD PUSH2 0x269D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27DA DUP6 DUP3 DUP7 ADD PUSH2 0x269D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27FD JUMPI PUSH2 0x27FC PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x280B DUP7 DUP3 DUP8 ADD PUSH2 0x269D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x281C DUP7 DUP3 DUP8 ADD PUSH2 0x269D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x282D DUP7 DUP3 DUP8 ADD PUSH2 0x274D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2851 JUMPI PUSH2 0x2850 PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x285F DUP8 DUP3 DUP9 ADD PUSH2 0x269D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2870 DUP8 DUP3 DUP9 ADD PUSH2 0x269D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2881 DUP8 DUP3 DUP9 ADD PUSH2 0x274D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28A2 JUMPI PUSH2 0x28A1 PUSH2 0x35F3 JUMP JUMPDEST JUMPDEST PUSH2 0x28AE DUP8 DUP3 DUP9 ADD PUSH2 0x271F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28D1 JUMPI PUSH2 0x28D0 PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28DF DUP6 DUP3 DUP7 ADD PUSH2 0x269D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28F0 DUP6 DUP3 DUP7 ADD PUSH2 0x26E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2911 JUMPI PUSH2 0x2910 PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x291F DUP6 DUP3 DUP7 ADD PUSH2 0x269D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2930 DUP6 DUP3 DUP7 ADD PUSH2 0x274D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2950 JUMPI PUSH2 0x294F PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x295E DUP5 DUP3 DUP6 ADD PUSH2 0x26F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x297D JUMPI PUSH2 0x297C PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x298B DUP5 DUP3 DUP6 ADD PUSH2 0x270A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29AA JUMPI PUSH2 0x29A9 PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29B8 DUP5 DUP3 DUP6 ADD PUSH2 0x274D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29D7 JUMPI PUSH2 0x29D6 PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29E5 DUP5 DUP3 DUP6 ADD PUSH2 0x2762 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A05 JUMPI PUSH2 0x2A04 PUSH2 0x35F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A13 DUP6 DUP3 DUP7 ADD PUSH2 0x274D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A34 JUMPI PUSH2 0x2A33 PUSH2 0x35F3 JUMP JUMPDEST JUMPDEST PUSH2 0x2A40 DUP6 DUP3 DUP7 ADD PUSH2 0x26B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A56 DUP4 DUP4 PUSH2 0x2DB4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A6B DUP2 PUSH2 0x32D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2A7A DUP2 PUSH2 0x320F JUMP JUMPDEST PUSH2 0x2A84 DUP2 DUP5 PUSH2 0x323D JUMP JUMPDEST SWAP3 POP PUSH2 0x2A8F DUP3 PUSH2 0x3205 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AC0 JUMPI DUP2 MLOAD PUSH2 0x2AA7 DUP8 DUP3 PUSH2 0x2A4A JUMP JUMPDEST SWAP7 POP PUSH2 0x2AB2 DUP4 PUSH2 0x3230 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A93 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2AD1 DUP2 PUSH2 0x32E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2AE0 DUP2 PUSH2 0x32F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF1 DUP3 PUSH2 0x321A JUMP JUMPDEST PUSH2 0x2AFB DUP2 DUP6 PUSH2 0x3248 JUMP JUMPDEST SWAP4 POP PUSH2 0x2B0B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33BA JUMP JUMPDEST PUSH2 0x2B14 DUP2 PUSH2 0x35FD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B28 DUP2 PUSH2 0x3399 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B39 DUP3 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x2B43 DUP2 DUP6 PUSH2 0x3264 JUMP JUMPDEST SWAP4 POP PUSH2 0x2B53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33BA JUMP JUMPDEST PUSH2 0x2B5C DUP2 PUSH2 0x35FD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B72 DUP3 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x2B7C DUP2 DUP6 PUSH2 0x3275 JUMP JUMPDEST SWAP4 POP PUSH2 0x2B8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33BA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA5 PUSH1 0x2D DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BB0 DUP3 PUSH2 0x360E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC8 PUSH1 0x32 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BD3 DUP3 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BEB PUSH1 0x26 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BF6 DUP3 PUSH2 0x36AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0E PUSH1 0x25 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C19 DUP3 PUSH2 0x36FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C31 PUSH1 0x1C DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C3C DUP3 PUSH2 0x374A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C54 PUSH1 0x24 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C5F DUP3 PUSH2 0x3773 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C77 PUSH1 0x19 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C82 DUP3 PUSH2 0x37C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C9A PUSH1 0x29 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA5 DUP3 PUSH2 0x37EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CBD PUSH1 0x2E DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CC8 DUP3 PUSH2 0x383A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE0 PUSH1 0x20 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEB DUP3 PUSH2 0x3889 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D03 PUSH1 0x20 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0E DUP3 PUSH2 0x38B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D26 PUSH1 0x18 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D31 DUP3 PUSH2 0x38DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D49 PUSH1 0x21 DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D54 DUP3 PUSH2 0x3904 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D6C PUSH1 0x0 DUP4 PUSH2 0x3259 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D77 DUP3 PUSH2 0x3953 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D8F PUSH1 0x3D DUP4 PUSH2 0x3264 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D9A DUP3 PUSH2 0x3956 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DAE DUP2 PUSH2 0x333D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DBD DUP2 PUSH2 0x336B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DCC DUP2 PUSH2 0x336B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DDB DUP2 PUSH2 0x3375 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DEA DUP2 PUSH2 0x3385 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DFC DUP3 DUP6 PUSH2 0x2B67 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E08 DUP3 DUP5 PUSH2 0x2B67 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1F DUP3 PUSH2 0x2D5F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E3E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E59 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0x2E66 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A62 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2E82 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0x2E8F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0x2E9C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2DC3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2EAE DUP2 DUP5 PUSH2 0x2AE6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2ECE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EE9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2F04 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x2F11 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2DE1 JUMP JUMPDEST PUSH2 0x2F1E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2DA5 JUMP JUMPDEST PUSH2 0x2F2B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2DD2 JUMP JUMPDEST PUSH2 0x2F38 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2DD2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F72 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B1F JUMP JUMPDEST PUSH2 0x2F7F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A62 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FA0 DUP2 DUP5 PUSH2 0x2B2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FC1 DUP2 PUSH2 0x2B98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FE1 DUP2 PUSH2 0x2BBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3001 DUP2 PUSH2 0x2BDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3021 DUP2 PUSH2 0x2C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3041 DUP2 PUSH2 0x2C24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3061 DUP2 PUSH2 0x2C47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3081 DUP2 PUSH2 0x2C6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30A1 DUP2 PUSH2 0x2C8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30C1 DUP2 PUSH2 0x2CB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30E1 DUP2 PUSH2 0x2CD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3101 DUP2 PUSH2 0x2CF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3121 DUP2 PUSH2 0x2D19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3141 DUP2 PUSH2 0x2D3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3161 DUP2 PUSH2 0x2D82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x317D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x318D PUSH2 0x319E JUMP JUMPDEST SWAP1 POP PUSH2 0x3199 DUP3 DUP3 PUSH2 0x341F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x31C3 JUMPI PUSH2 0x31C2 PUSH2 0x35B5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x31EF JUMPI PUSH2 0x31EE PUSH2 0x35B5 JUMP JUMPDEST JUMPDEST PUSH2 0x31F8 DUP3 PUSH2 0x35FD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328B DUP3 PUSH2 0x336B JUMP JUMPDEST SWAP2 POP PUSH2 0x3296 DUP4 PUSH2 0x336B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x32CB JUMPI PUSH2 0x32CA PUSH2 0x34CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E1 DUP3 PUSH2 0x334B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x3338 DUP3 PUSH2 0x39A5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A4 DUP3 PUSH2 0x332A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33D8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x33BD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x33E7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3405 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3419 JUMPI PUSH2 0x3418 PUSH2 0x3557 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3428 DUP3 PUSH2 0x35FD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3447 JUMPI PUSH2 0x3446 PUSH2 0x35B5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345B DUP3 PUSH2 0x336B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x348E JUMPI PUSH2 0x348D PUSH2 0x34CA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A4 DUP3 PUSH2 0x336B JUMP JUMPDEST SWAP2 POP PUSH2 0x34AF DUP4 PUSH2 0x336B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x34BF JUMPI PUSH2 0x34BE PUSH2 0x34F9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x39B6 JUMPI PUSH2 0x39B5 PUSH2 0x3528 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x39C2 DUP2 PUSH2 0x32D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x39CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x39D9 DUP2 PUSH2 0x32E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x39E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x39F0 DUP2 PUSH2 0x32FE JUMP JUMPDEST DUP2 EQ PUSH2 0x39FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3A07 DUP2 PUSH2 0x336B JUMP JUMPDEST DUP2 EQ PUSH2 0x3A12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xC20E 0xC9 0xC3 0xA7 LOG4 ISZERO MUL 0x2A 0xC0 CREATE 0xB7 BASEFEE STOP PUSH27 0xBE0BEEEFB2C4697451B336415D248C0C64736F6C63430008070033 ","sourceMap":"453:3887:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6618:256:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3039:250:17;;;;;;;;;;;;;:::i;:::-;;5004:179:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3903:116:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2190:219:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4243:95:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:4;;;;;;;;;;;;;:::i;:::-;;4025:85:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201::4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1304:54:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3314:583;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1911:485;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5249:314:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;482:608:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4116:121:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300:5;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;6618:256:0:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;4612:326:5:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;3039:250:17:-;1094:13:4;:11;:13::i;:::-;3086:14:17::1;3103:21;3086:38;;3135:12;3161:10;3153:24;;3185:6;3153:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3134:62;;;3211:7;3206:77;;3241:31;;;;;;;;;;;;;;3206:77;3076:213;;3039:250::o:0;5004:179:5:-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;3903:116:17:-;3950:17;;:::i;:::-;3979:33;;;;;;;;3987:2;3979:33;;;;3991:2;3979:33;;;;1060:3;3979:33;;;;;3903:116;:::o;2190:219:5:-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;4243:95:17:-;4291:7;4317:14;;4310:21;;4243:95;:::o;1929:204:5:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;1831:101:4:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4025:85:17:-;4068:7;4094:9;4087:16;;4025:85;:::o;1201::4:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2633:102:5:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;1304:54:17:-;;;;;;;;;;;;;;;;;;;;;;:::o;3314:583::-;3385:5;3402:21;3426:1;3402:25;;3437:29;3469:16;:14;:16::i;:::-;3437:48;;3500:9;3495:346;3519:18;3515:1;:22;3495:346;;;3694:13;3681:9;:26;;:56;;;;;3723:11;3735:1;3723:14;;;;;;;:::i;:::-;;;;;;3711:9;:26;3681:56;3677:110;;;3770:1;3764:8;;;;;;;;:::i;:::-;;3757:15;;;;;;;3677:110;3816:11;3828:1;3816:14;;;;;;;:::i;:::-;;;;;;3800:30;;3539:3;;;;;:::i;:::-;;;;3495:346;;;;3857:33;;;;;;;;;;;;;;3314:583;;;;:::o;1911:485::-;1957:17;2002:9;1990;:21;1986:91;;;2034:32;;;;;;;;;;;;;;1986:91;2098:16;:35;;;2147:9;2170:16;908:1;2235:18;951:1;2098:188;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2086:200;;2329:10;2296:19;:30;2316:9;2296:30;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;2367:9;2354:35;2378:10;2354:35;;;;;;:::i;:::-;;;;;;;;1911:485;:::o;5249:314:5:-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;482:608:8:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:10;:19;651:7;640:19;;;;;;;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;:8;:10::i;:::-;669:31;;795:1;779:4;773:18;:23;769:70;;;819:9;812:16;;;;;;769:70;967:1;947:9;941:23;:27;937:106;;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;;;937:106;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;;;;482:608;;;;:::o;4388:162:5:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;2081:198:4:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;4116:121:17:-;4177:13;4209:14;4224:5;4209:21;;;;;;;;:::i;:::-;;;;;;;;;4202:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4116:121;;;:::o;829:155:13:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:5:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:11:-;693:7;719:10;712:17;;640:96;:::o;12768:171:5:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;2402:631:17:-;2507:16;2526:19;:30;2546:9;2526:30;;;;;;;;;;;;;;;;;;;;;2507:49;;2566:18;2587:14;;2566:35;;2645:1;2628:14;;:18;;;;:::i;:::-;2611:14;:35;;;;2698:17;1060:3;2718:11;2730:1;2718:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;2698:53;;2822:14;2839:32;2861:9;2839:21;:32::i;:::-;2822:49;;2882:31;2892:8;2902:10;2882:9;:31::i;:::-;2923:59;2936:10;2948:14;2971:8;2963:17;;;;;;;;:::i;:::-;;2948:33;;;;;;;;:::i;:::-;;;;;;;;;2923:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:59::i;:::-;2997:29;3007:8;3017;2997:29;;;;;;;:::i;:::-;;;;;;;;2497:536;;;;2402:631;;:::o;7540:261:5:-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;1359:130:4:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;6838:115:5:-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;2433:187:4:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;13075:307:5:-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;7256:126::-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;1237:214:8:-;1336:16;1344:7;1336;:16::i;:::-;1328:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1435:9;1413:10;:19;1424:7;1413:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1237:214;;:::o;15698:154:5:-;;;;;:::o;16558:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;415:696:12:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;8460:309:5:-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;1175:320:10:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;9889:890:15:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;9091:920:5:-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;24:722:19:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:410::-;829:5;854:65;870:48;911:6;870:48;:::i;:::-;854:65;:::i;:::-;845:74;;942:6;935:5;928:21;980:4;973:5;969:16;1018:3;1009:6;1004:3;1000:16;997:25;994:112;;;1025:79;;:::i;:::-;994:112;1115:41;1149:6;1144:3;1139;1115:41;:::i;:::-;835:327;752:410;;;;;:::o;1168:139::-;1214:5;1252:6;1239:20;1230:29;;1268:33;1295:5;1268:33;:::i;:::-;1168:139;;;;:::o;1330:370::-;1401:5;1450:3;1443:4;1435:6;1431:17;1427:27;1417:122;;1458:79;;:::i;:::-;1417:122;1575:6;1562:20;1600:94;1690:3;1682:6;1675:4;1667:6;1663:17;1600:94;:::i;:::-;1591:103;;1407:293;1330:370;;;;:::o;1706:133::-;1749:5;1787:6;1774:20;1765:29;;1803:30;1827:5;1803:30;:::i;:::-;1706:133;;;;:::o;1845:137::-;1890:5;1928:6;1915:20;1906:29;;1944:32;1970:5;1944:32;:::i;:::-;1845:137;;;;:::o;1988:141::-;2044:5;2075:6;2069:13;2060:22;;2091:32;2117:5;2091:32;:::i;:::-;1988:141;;;;:::o;2148:338::-;2203:5;2252:3;2245:4;2237:6;2233:17;2229:27;2219:122;;2260:79;;:::i;:::-;2219:122;2377:6;2364:20;2402:78;2476:3;2468:6;2461:4;2453:6;2449:17;2402:78;:::i;:::-;2393:87;;2209:277;2148:338;;;;:::o;2492:139::-;2538:5;2576:6;2563:20;2554:29;;2592:33;2619:5;2592:33;:::i;:::-;2492:139;;;;:::o;2637:143::-;2694:5;2725:6;2719:13;2710:22;;2741:33;2768:5;2741:33;:::i;:::-;2637:143;;;;:::o;2786:329::-;2845:6;2894:2;2882:9;2873:7;2869:23;2865:32;2862:119;;;2900:79;;:::i;:::-;2862:119;3020:1;3045:53;3090:7;3081:6;3070:9;3066:22;3045:53;:::i;:::-;3035:63;;2991:117;2786:329;;;;:::o;3121:474::-;3189:6;3197;3246:2;3234:9;3225:7;3221:23;3217:32;3214:119;;;3252:79;;:::i;:::-;3214:119;3372:1;3397:53;3442:7;3433:6;3422:9;3418:22;3397:53;:::i;:::-;3387:63;;3343:117;3499:2;3525:53;3570:7;3561:6;3550:9;3546:22;3525:53;:::i;:::-;3515:63;;3470:118;3121:474;;;;;:::o;3601:619::-;3678:6;3686;3694;3743:2;3731:9;3722:7;3718:23;3714:32;3711:119;;;3749:79;;:::i;:::-;3711:119;3869:1;3894:53;3939:7;3930:6;3919:9;3915:22;3894:53;:::i;:::-;3884:63;;3840:117;3996:2;4022:53;4067:7;4058:6;4047:9;4043:22;4022:53;:::i;:::-;4012:63;;3967:118;4124:2;4150:53;4195:7;4186:6;4175:9;4171:22;4150:53;:::i;:::-;4140:63;;4095:118;3601:619;;;;;:::o;4226:943::-;4321:6;4329;4337;4345;4394:3;4382:9;4373:7;4369:23;4365:33;4362:120;;;4401:79;;:::i;:::-;4362:120;4521:1;4546:53;4591:7;4582:6;4571:9;4567:22;4546:53;:::i;:::-;4536:63;;4492:117;4648:2;4674:53;4719:7;4710:6;4699:9;4695:22;4674:53;:::i;:::-;4664:63;;4619:118;4776:2;4802:53;4847:7;4838:6;4827:9;4823:22;4802:53;:::i;:::-;4792:63;;4747:118;4932:2;4921:9;4917:18;4904:32;4963:18;4955:6;4952:30;4949:117;;;4985:79;;:::i;:::-;4949:117;5090:62;5144:7;5135:6;5124:9;5120:22;5090:62;:::i;:::-;5080:72;;4875:287;4226:943;;;;;;;:::o;5175:468::-;5240:6;5248;5297:2;5285:9;5276:7;5272:23;5268:32;5265:119;;;5303:79;;:::i;:::-;5265:119;5423:1;5448:53;5493:7;5484:6;5473:9;5469:22;5448:53;:::i;:::-;5438:63;;5394:117;5550:2;5576:50;5618:7;5609:6;5598:9;5594:22;5576:50;:::i;:::-;5566:60;;5521:115;5175:468;;;;;:::o;5649:474::-;5717:6;5725;5774:2;5762:9;5753:7;5749:23;5745:32;5742:119;;;5780:79;;:::i;:::-;5742:119;5900:1;5925:53;5970:7;5961:6;5950:9;5946:22;5925:53;:::i;:::-;5915:63;;5871:117;6027:2;6053:53;6098:7;6089:6;6078:9;6074:22;6053:53;:::i;:::-;6043:63;;5998:118;5649:474;;;;;:::o;6129:327::-;6187:6;6236:2;6224:9;6215:7;6211:23;6207:32;6204:119;;;6242:79;;:::i;:::-;6204:119;6362:1;6387:52;6431:7;6422:6;6411:9;6407:22;6387:52;:::i;:::-;6377:62;;6333:116;6129:327;;;;:::o;6462:349::-;6531:6;6580:2;6568:9;6559:7;6555:23;6551:32;6548:119;;;6586:79;;:::i;:::-;6548:119;6706:1;6731:63;6786:7;6777:6;6766:9;6762:22;6731:63;:::i;:::-;6721:73;;6677:127;6462:349;;;;:::o;6817:329::-;6876:6;6925:2;6913:9;6904:7;6900:23;6896:32;6893:119;;;6931:79;;:::i;:::-;6893:119;7051:1;7076:53;7121:7;7112:6;7101:9;7097:22;7076:53;:::i;:::-;7066:63;;7022:117;6817:329;;;;:::o;7152:351::-;7222:6;7271:2;7259:9;7250:7;7246:23;7242:32;7239:119;;;7277:79;;:::i;:::-;7239:119;7397:1;7422:64;7478:7;7469:6;7458:9;7454:22;7422:64;:::i;:::-;7412:74;;7368:128;7152:351;;;;:::o;7509:684::-;7602:6;7610;7659:2;7647:9;7638:7;7634:23;7630:32;7627:119;;;7665:79;;:::i;:::-;7627:119;7785:1;7810:53;7855:7;7846:6;7835:9;7831:22;7810:53;:::i;:::-;7800:63;;7756:117;7940:2;7929:9;7925:18;7912:32;7971:18;7963:6;7960:30;7957:117;;;7993:79;;:::i;:::-;7957:117;8098:78;8168:7;8159:6;8148:9;8144:22;8098:78;:::i;:::-;8088:88;;7883:303;7509:684;;;;;:::o;8199:179::-;8268:10;8289:46;8331:3;8323:6;8289:46;:::i;:::-;8367:4;8362:3;8358:14;8344:28;;8199:179;;;;:::o;8384:118::-;8471:24;8489:5;8471:24;:::i;:::-;8466:3;8459:37;8384:118;;:::o;8540:694::-;8676:52;8722:5;8676:52;:::i;:::-;8744:84;8821:6;8816:3;8744:84;:::i;:::-;8737:91;;8852:54;8900:5;8852:54;:::i;:::-;8929:7;8960:1;8945:282;8970:6;8967:1;8964:13;8945:282;;;9046:6;9040:13;9073:63;9132:3;9117:13;9073:63;:::i;:::-;9066:70;;9159:58;9210:6;9159:58;:::i;:::-;9149:68;;9005:222;8992:1;8989;8985:9;8980:14;;8945:282;;;8949:14;8652:582;;;8540:694;;:::o;9240:109::-;9321:21;9336:5;9321:21;:::i;:::-;9316:3;9309:34;9240:109;;:::o;9355:118::-;9442:24;9460:5;9442:24;:::i;:::-;9437:3;9430:37;9355:118;;:::o;9479:360::-;9565:3;9593:38;9625:5;9593:38;:::i;:::-;9647:70;9710:6;9705:3;9647:70;:::i;:::-;9640:77;;9726:52;9771:6;9766:3;9759:4;9752:5;9748:16;9726:52;:::i;:::-;9803:29;9825:6;9803:29;:::i;:::-;9798:3;9794:39;9787:46;;9569:270;9479:360;;;;:::o;9845:147::-;9940:45;9979:5;9940:45;:::i;:::-;9935:3;9928:58;9845:147;;:::o;9998:364::-;10086:3;10114:39;10147:5;10114:39;:::i;:::-;10169:71;10233:6;10228:3;10169:71;:::i;:::-;10162:78;;10249:52;10294:6;10289:3;10282:4;10275:5;10271:16;10249:52;:::i;:::-;10326:29;10348:6;10326:29;:::i;:::-;10321:3;10317:39;10310:46;;10090:272;9998:364;;;;:::o;10368:377::-;10474:3;10502:39;10535:5;10502:39;:::i;:::-;10557:89;10639:6;10634:3;10557:89;:::i;:::-;10550:96;;10655:52;10700:6;10695:3;10688:4;10681:5;10677:16;10655:52;:::i;:::-;10732:6;10727:3;10723:16;10716:23;;10478:267;10368:377;;;;:::o;10751:366::-;10893:3;10914:67;10978:2;10973:3;10914:67;:::i;:::-;10907:74;;10990:93;11079:3;10990:93;:::i;:::-;11108:2;11103:3;11099:12;11092:19;;10751:366;;;:::o;11123:::-;11265:3;11286:67;11350:2;11345:3;11286:67;:::i;:::-;11279:74;;11362:93;11451:3;11362:93;:::i;:::-;11480:2;11475:3;11471:12;11464:19;;11123:366;;;:::o;11495:::-;11637:3;11658:67;11722:2;11717:3;11658:67;:::i;:::-;11651:74;;11734:93;11823:3;11734:93;:::i;:::-;11852:2;11847:3;11843:12;11836:19;;11495:366;;;:::o;11867:::-;12009:3;12030:67;12094:2;12089:3;12030:67;:::i;:::-;12023:74;;12106:93;12195:3;12106:93;:::i;:::-;12224:2;12219:3;12215:12;12208:19;;11867:366;;;:::o;12239:::-;12381:3;12402:67;12466:2;12461:3;12402:67;:::i;:::-;12395:74;;12478:93;12567:3;12478:93;:::i;:::-;12596:2;12591:3;12587:12;12580:19;;12239:366;;;:::o;12611:::-;12753:3;12774:67;12838:2;12833:3;12774:67;:::i;:::-;12767:74;;12850:93;12939:3;12850:93;:::i;:::-;12968:2;12963:3;12959:12;12952:19;;12611:366;;;:::o;12983:::-;13125:3;13146:67;13210:2;13205:3;13146:67;:::i;:::-;13139:74;;13222:93;13311:3;13222:93;:::i;:::-;13340:2;13335:3;13331:12;13324:19;;12983:366;;;:::o;13355:::-;13497:3;13518:67;13582:2;13577:3;13518:67;:::i;:::-;13511:74;;13594:93;13683:3;13594:93;:::i;:::-;13712:2;13707:3;13703:12;13696:19;;13355:366;;;:::o;13727:::-;13869:3;13890:67;13954:2;13949:3;13890:67;:::i;:::-;13883:74;;13966:93;14055:3;13966:93;:::i;:::-;14084:2;14079:3;14075:12;14068:19;;13727:366;;;:::o;14099:::-;14241:3;14262:67;14326:2;14321:3;14262:67;:::i;:::-;14255:74;;14338:93;14427:3;14338:93;:::i;:::-;14456:2;14451:3;14447:12;14440:19;;14099:366;;;:::o;14471:::-;14613:3;14634:67;14698:2;14693:3;14634:67;:::i;:::-;14627:74;;14710:93;14799:3;14710:93;:::i;:::-;14828:2;14823:3;14819:12;14812:19;;14471:366;;;:::o;14843:::-;14985:3;15006:67;15070:2;15065:3;15006:67;:::i;:::-;14999:74;;15082:93;15171:3;15082:93;:::i;:::-;15200:2;15195:3;15191:12;15184:19;;14843:366;;;:::o;15215:::-;15357:3;15378:67;15442:2;15437:3;15378:67;:::i;:::-;15371:74;;15454:93;15543:3;15454:93;:::i;:::-;15572:2;15567:3;15563:12;15556:19;;15215:366;;;:::o;15587:398::-;15746:3;15767:83;15848:1;15843:3;15767:83;:::i;:::-;15760:90;;15859:93;15948:3;15859:93;:::i;:::-;15977:1;15972:3;15968:11;15961:18;;15587:398;;;:::o;15991:366::-;16133:3;16154:67;16218:2;16213:3;16154:67;:::i;:::-;16147:74;;16230:93;16319:3;16230:93;:::i;:::-;16348:2;16343:3;16339:12;16332:19;;15991:366;;;:::o;16363:115::-;16448:23;16465:5;16448:23;:::i;:::-;16443:3;16436:36;16363:115;;:::o;16484:108::-;16561:24;16579:5;16561:24;:::i;:::-;16556:3;16549:37;16484:108;;:::o;16598:118::-;16685:24;16703:5;16685:24;:::i;:::-;16680:3;16673:37;16598:118;;:::o;16722:115::-;16807:23;16824:5;16807:23;:::i;:::-;16802:3;16795:36;16722:115;;:::o;16843:::-;16928:23;16945:5;16928:23;:::i;:::-;16923:3;16916:36;16843:115;;:::o;16964:435::-;17144:3;17166:95;17257:3;17248:6;17166:95;:::i;:::-;17159:102;;17278:95;17369:3;17360:6;17278:95;:::i;:::-;17271:102;;17390:3;17383:10;;16964:435;;;;;:::o;17405:379::-;17589:3;17611:147;17754:3;17611:147;:::i;:::-;17604:154;;17775:3;17768:10;;17405:379;;;:::o;17790:222::-;17883:4;17921:2;17910:9;17906:18;17898:26;;17934:71;18002:1;17991:9;17987:17;17978:6;17934:71;:::i;:::-;17790:222;;;;:::o;18018:332::-;18139:4;18177:2;18166:9;18162:18;18154:26;;18190:71;18258:1;18247:9;18243:17;18234:6;18190:71;:::i;:::-;18271:72;18339:2;18328:9;18324:18;18315:6;18271:72;:::i;:::-;18018:332;;;;;:::o;18356:640::-;18551:4;18589:3;18578:9;18574:19;18566:27;;18603:71;18671:1;18660:9;18656:17;18647:6;18603:71;:::i;:::-;18684:72;18752:2;18741:9;18737:18;18728:6;18684:72;:::i;:::-;18766;18834:2;18823:9;18819:18;18810:6;18766:72;:::i;:::-;18885:9;18879:4;18875:20;18870:2;18859:9;18855:18;18848:48;18913:76;18984:4;18975:6;18913:76;:::i;:::-;18905:84;;18356:640;;;;;;;:::o;19002:314::-;19141:4;19179:2;19168:9;19164:18;19156:26;;19192:117;19306:1;19295:9;19291:17;19282:6;19192:117;:::i;:::-;19002:314;;;;:::o;19322:210::-;19409:4;19447:2;19436:9;19432:18;19424:26;;19460:65;19522:1;19511:9;19507:17;19498:6;19460:65;:::i;:::-;19322:210;;;;:::o;19538:648::-;19735:4;19773:3;19762:9;19758:19;19750:27;;19787:71;19855:1;19844:9;19840:17;19831:6;19787:71;:::i;:::-;19868:70;19934:2;19923:9;19919:18;19910:6;19868:70;:::i;:::-;19948;20014:2;20003:9;19999:18;19990:6;19948:70;:::i;:::-;20028;20094:2;20083:9;20079:18;20070:6;20028:70;:::i;:::-;20108:71;20174:3;20163:9;20159:19;20150:6;20108:71;:::i;:::-;19538:648;;;;;;;;:::o;20192:238::-;20293:4;20331:2;20320:9;20316:18;20308:26;;20344:79;20420:1;20409:9;20405:17;20396:6;20344:79;:::i;:::-;20192:238;;;;:::o;20436:348::-;20565:4;20603:2;20592:9;20588:18;20580:26;;20616:79;20692:1;20681:9;20677:17;20668:6;20616:79;:::i;:::-;20705:72;20773:2;20762:9;20758:18;20749:6;20705:72;:::i;:::-;20436:348;;;;;:::o;20790:313::-;20903:4;20941:2;20930:9;20926:18;20918:26;;20990:9;20984:4;20980:20;20976:1;20965:9;20961:17;20954:47;21018:78;21091:4;21082:6;21018:78;:::i;:::-;21010:86;;20790:313;;;;:::o;21109:419::-;21275:4;21313:2;21302:9;21298:18;21290:26;;21362:9;21356:4;21352:20;21348:1;21337:9;21333:17;21326:47;21390:131;21516:4;21390:131;:::i;:::-;21382:139;;21109:419;;;:::o;21534:::-;21700:4;21738:2;21727:9;21723:18;21715:26;;21787:9;21781:4;21777:20;21773:1;21762:9;21758:17;21751:47;21815:131;21941:4;21815:131;:::i;:::-;21807:139;;21534:419;;;:::o;21959:::-;22125:4;22163:2;22152:9;22148:18;22140:26;;22212:9;22206:4;22202:20;22198:1;22187:9;22183:17;22176:47;22240:131;22366:4;22240:131;:::i;:::-;22232:139;;21959:419;;;:::o;22384:::-;22550:4;22588:2;22577:9;22573:18;22565:26;;22637:9;22631:4;22627:20;22623:1;22612:9;22608:17;22601:47;22665:131;22791:4;22665:131;:::i;:::-;22657:139;;22384:419;;;:::o;22809:::-;22975:4;23013:2;23002:9;22998:18;22990:26;;23062:9;23056:4;23052:20;23048:1;23037:9;23033:17;23026:47;23090:131;23216:4;23090:131;:::i;:::-;23082:139;;22809:419;;;:::o;23234:::-;23400:4;23438:2;23427:9;23423:18;23415:26;;23487:9;23481:4;23477:20;23473:1;23462:9;23458:17;23451:47;23515:131;23641:4;23515:131;:::i;:::-;23507:139;;23234:419;;;:::o;23659:::-;23825:4;23863:2;23852:9;23848:18;23840:26;;23912:9;23906:4;23902:20;23898:1;23887:9;23883:17;23876:47;23940:131;24066:4;23940:131;:::i;:::-;23932:139;;23659:419;;;:::o;24084:::-;24250:4;24288:2;24277:9;24273:18;24265:26;;24337:9;24331:4;24327:20;24323:1;24312:9;24308:17;24301:47;24365:131;24491:4;24365:131;:::i;:::-;24357:139;;24084:419;;;:::o;24509:::-;24675:4;24713:2;24702:9;24698:18;24690:26;;24762:9;24756:4;24752:20;24748:1;24737:9;24733:17;24726:47;24790:131;24916:4;24790:131;:::i;:::-;24782:139;;24509:419;;;:::o;24934:::-;25100:4;25138:2;25127:9;25123:18;25115:26;;25187:9;25181:4;25177:20;25173:1;25162:9;25158:17;25151:47;25215:131;25341:4;25215:131;:::i;:::-;25207:139;;24934:419;;;:::o;25359:::-;25525:4;25563:2;25552:9;25548:18;25540:26;;25612:9;25606:4;25602:20;25598:1;25587:9;25583:17;25576:47;25640:131;25766:4;25640:131;:::i;:::-;25632:139;;25359:419;;;:::o;25784:::-;25950:4;25988:2;25977:9;25973:18;25965:26;;26037:9;26031:4;26027:20;26023:1;26012:9;26008:17;26001:47;26065:131;26191:4;26065:131;:::i;:::-;26057:139;;25784:419;;;:::o;26209:::-;26375:4;26413:2;26402:9;26398:18;26390:26;;26462:9;26456:4;26452:20;26448:1;26437:9;26433:17;26426:47;26490:131;26616:4;26490:131;:::i;:::-;26482:139;;26209:419;;;:::o;26634:::-;26800:4;26838:2;26827:9;26823:18;26815:26;;26887:9;26881:4;26877:20;26873:1;26862:9;26858:17;26851:47;26915:131;27041:4;26915:131;:::i;:::-;26907:139;;26634:419;;;:::o;27059:222::-;27152:4;27190:2;27179:9;27175:18;27167:26;;27203:71;27271:1;27260:9;27256:17;27247:6;27203:71;:::i;:::-;27059:222;;;;:::o;27287:129::-;27321:6;27348:20;;:::i;:::-;27338:30;;27377:33;27405:4;27397:6;27377:33;:::i;:::-;27287:129;;;:::o;27422:75::-;27455:6;27488:2;27482:9;27472:19;;27422:75;:::o;27503:311::-;27580:4;27670:18;27662:6;27659:30;27656:56;;;27692:18;;:::i;:::-;27656:56;27742:4;27734:6;27730:17;27722:25;;27802:4;27796;27792:15;27784:23;;27503:311;;;:::o;27820:307::-;27881:4;27971:18;27963:6;27960:30;27957:56;;;27993:18;;:::i;:::-;27957:56;28031:29;28053:6;28031:29;:::i;:::-;28023:37;;28115:4;28109;28105:15;28097:23;;27820:307;;;:::o;28133:98::-;28198:4;28221:3;28213:11;;28133:98;;;:::o;28237:104::-;28302:6;28330:4;28320:14;;28237:104;;;:::o;28347:98::-;28398:6;28432:5;28426:12;28416:22;;28347:98;;;:::o;28451:99::-;28503:6;28537:5;28531:12;28521:22;;28451:99;;;:::o;28556:111::-;28624:4;28656;28651:3;28647:14;28639:22;;28556:111;;;:::o;28673:143::-;28770:11;28807:3;28792:18;;28673:143;;;;:::o;28822:168::-;28905:11;28939:6;28934:3;28927:19;28979:4;28974:3;28970:14;28955:29;;28822:168;;;;:::o;28996:147::-;29097:11;29134:3;29119:18;;28996:147;;;;:::o;29149:169::-;29233:11;29267:6;29262:3;29255:19;29307:4;29302:3;29298:14;29283:29;;29149:169;;;;:::o;29324:148::-;29426:11;29463:3;29448:18;;29324:148;;;;:::o;29478:305::-;29518:3;29537:20;29555:1;29537:20;:::i;:::-;29532:25;;29571:20;29589:1;29571:20;:::i;:::-;29566:25;;29725:1;29657:66;29653:74;29650:1;29647:81;29644:107;;;29731:18;;:::i;:::-;29644:107;29775:1;29772;29768:9;29761:16;;29478:305;;;;:::o;29789:96::-;29826:7;29855:24;29873:5;29855:24;:::i;:::-;29844:35;;29789:96;;;:::o;29891:90::-;29925:7;29968:5;29961:13;29954:21;29943:32;;29891:90;;;:::o;29987:77::-;30024:7;30053:5;30042:16;;29987:77;;;:::o;30070:149::-;30106:7;30146:66;30139:5;30135:78;30124:89;;30070:149;;;:::o;30225:131::-;30272:7;30301:5;30290:16;;30307:43;30344:5;30307:43;:::i;:::-;30225:131;;;:::o;30362:89::-;30398:7;30438:6;30431:5;30427:18;30416:29;;30362:89;;;:::o;30457:126::-;30494:7;30534:42;30527:5;30523:54;30512:65;;30457:126;;;:::o;30589:77::-;30626:7;30655:5;30644:16;;30589:77;;;:::o;30672:93::-;30708:7;30748:10;30741:5;30737:22;30726:33;;30672:93;;;:::o;30771:101::-;30807:7;30847:18;30840:5;30836:30;30825:41;;30771:101;;;:::o;30878:131::-;30936:9;30969:34;30997:5;30969:34;:::i;:::-;30956:47;;30878:131;;;:::o;31015:154::-;31099:6;31094:3;31089;31076:30;31161:1;31152:6;31147:3;31143:16;31136:27;31015:154;;;:::o;31175:307::-;31243:1;31253:113;31267:6;31264:1;31261:13;31253:113;;;31352:1;31347:3;31343:11;31337:18;31333:1;31328:3;31324:11;31317:39;31289:2;31286:1;31282:10;31277:15;;31253:113;;;31384:6;31381:1;31378:13;31375:101;;;31464:1;31455:6;31450:3;31446:16;31439:27;31375:101;31224:258;31175:307;;;:::o;31488:320::-;31532:6;31569:1;31563:4;31559:12;31549:22;;31616:1;31610:4;31606:12;31637:18;31627:81;;31693:4;31685:6;31681:17;31671:27;;31627:81;31755:2;31747:6;31744:14;31724:18;31721:38;31718:84;;;31774:18;;:::i;:::-;31718:84;31539:269;31488:320;;;:::o;31814:281::-;31897:27;31919:4;31897:27;:::i;:::-;31889:6;31885:40;32027:6;32015:10;32012:22;31991:18;31979:10;31976:34;31973:62;31970:88;;;32038:18;;:::i;:::-;31970:88;32078:10;32074:2;32067:22;31857:238;31814:281;;:::o;32101:233::-;32140:3;32163:24;32181:5;32163:24;:::i;:::-;32154:33;;32209:66;32202:5;32199:77;32196:103;;;32279:18;;:::i;:::-;32196:103;32326:1;32319:5;32315:13;32308:20;;32101:233;;;:::o;32340:176::-;32372:1;32389:20;32407:1;32389:20;:::i;:::-;32384:25;;32423:20;32441:1;32423:20;:::i;:::-;32418:25;;32462:1;32452:35;;32467:18;;:::i;:::-;32452:35;32508:1;32505;32501:9;32496:14;;32340:176;;;;:::o;32522:180::-;32570:77;32567:1;32560:88;32667:4;32664:1;32657:15;32691:4;32688:1;32681:15;32708:180;32756:77;32753:1;32746:88;32853:4;32850:1;32843:15;32877:4;32874:1;32867:15;32894:180;32942:77;32939:1;32932:88;33039:4;33036:1;33029:15;33063:4;33060:1;33053:15;33080:180;33128:77;33125:1;33118:88;33225:4;33222:1;33215:15;33249:4;33246:1;33239:15;33266:180;33314:77;33311:1;33304:88;33411:4;33408:1;33401:15;33435:4;33432:1;33425:15;33452:180;33500:77;33497:1;33490:88;33597:4;33594:1;33587:15;33621:4;33618:1;33611:15;33638:117;33747:1;33744;33737:12;33761:117;33870:1;33867;33860:12;33884:117;33993:1;33990;33983:12;34007:117;34116:1;34113;34106:12;34130:117;34239:1;34236;34229:12;34253:102;34294:6;34345:2;34341:7;34336:2;34329:5;34325:14;34321:28;34311:38;;34253:102;;;:::o;34361:232::-;34501:34;34497:1;34489:6;34485:14;34478:58;34570:15;34565:2;34557:6;34553:15;34546:40;34361:232;:::o;34599:237::-;34739:34;34735:1;34727:6;34723:14;34716:58;34808:20;34803:2;34795:6;34791:15;34784:45;34599:237;:::o;34842:225::-;34982:34;34978:1;34970:6;34966:14;34959:58;35051:8;35046:2;35038:6;35034:15;35027:33;34842:225;:::o;35073:224::-;35213:34;35209:1;35201:6;35197:14;35190:58;35282:7;35277:2;35269:6;35265:15;35258:32;35073:224;:::o;35303:178::-;35443:30;35439:1;35431:6;35427:14;35420:54;35303:178;:::o;35487:223::-;35627:34;35623:1;35615:6;35611:14;35604:58;35696:6;35691:2;35683:6;35679:15;35672:31;35487:223;:::o;35716:175::-;35856:27;35852:1;35844:6;35840:14;35833:51;35716:175;:::o;35897:228::-;36037:34;36033:1;36025:6;36021:14;36014:58;36106:11;36101:2;36093:6;36089:15;36082:36;35897:228;:::o;36131:233::-;36271:34;36267:1;36259:6;36255:14;36248:58;36340:16;36335:2;36327:6;36323:15;36316:41;36131:233;:::o;36370:182::-;36510:34;36506:1;36498:6;36494:14;36487:58;36370:182;:::o;36558:::-;36698:34;36694:1;36686:6;36682:14;36675:58;36558:182;:::o;36746:174::-;36886:26;36882:1;36874:6;36870:14;36863:50;36746:174;:::o;36926:220::-;37066:34;37062:1;37054:6;37050:14;37043:58;37135:3;37130:2;37122:6;37118:15;37111:28;36926:220;:::o;37152:114::-;;:::o;37272:248::-;37412:34;37408:1;37400:6;37396:14;37389:58;37481:31;37476:2;37468:6;37464:15;37457:56;37272:248;:::o;37526:115::-;37609:1;37602:5;37599:12;37589:46;;37615:18;;:::i;:::-;37589:46;37526:115;:::o;37647:122::-;37720:24;37738:5;37720:24;:::i;:::-;37713:5;37710:35;37700:63;;37759:1;37756;37749:12;37700:63;37647:122;:::o;37775:116::-;37845:21;37860:5;37845:21;:::i;:::-;37838:5;37835:32;37825:60;;37881:1;37878;37871:12;37825:60;37775:116;:::o;37897:120::-;37969:23;37986:5;37969:23;:::i;:::-;37962:5;37959:34;37949:62;;38007:1;38004;37997:12;37949:62;37897:120;:::o;38023:122::-;38096:24;38114:5;38096:24;:::i;:::-;38089:5;38086:35;38076:63;;38135:1;38132;38125:12;38076:63;38023:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2984600","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"3012","getApproved(uint256)":"5300","getBreedFromModdedRng(uint256)":"infinite","getChanceArray()":"infinite","getDogTokenURIs(uint256)":"infinite","getMintFee()":"infinite","getTokenCounter()":"2548","isApprovedForAll(address,address)":"infinite","name()":"infinite","owner()":"2589","ownerOf(uint256)":"3091","rawFulfillRandomWords(uint256,uint256[])":"infinite","renounceOwnership()":"30421","requestNft()":"infinite","s_requestIdToSender(uint256)":"2972","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30835","withdraw()":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getBreedFromModdedRng(uint256)":"a51cccf3","getChanceArray()":"5dacf5f4","getDogTokenURIs(uint256)":"f4eb69c3","getMintFee()":"7a5caab3","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","renounceOwnership()":"715018a6","requestNft()":"aa152491","s_requestIdToSender(uint256)":"a36f573b","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"string[3]\",\"name\":\"dogTokenURIs\",\"type\":\"string[3]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__NeedMoreETHSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__RangeOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum RandomIpfsNft.Breed\",\"name\":\"dogBreed\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"NftMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"NftRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moddedRng\",\"type\":\"uint256\"}],\"name\":\"getBreedFromModdedRng\",\"outputs\":[{\"internalType\":\"enum RandomIpfsNft.Breed\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChanceArray\",\"outputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"\",\"type\":\"uint256[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDogTokenURIs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_requestIdToSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RandomIpfsNft.sol\":\"RandomIpfsNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/RandomIpfsNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nerror RandomIpfsNft__RangeOutOfBounds();\\nerror RandomIpfsNft__NeedMoreETHSent();\\nerror RandomIpfsNft__TransferFailed();\\n\\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage, Ownable {\\n    //Type Declaration\\n    enum Breed {\\n        PUG,\\n        SHIBA_INU,\\n        ST_BERNARD\\n    }\\n\\n    //Chanlink VRF Variables\\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\\n    uint64 private immutable i_subscriptionId;\\n    bytes32 private immutable i_gasLane;\\n    uint32 private immutable i_callbackGasLimit;\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\n    uint32 private constant NUM_WORDS = 1;\\n\\n    //NFT variables\\n    uint256 private s_tokenCounter;\\n    uint256 internal constant MAX_CHANCE_VALUE = 100;\\n    string[] internal s_dogTokenURIs;\\n    uint256 internal immutable i_mintFee;\\n\\n    //Events\\n    event NftRequested(uint256 indexed requestId, address requester);\\n    event NftMinted(Breed dogBreed, address minter);\\n\\n    //VRF helper\\n    mapping(uint256 => address) public s_requestIdToSender;\\n\\n    constructor(\\n        address vrfCoordinatorV2,\\n        uint64 subscriptionId,\\n        bytes32 gasLane,\\n        uint256 mintFee,\\n        uint32 callbackGasLimit,\\n        string[3] memory dogTokenURIs\\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) ERC721(\\\"Random IPFS NFT\\\", \\\"RIN\\\") {\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\n        i_subscriptionId = subscriptionId;\\n        i_gasLane = gasLane;\\n        i_callbackGasLimit = callbackGasLimit;\\n        s_dogTokenURIs = dogTokenURIs;\\n        i_mintFee = mintFee;\\n    }\\n\\n    function requestNft() public payable returns (uint256 requestId) {\\n        if (msg.value < i_mintFee) {\\n            revert RandomIpfsNft__NeedMoreETHSent();\\n        }\\n        requestId = i_vrfCoordinator.requestRandomWords(\\n            i_gasLane,\\n            i_subscriptionId,\\n            REQUEST_CONFIRMATIONS,\\n            i_callbackGasLimit,\\n            NUM_WORDS\\n        );\\n        s_requestIdToSender[requestId] = msg.sender;\\n        emit NftRequested(requestId, msg.sender);\\n    }\\n\\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\\n        address dogOwner = s_requestIdToSender[requestId];\\n        uint256 newTokenId = s_tokenCounter;\\n        s_tokenCounter = s_tokenCounter + 1;\\n        //what does this token look like?\\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\\n        //0-99\\n        //7-> PUG\\n        //88 -> st bernard\\n\\n        Breed dogBreed = getBreedFromModdedRng(moddedRng);\\n\\n        _safeMint(dogOwner, newTokenId);\\n        _setTokenURI(newTokenId, s_dogTokenURIs[uint256(dogBreed)]);\\n        emit NftMinted(dogBreed, dogOwner);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        uint256 amount = address(this).balance;\\n        (bool success, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert RandomIpfsNft__TransferFailed();\\n        }\\n    }\\n\\n    //\\u8fd4\\u56de\\u54c1\\u79cd\\n    function getBreedFromModdedRng(uint256 moddedRng) public pure returns (Breed) {\\n        uint256 cumulativeSum = 0;\\n        uint256[3] memory chanceArray = getChanceArray();\\n        for (uint256 i = 0; i < chanceArray.length; i++) {\\n            // Pug = 0 - 9  (10%)\\n            // Shiba-inu = 10 - 39  (30%)\\n            // St. Bernard = 40 = 99 (60%)\\n            if (moddedRng >= cumulativeSum && moddedRng < chanceArray[i]) {\\n                return Breed(i);\\n            }\\n            cumulativeSum = chanceArray[i];\\n        }\\n        revert RandomIpfsNft__RangeOutOfBounds();\\n    }\\n\\n    function getChanceArray() public pure returns (uint256[3] memory) {\\n        return [10, 30, MAX_CHANCE_VALUE];\\n    }\\n\\n    function getMintFee() public view returns (uint256) {\\n        return i_mintFee;\\n    }\\n\\n    function getDogTokenURIs(uint256 index) public view returns (string memory) {\\n        return s_dogTokenURIs[index];\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n}\\n\",\"keccak256\":\"0xc02d105aceca2ffec48e4d20671f18794c8c447a01bb1bc2f5cba63636f08c7e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":959,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":961,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":965,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":969,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":973,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":979,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2007,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":828,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_owner","offset":0,"slot":"7","type":"t_address"},{"astId":3675,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_tokenCounter","offset":0,"slot":"8","type":"t_uint256"},{"astId":3681,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_dogTokenURIs","offset":0,"slot":"9","type":"t_array(t_string_storage)dyn_storage"},{"astId":3700,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_requestIdToSender","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}